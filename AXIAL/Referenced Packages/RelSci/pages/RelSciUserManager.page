<apex:page controller="rels.RSUserManager" action="{!Action}"
sidebar="false" 
tabStyle="RelSci__tab" 
contentType="text/html"
>
<style type="text/css">

.ui-jqgrid
{
    border-bottom-left-radius: 15px !important;
    border-bottom-right-radius: 15px !important;
    border-top-right-radius: 15px !important;
    border-top-left-radius: 15px!important;
    border: 1px solid #ddd;

    margin: 10px;
}
.ui-widget-content .ui-state-hover
{
    background: #ddd !important;
    border: #f3f3f3 !important;
    color: #ddd !important;
}

.ui-jqgrid-titlebar
{

    font-size:14px !important;
    font-family:Arial,Helvetica,sans-serif;
    font-weight:bold;
    color:black !important;
    background:#f8f8f8 !important;

    padding-left: 10px !important;

    border-top-right-radius: 15px !important;
    border-top-left-radius: 15px !important;

    border-top: none;
    border-bottom: 1px solid #ddd !important;
}
.ui-jqgrid-sortable
{
    font-size:12px;
    color:black;
    font-family:Arial,Helvetica,sans-serif;
    font-weight:bold;
}
.ui-widget-content .ui-state-highlight
{
    background: #ddd !important;
    border-color: #D5D5D5 !important;
}
.ui-widget-content
{
    background: #FFF !important;
}
.ui-jqgrid-sortable
{
    padding-left:10px !important;
    text-align: left !important;
}
.ui-jqgrid-pager
{
    border-top:none;
    border-bottom-right-radius: 15px !important;
    border-bottom-left-radius: 15px !important;
}
tr.ui-row-ltr td {
    padding-left: 10px !important;
}
.sfSearchBox
{
    float:right; 
    margin-right: 20px; 
    padding-left: 10px;

    border: 1px solid #ddd;

    border-bottom-left-radius: 15px;
    border-bottom-right-radius: 15px;
    border-top-right-radius: 15px;
    border-top-left-radius: 15px;
}
.rsBreadcrumb {
    font-family:'Verdana','Geneva',sans-serif !important;
    font-size: 8px;
}
a.rsBreadcrumb {
    color:#015ba7;
    font-family:'Verdana','Geneva',sans-serif !important;
    font-size: 10px;
    text-align: left;
    text-decoration: none;
}
.rsMatchButton {
    float: right;
    padding-right:10px;
    font-size: 12px;
}
.modal-header 
{
     padding: 9px 15px 3px;
     border-bottom: 1px solid #eee;
     height: 47px;
    background-color: white;  
}
.rs-modal-header h4 
{
    font-family: 'ProximaNova-Regular', Arial, sans-serif !important;
    font-size: 16px !important;
    font-weight: normal !important;
    margin-top: 10px !important;
} 
.modal-header 
{
     padding: 9px 15px 3px;
     border-bottom: 1px solid #eee;
     height: 47px;
    background-color: white;  
}
.rsCaseModalCompact
{
    font-family: 'ProximaNova-Regular', Arial, sans-serif;
    position: absolute;
    top: 15% !important;
    left: 50%;
    z-index: 1050;
    overflow: auto;
    height: 150px;
    width: 560px;
    margin: 0 0 0 -280px !important;
    background-color: white;
    border: 1px solid #999;
    border: 1px solid rgba(0,0,0,.3);
    *border: 1px solid #999; /* IE6-7 */
    .border-radius(6px);
    .box-shadow(0 3px 7px rgba(0,0,0,0.3));
    .background-clip(padding-box);
}
.pull-left {
  float: left;
}
.hide { 
    display: none;
  }
.close {
  float: right;
  font-size: 20px;
  font-family: 'ProximaNova-Bold', Arial, sans-serif;
  line-height: 18px;
  color: #000;
  text-shadow: 0 1px 0 rgba(255,255,255,1);
  opacity: 0.2;

}
button.close {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none;
}
.modal-backdrop {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000;
  filter: alpha(opacity=80);/*IE 7*/
  opacity: .8;
  width: 100%;
  height: 100%;
  position: absolute;
  display: block;
 }

</style>
<apex:includeScript value="/soap/ajax/28.0/connection.js"/>
<apex:includeScript value="/soap/ajax/28.0/apex.js"/>
<link rel="stylesheet" type="text/css" media="screen" href="https://static.relsci.com/Content/Crm/ui.jqgrid.css" />
<link rel="stylesheet" type="text/css" media="screen" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/ui-lightness/jquery-ui.min.css" />
<script src="//static.relsci.com/Content/Crm/js/json2.min.js" type="text/javascript"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="https://static.relsci.com/Content/Crm/js/jquery.jqgrid.min.js"></script>
<script src="https://static.relsci.com/Content/Crm/js/grid.locale-en.js"></script>
<script src="https://www.relsci.com/Content/bootstrap/js/bootstrap-modal.js"></script>
<div class="rsBreadcrumb">&nbsp;&lt;&lt;&nbsp;<a class="rsBreadcrumb" href="/apex/Settings">Back to RelSci Admin Controls</a>
    <div class="rsMatchButton">
        <button type="button" id="_rsMatchSFUsertoRSUser" value="Match All" >
        Match Users to RelSci</button>
    </div>
</div>

<div style="padding-top:15px;">
    <table id="_rsUserManager"></table>
    <div id="_rsUserPager"></div>
</div>

<div id="_rsLoadingModal" class="modal hide rsCaseModalCompact" style="z-index:2051;">
        <div class="modal-header rs-modal-header">
            <div class="pull-left">
                <img src="https://www.relsci.com/Content/Images/Logo-Feedback.png" border="0" alt="Logo"></img>
            </div>
                <div class="pull-left">
                    <h4 class="pull-left" style="margin-left:10px;">Matching Users</h4>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
                <div class="clear"></div>
        </div>
        <div>
            <center>
                <img style="display:block; margin:0 auto; padding-top:10px;" src="https://static.relsci.com/Content/Crm/Images/ajax-loader.gif" border="0" />
            </center>
        </div>
</div>
<script>
$('.modal').appendTo($('body'));
sforce.Transport = function(url) {
    this.url = url;
    this.connection = null;

    this.newConnection = function() {
        try {
            this.connection = new ActiveXObject('Msxml2.XMLHTTP');
        } catch(e) {
            try {
                this.connection = new ActiveXObject('Microsoft.XMLHTTP');
            } catch(e) {
                this.connection = new XMLHttpRequest();
            }
        }

        return this.connection;
    };
    
    this.send = function (envelope, callback, async, timeout) {
        this.newConnection();
        if (async) {
            this.connection.onreadystatechange = this.httpConnectionCallback;
        }
        var holder = new sforce.internal.ConnectionHolder(this.connection, callback);
        sforce.internal._connections.push(holder);
        this.connection.open("POST", this.url, async);
        this.connection.setRequestHeader("Content-Type", "text/xml; charset=UTF-8");
        this.connection.setRequestHeader("SOAPAction", "\"\"");
        this.connection.setRequestHeader("Accept", "text/xml");
     //   this.connection.setRequestHeader("User-Agent", "SFAJAX 1.0");
        this.connection.send(envelope);
        if (async && typeof(timeout) !== "undefined") {
            this.setTimeoutOn(holder, timeout);
        }
        if (!async) {
            this.httpConnectionCallback();
        }
    };
 
    this.setTimeoutOn = function (holder, timeout) {
        function abortConnection() {
            if (holder.connection.readyState !== 4) {
                holder.timedout = true;
                holder.connection.abort();
            }
        }
        setTimeout(abortConnection, timeout);
    };

    this.httpConnectionCallback = function () {

        for (var i = 0; i < sforce.internal._connections.length; i++) {
            var holder = sforce.internal._connections[i];
            if (holder !== null) {
                if (holder.timedout) {
                    sforce.internal._connections[i] = null;
                    sforce.internal._connections.slice(i,1);
                    holder.callback.httpCallback("Remote invocation timed out", false);
                } else  if (holder.connection.readyState == 4) {
                    sforce.internal._connections[i] = null;
                    sforce.internal._connections.slice(i,1);
                    var success = holder.connection.status == 200;
                    if (sforce.debug.trace) {
                        sforce.debug.log("Response : status - " + holder.connection.status);
                        sforce.debug.logXml(holder.connection.responseText);
                    }
                    if (sforce.debug.apexTrace) {
                        sforce.debug.logApex(holder.connection.responseText);
                    }
                    if (holder.connection.responseXML && holder.connection.responseXML.documentElement) {
                        holder.callback.httpCallback(holder.connection.responseXML.documentElement, success);
                    } else {
                        holder.callback.httpCallback("Remote invocation failed, due to: " + holder.connection.responseText +
                                                     " status code: ", holder.connection.status);
                    }
                }
            }
        }
    };
};

init();

function init() {
	sforce.connection.sessionId = "{!$Api.Session_ID}";
}



var userObjects = [];

var userFields = ['Id', 'Name', 'Username'];

userObjects = new ObjectAndFields('User', userFields, 'Username')

function ObjectAndFields(type, fields, matchField) {
    
    this.Type = type;   
    this.Fields = fields;
    this.MatchField = matchField;
        
    this.Users = [];
        
    this.ClearData = function () {
        this.Users = [];
    }
    
    this.GetSOQL = function() {
        var s = 'select ';
        for(var i = 0; i < this.Fields.length; i++) {
            if(i != 0)
            {
                s += ', ';
            }
            s += this.Fields[i];
        }   
        return s + ' from '+this.Type + ' where name <> \'Chatter Expert\'';
    } 

};

GetSFData();

function GetSFData()
{   
    GetSFObjects(userObjects);
    _sfFetchObjects = true;     
    
}   

function GetSFObjects(sfObject)
{      
    var resultQuery = sforce.connection.query(sfObject.GetSOQL()); 

    sfObject.Users = resultQuery.getArray("records");
}

PopulateUserManagerGrid();

function PopulateUserManagerGrid() {

    var sfUserIds = [];
    for(var i=0; i<userObjects.Users.length; i++)
    {
        sfUserIds[i] = userObjects.Users[i].Id;
    }
    $("#_rsLoadingModal").modal({ show: true });

    jQuery.ajax({
        type: 'GET',
        cache: false,
        url: "{!URLFOR($Page.RelSciUserAjax)}",
        datatype: 'json',
        data: {
            sfObjects: JSON.stringify(sfUserIds),
            csrf: '{!JSENCODE(csrf)}',
            action: 'getRelSciUserDetails'
        },
        success: function(data) {
            $("#_rsLoadingModal").modal('hide');
            var rsUserList = JSON.parse(data.RelSciUsers);
            
            for(var i=0; i<userObjects.Users.length; i++)
            {
                for(var j=0; j<rsUserList.length; j++)
                {
                    if(rsUserList[j].SalesforceUserId == userObjects.Users[i].Id)
                    {
                        userObjects.Users[i].rsRelationshipCount = rsUserList[j].RelationshipCount;
                        userObjects.Users[i].rsUserId = rsUserList[j].UserlandId;
                        userObjects.Users[i].rsUserName = rsUserList[j].UserName;
                        userObjects.Users[i].rsUserStatusType = rsUserList[j].UserStatusTypeName;
                    }
                }
            }

            jQuery("#_rsUserManager").jqGrid({
                data: userObjects.Users,
                datatype:"local",
                height:'auto',
                rowNum: 50,
                autowidth:true,
                pager: "#_rsUserPager",   
                rowList:[50,75,100],
                colNames: ['Salesforce Username',
                        'RelSci ID',
                        'RelSci Username',
                        'Status',
                        '# of RelSci Relationships',
                        ],
                cmTemplate: { title: false },
                sortname: 'type',
                colModel: [
                        {name:'Username', index:'Username', sortable: false},
                        
                        {name:'rsUserId', index:'rsUserId', sortable: false},
                        
                        {name:'rsUserName', index:'rsUserName', sortable: false },

                        {name:'rsUserStatusType', index:'rsUserStatusType', sortable: false},

                        {name:'rsRelationshipCount', index:'rsRelationshipCount', sorable: false}
                        
                        ],
                multiselect: false, 
                multipleSearch: true,
                ignoreCase: true,
                caption: 'RelSci User Management </span><input class="sfSearchBox" id="searchUsers" size="40px" placeholder="Search for a Salesforce or RelSci user" />',
                gridComplete: function () {
                    } 
            });

            jQuery("#searchUsers").keypress(function(e) {
            if(e.keyCode == 13)
                {
                    e.preventDefault();
                    var searchText = this.value;
                    var grid = jQuery("#_rsUserManager");
                    var postdata = grid.jqGrid('getGridParam','postData');
                    jQuery.extend (postdata,
                                    {
                                        filters: {
                                            groupOp: "OR",
                                            rules: [
                                            {
                                                field: 'Username', op: 'cn', data: searchText
                                            },
                                            {
                                                field: 'rsUserName', op: 'cn', data: searchText
                                            }]
                                        }
                                    });
                    grid.jqGrid('setGridParam', {search: true, postData: postdata});
                    grid.trigger("reloadGrid",[{page:1}]);
                }
            });
        }
    });
}

jQuery("#_rsMatchSFUsertoRSUser").click(function () {
    $("#_rsLoadingModal").modal({ show: true });
    jQuery.ajax({
            type: 'POST',
            cache: false,
            url: "{!URLFOR($Page.RelSciUserAjax)}",
            datatype: 'json',
            data: {
                sfObjects: JSON.stringify(userObjects.Users),
                csrf: '{!JSENCODE(csrf)}',
                action: 'setBulkSalesforceId'
            },
            success: function () {
              $("#_rsLoadingModal").modal('hide');
            }
    });
});


</script>
</apex:page>