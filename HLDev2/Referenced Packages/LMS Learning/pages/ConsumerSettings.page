<apex:page standardController="lmscons__LMS_Consumer_Settings__c" extensions="lmscons.ConsumerSettingsExt" tabStyle="LMS_Consumer_Settings__tab" action="{!loadNotificationSettings}">
<apex:includeScript value="{!URLFOR($Resource.lmscons__LMSSource, 'js/jquery-1.6.4.js')}"/>


	<style type="text/css">
		.imgclass:hover{
			background-image: url(/img/help/helpOrbs.gif);
			background-repeat: no-repeat;
			width: 16px;
			height: 15px;
			background-position: right;
		}
		.imgclass{
			background-image: url(/img/help/helpOrbs.gif);
			background-repeat: no-repeat;
			width: 16px;
			height: 15px;
		}
		.rightAdd{
			background: transparent url(/img/alohaSkin/combobox_arrows_sprite.gif) no-repeat;
			width: 24px;
			height: 20px;
			margin: 0 2px;
			background-position: left -0px;
		}
		.leftRemove{
			background: transparent url(/img/alohaSkin/combobox_arrows_sprite.gif) no-repeat;
			width: 24px;
			height: 20px;
			margin: 0 2px;
			background-position: left -60px;
		}

		#salesFroceSource_StatusBox{
			left: 50% !important;
			top: 50% !important;
		}
	</style>

	<script type="text/javascript">


		prefix = "{!$Site.prefix}" != ''?"{!$Site.prefix}/":"";

		baseURL = "{!LEFT($CurrentPage.URL, FIND( '/apex', $CurrentPage.URL))}"+prefix;
		createMailTemplateURL = baseURL + "p/email/template/NewEmailTemplateStageManager?setupid=CommunicationTemplatesEmail";
		selectMailTemplateURL = baseURL + "apex/s_EmailTemplate";

		editChatterTemplateURL = baseURL + "apex/NotificationSettingChatterTemplate";

		/*
			Opens standard Create Email template window
		*/
		function create_mail_template_popup(){
			popup = window.open( createMailTemplateURL, "Create", 'scrollbars=yes,height=600,width=800');
			if (window.focus){
				popup.focus()
			}
		}

		/*
			Opens window that allows to enter chatter template text for appropriate setting.
			Setting ID is passed to popup via query string.
		*/
		function edit_chatter_template_popup(settingId){
			popup = window.open( editChatterTemplateURL  + '?settingId=' + settingId, "Chatter Template", 'height=600,width=800');
			if (window.focus){
				popup.focus()
			}
		}

		/*
			Opens new window that allows to select email template for appropriate setting.
			Setting ID is passed to popup via query string.
		*/
		function select_mail_template_popup(settingId){
			popup = window.open( selectMailTemplateURL + '?settingId=' + settingId, "Select", 'height=400,width=600');
			if (window.focus){
				popup.focus()
			}
		}

		/*
			Function called from popup window when user selects template. Accepts ID of selected template
			and ID of setting that this template should be assigned to.
		*/
		function setMailTemplateIdForSetting(settingId, mailTemplateId){
			mailTemplateSelected(settingId, mailTemplateId);
		}

		/*
			Function called from popup window when user enters chatter template text. Accepts ID of selected template
			and entered text
		*/
		function setChatterTemplateTextForSetting(settingId, chatterTemplateText){
			//alert('Chatter template: ' + chatterTemplateText + ', for setting id: ' + settingId);
			chatterTemplateChanged(settingId, chatterTemplateText);
		}

		function remove_mail_template(settingId){
			mailTemplateRemoved(settingId);
		}

		function remove_chatter_template(settingId){
			chatterTemplateRemoved(settingId);
		}


	window.onkeypress = handleKeyPress;
	function handleKeyPress(e){
		var eventInstance = window.event ? event : e;
		var keyCode = eventInstance.charCode ? eventInstance.charCode : eventInstance.keyCode;
		if (keyCode == 13){
			var target = eventInstance.target || eventInstance.srcElement;
			if (!(target.id.indexOf('textArea') + 1)){
				afdoSearch();
				return false;
			}
		}
	}

	var newwindow2;

	function open_popup(){
		newwindow2=window.open('{!URLFOR($Page.CyberU_Integration_setup)}','CyberUIntegrationSetup','height=400,width=600');
		if (window.focus) {newwindow.focus()}
	}

	function open_popupLocalization(){
		newwindow2=window.open('{!URLFOR($Page.Localizations)}','CyberUIntegrationSetup','height=600,width=1000');
		if (window.focus) {newwindow.focus()}
	}

	function redirectWindow(){
		window.location.href = window.location.href+'?refresh=1';
	}

	function confirmDelete() {
		if (confirm('{!JSENCODE($Label.ConsumerSettings_jS_Alert1)}')) {
			return true;
		} else {
			return false;
		}
	}

	jQuery.noConflict();

	jQuery(document).ready(function(){
		jQuery('[id$=mTwist1]').find('img').click();

		jQuery('[id$=user_generated_content]').click(function() {
			if (jQuery('[id$=social_learning]').is(':checked') == false) {
				jQuery('[id$=user_generated_content]').attr('checked', false);
			}
		});


		jQuery('[id$=social_learning]').click(function() {
			if (jQuery('[id$=social_learning]').is(':checked') == false) {
				jQuery('[id$=user_generated_content]').attr('checked', false);
			}
		});


	});

	jQuery(document).ready(function(){
		jQuery('[id$=mTwist2]').find('img').click();
		jQuery('[id$=NotificationManagementSection]').find('img').click();
	});

	function forSaveValues(StatusString) {
		SelectRight = document.getElementById(jQuery('[id$=inSelectOptions]').attr('id'));
		var arrayValues = [];
		for (var i=0; i < SelectRight.options.length; i++)
			{
				arrayValues.push(SelectRight.options[i].value);
			}
			StatusString.value = arrayValues.join('//');

	}
	function fromLeftToRight(SelectLeft, SelectRight){
		//var arrayForRemove = [];
		for (var i=0; i < SelectLeft.options.length; i++)
			{
				if (SelectLeft.options[i].selected) {
					SelectRight.options[SelectRight.options.length] = new Option(SelectLeft.options[i].text, SelectLeft.options[i].value);

					//arrayforremove.push(i);
					SelectLeft.options[i]= null;
				}
			}

		/*for(var i=0; i < arrayForRemove.push.length; i++){
			SelectRight.options[arrayForRemove[i]] = null;
		}*/
	}
	function fromRightToLeft(SelectLeft, SelectRight){
		//var arrayForRemove = [];
		for (var i=0; i < SelectRight.options.length; i++)
			{
				if (SelectRight.options[i].selected) {
					SelectLeft.options[SelectLeft.options.length] = new Option(SelectRight.options[i].text, SelectRight.options[i].value);
					//arrayforremove.push(i);
					SelectRight.options[i]= null;
				}
			}
		/*for(var i=0; i < arrayForRemove.push.length; i++){
			SelectRight.options[arrayForRemove[i]] = null;
		}*/
	}

	function confirmCreateSandbox() {
		return confirm('You are about to create a sandbox for {!orgName}.\n Do you wish to proceed?”');
	}

	</script>
<apex:form id="mainform">

	<apex:actionfunction name="previousCall" action="{!previous}" rerender="resultsCU, pageMessages, opPrevNextup, opPrevNextd"  status="loadStatus" />	<!-- oncomplete="intSelectedItemsCount=0;return true;" -->
	<apex:actionfunction name="nextCall" action="{!next}" rerender="resultsCU, pageMessages, opPrevNextup, opPrevNextd"  status="loadStatus" />		<!-- oncomplete="intSelectedItemsCount=0;return true;" -->
	<apex:actionfunction name="afdoSearch" action="{!refreshConsumerUsers}" status="loadStatus" reRender="resultsCU, pageMessages, search_pan, opPrevNextup, opPrevNextd" />
	<apex:actionFunction name="updateUsers" action="{!updateUsers}" rerender="pageMessages, buttonsCyberUIntegration" status="status2"/>
	<apex:actionStatus startText=""  id="busyStatus"
			onStart="document.body.style.cursor = 'wait';return true;"
			onStop="document.body.style.cursor = 'default';return true;" >
	</apex:actionStatus>

	<apex:actionStatus id="status2">
		<apex:facet name="start">
			<c:EnhancedActionStatus BackColor="#efefef" borderColor="#336699" borderSize="1" height="50px" width="120px" ImageUrl="/img/loading.gif" Message="{!$Label.Consumer_Global_Loading}..." messageStyle="color:darkred;font-size:11pt;font-weight:bold;"/>
		</apex:facet>
	</apex:actionStatus>

	<!-- Enhanced Action Status -->
	<apex:actionStatus id="loadStatus">
	<apex:facet name="start">
		<c:EnhancedActionStatus BackColor="#efefef" borderColor="#336699"
						borderSize="1" height="50px" width="120px" ImageUrl="/img/loading.gif"
						Message="{!$Label.Consumer_Global_Loading}..." messageStyle="color:darkred;font-size:11pt;font-weight:bold;"/>
	</apex:facet>
	</apex:actionStatus>
	<!-- END : Enhanced Action Status -->

	<apex:sectionHeader title="{!$Label.ConsumerSettings_title_LMS_Consumer_Settings}" subtitle="{!$Label.ConsumerSettings_subtitle_Register_this_Application_with_CyberU}" />
	<apex:outputPanel id="pageMessages">
		<apex:pageMessages />
	</apex:outputPanel>
	<div style="display:none">
		<apex:inputText value="{!selectedUserTypeString}" id="selectedUserTypeString"/>
	</div>
	<apex:pageBlock rendered="{!isConsumerAndAdminUser}">
		<apex:pageBlockButtons >
			<apex:commandButton action="{!cancel}" value="{!$Label.ConsumerSettings_value_Cancel}" styleClass="btn" />
			<apex:commandButton action="{!saveAndRegister}" value="{!$Label.ConsumerSettings_value_Save}" onclick="forSaveValues(document.getElementById('{!$Component.selectedUserTypeString}'))"  rendered="{!$ObjectType.lmscons__LMSConfig_Learning__c.Updateable}"/>
			<apex:commandButton value="Consumer Users" onclick="window.location.href='/apex/ActivateUsers';return false;" styleClass="btn"/>
		</apex:pageBlockButtons>

		<apex:pageBlockSection id="mTwist1" columns="1" title="{!$Label.ConsumerSettings_title_Organization_Information}">
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$Label.ConsumerSettings_value_Organization_Name}" />
				<apex:outputText value="{!$Organization.Name}" />
			</apex:pageBlockSectionItem>

			<!-- CyberU Client or Ref Id -->
			<apex:pageBlockSectionItem rendered="{!AND(displayUserList,FALSE)}">
				<apex:outputLabel value="{!$Label.ConsumerSettings_value_CyberU_Group_Id}" rendered="{!displayUserList}"/>
				<apex:outputText value="{!lmsConfig.lmscons__Group_Ref_ID__c}" rendered="{!displayUserList}"/>
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$Label.CyberU_Integration}" />
				<apex:outputPanel id="buttonsCyberUIntegration">
					<apex:outputLink value="javascript:void()" onclick="open_popup()" styleClass="btn" style="text-decoration:none">Setup</apex:outputLink>
					&nbsp;&nbsp;<apex:commandLink rendered="{!NOT(groupId == null)}" action="{!testApi}" value="{!$Label.Test_API}" rerender="pageMessages" styleClass="btn" style="text-decoration: none;" Status="loadStatus"/>
					&nbsp;&nbsp;<apex:commandLink onclick="if(!confirmCreateSandbox()) {return false; }" rendered="{!enableCreateSandbox}" action="{!createSandbox}" value="{!$Label.Create_Sandbox}" rerender="pageMessages" style="text-decoration: none;" styleClass="btn" Status="loadStatus"/>
					<apex:commandButton immediate="true" Status="loadStatus" rerender="pageMessages, buttonsCyberUIntegration" rendered="{!isActiveButtonClearOnThePage}" action="{!clearProtectedCustomSettingsButtonAction}" styleClass="btn" value="Clear Custom Settings" onclick="if(confirm('Please verify that you agree to delete all custom settings.')) {} else {return false;}"/>
					&nbsp;&nbsp;<apex:outputLink title="{!$Label.CyberU_Integration}" value="javascript:void()" onclick="open_popupLocalization()" styleClass="btn" style="text-decoration:none"> {!$Label.Localization} </apex:outputLink>
					<apex:commandLink styleClass="btn waiting" style="text-decoration:none" onclick="if(confirm('Are you sure to remove all consumer users?')) {updateUsers();} else {return false;}; return false" value="Clear Consumer Users" rendered="{!isActiveButtonClearUsersOnThePage}"/>
					<apex:outputLabel value="Update User per batch :" rendered="{!isActiveButtonClearUsersOnThePage}" for="limit"/>
					<apex:inputText value="{!limitValue}" rendered="{!isActiveButtonClearUsersOnThePage}" id="limit" style="width:40px"/>
					<apex:outputLabel value="Remaining Users to Update : {!remainingUsers}" rendered="{!isActiveButtonClearUsersOnThePage}"/>
					<apex:outputpanel rendered="{!moreUpdate}">
						<script>
							updateUsers();
						</script>
					</apex:outputpanel>
				</apex:outputPanel>
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Certificate_Page_Name__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Certificate_Page_Name__c}" />
			</apex:pageBlockSectionItem>

		<apex:pageBlockSection columns="2">

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_progress_bar__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_progress_bar__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Secure_Launch_Link__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Secure_Launch_Link__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Enable_My_Training_auto_refresh__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Enable_My_Training_auto_refresh__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_Duration__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_Duration__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Enable_Catalog_Search__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Enable_Catalog_Search__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_Due_Date__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_Due_Date__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Enable_certificate__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Enable_certificate__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_status__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_status__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__shareable_launch_link__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__shareable_launch_link__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_Score__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_Score__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Social_Learning__c.label}" />
				<apex:inputField id="social_learning" value="{!lmsConfig.lmscons__Social_Learning__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_Type__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_Type__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__User_Generated_Learning__c.label}" />
				<apex:inputField id="user_generated_content" value="{!lmsConfig.lmscons__User_Generated_Learning__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Show_Description__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Show_Description__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Is_Public_Link_Available__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Is_Public_Link_Available__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Allow_Unenrollment__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Allow_Unenrollment__c}" />
			</apex:pageBlockSectionItem>

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$Label.ConsumerSettings_MyTeamHierarchy}" styleclass="position:relative;left:5px;"/>
					<apex:outputPanel layout="block" style="position:relative; right:6px; top:-4px;">
						<apex:selectRadio value="{!lmsConfig.lmscons__Use_Manager_field_for_My_Team_hierarchy__c}" readonly="{!NOT($ObjectType.lmscons__LMSConfig_Learning__c.Updateable)}">
							<apex:selectOptions value="{!RoleItems}"/>
						</apex:selectRadio>
					</apex:outputPanel>
			</apex:pageBlockSectionItem>



			<apex:inputHidden value="{!testMode}" />

			<!-- <apex:pageBlockSectionItem rendered="{!$ObjectType.LMS_Consumer_Settings__c.fields.Test_Mode__c.Accessible}">
				<apex:outputLabel value="{!$ObjectType.LMS_Consumer_Settings__c.fields.Test_Mode__c.label}" />
				<apex:inputCheckbox value="{!testMode}" />
			</apex:pageBlockSectionItem> -->

		</apex:pageBlockSection>

		<apex:pageBlockSection columns="1">

			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMSConfig_Learning__c.fields.lmscons__Public_Catalog__c.label}" />
				<apex:inputField value="{!lmsConfig.lmscons__Public_Catalog__c}" />
			</apex:pageBlockSectionItem>

		</apex:pageBlockSection>
		<apex:pageBlockSection columns="1" rendered="{!SFDCDemo}">
			<apex:pageBlockSectionItem dataStyle="white-space: nowrap;">
				<apex:outputText value="{!$ObjectType.lmscons__LMSConfig_Learning__c.Fields.lmscons__Available_user_types__c.Label}" escape="false" style="white-space: nowrap;"/>
				<apex:outputPanel >
					<apex:outputpanel layout="block" >
						<apex:selectList size="4" id="outSelectOptions" style="width">
							<apex:selectOptions value="{!availableUserTypes}"/>
						</apex:selectList>
						<apex:outputpanel style="display:inline-block; hight:100%; margin:5px; ">
							<a href="javascript:fromLeftToRight(document.getElementById('{!$Component.outSelectOptions}'),document.getElementById('{!$Component.inSelectOptions}'));" style="display:block">
								<img src="/s.gif" alt="{!$Label.Add}" class="rightAdd" title="{!$Label.Add}"/>
							</a>
							<a href="javascript:fromRightToLeft(document.getElementById('{!$Component.outSelectOptions}'),document.getElementById('{!$Component.inSelectOptions}'));">
								<img src="/s.gif" alt="{!$Label.remove}" class="leftRemove" title="{!$Label.remove}"/>
							</a>
						</apex:outputpanel>
						<apex:selectList size="4" id="inSelectOptions"  style="vertical-align:top;" >
							<apex:selectOptions value="{!selectedUserTypes}"/>
						</apex:selectList>
					</apex:outputpanel>
				</apex:outputPanel>
			</apex:pageBlockSectionItem>
		</apex:pageBlockSection>

		<apex:pageBlockSection columns="1">
			<apex:pageBlockSectionItem >
				<apex:outputLabel value="{!$ObjectType.lmscons__LMS_Consumer_Settings__c.fields.lmscons__Custom_Message__c.label}"/>
				<apex:outputPanel >
					<apex:selectRadio value="{!TextArea}">
						<apex:selectOption itemValue="true" itemLabel="Rich Text (formatting, no HTML support)"/>
						<apex:selectOption itemValue="false" itemLabel="Plain Text (HTML support)"/>
						<apex:actionSupport event="onchange" action="{!returnTrueFalseRichText}" rendered="{!isUpdateAble}"/>
					</apex:selectRadio>
					<apex:inputTextarea value="{!settings.lmscons__Custom_Message__c}" richText="{!TextArea}" rows="6" style="width:90%;" id="textArea"/>
				</apex:outputPanel>
			</apex:pageBlockSectionItem>
		</apex:pageBlockSection>

		</apex:pageBlockSection>

			<apex:pageBlockSection columns="1" title="Default License Information"  id="mTwist2">
				<apex:inputField value="{!settings.lmscons__Default_License_Term__c}" required="true" />
				<apex:inputField value="{!settings.lmscons__Default_License_Period__c}" required="true" />
				<apex:inputField value="{!settings.lmscons__Default_Seats__c}" />
			</apex:pageBlockSection>



				<!-- Notification Management block -->
				<apex:pageBlockSection columns="1" title="{!$Label.Notification_Management}" id="NotificationManagementSection" >
				<apex:pageBlockTable value="{!notificationSettings}" var="item">
						<apex:column headerValue="{!$Label.Enabled}">
							<apex:inputCheckbox value="{!item.setting.lmscons__Enabled__c}" disabled="{!NOT(PermissionsCustomizeApplication)}"/>
						</apex:column>
						<apex:column headerValue="{!$Label.Notification}">
							<apex:outputText value="{!item.setting.Name}" />
						</apex:column>

						<apex:column headerValue="{!$Label.ConsumerUser_value_Email}">
							<apex:outputPanel rendered="{!ISBLANK(item.setting.lmscons__Email__c)}">
								<apex:outputLink value="javascript:select_mail_template_popup('{!item.setting.Id}')" rendered="{!PermissionsCustomizeApplication}">
									{!$Label.Select_Email_Template}
								</apex:outputLink>
								<apex:outputText value=" | " rendered="{!PermissionsCustomizeApplication}"/>
								<apex:outputLink value="javascript:create_mail_template_popup()" rendered="{!PermissionsCustomizeApplication}">
									{!$Label.Create_Email_Template}
								</apex:outputLink>
								<!-- <img src="/s.gif" Class="imgclass" title="{!$Label.CreateMailTemplateHelpText}" />-->
								</apex:outputPanel>
								<apex:outputPanel rendered="{!NOT(ISBLANK(item.setting.lmscons__Email__c))}">
									<apex:outputText value="{!item.mailTemplateName}" />
									<apex:outputText value=" " />
									<apex:outputLink value="javascript:remove_mail_template('{!item.setting.Id}')" rendered="{!PermissionsCustomizeApplication}">
										{!$Label.ConsumerSettings_value_Delete}
									</apex:outputLink>
								</apex:outputPanel>
						</apex:column>

						<apex:column headerValue="{!$Label.Chatter}">
							<apex:outputPanel rendered="{!ISBLANK(item.setting.lmscons__Chatter__c)}">
								<apex:outputLink value="#" onclick="edit_chatter_template_popup('{!item.setting.Id}')" rendered="{!PermissionsCustomizeApplication}">
									{!$Label.Create_Chatter_Template}
								</apex:outputLink>
								<!-- <img src="/s.gif" Class="imgclass" title="{!$Label.CreateChatterTemplateHelpText}" /> -->
							</apex:outputPanel>
							<apex:outputPanel rendered="{!NOT(ISBLANK(item.setting.lmscons__Chatter__c))}" >
								<apex:outputLink value="#" onclick="edit_chatter_template_popup('{!item.setting.Id}')" rendered="{!PermissionsCustomizeApplication}">
									{!$Label.Edit_Chatter_Template}
								</apex:outputLink>
								<!-- <img src="/s.gif" Class="imgclass" title="{!$Label.CreateChatterTemplateHelpText}" /> -->
								<apex:outputText value=" " />
								<apex:outputLink value="javascript:remove_chatter_template('{!item.setting.Id}')" rendered="{!PermissionsCustomizeApplication}">
									{!$Label.ConsumerSettings_value_Delete}
								</apex:outputLink>
							</apex:outputPanel>
						</apex:column>

				</apex:pageBlockTable>
				<apex:pageMessage summary="{!$Label.CreateMailTemplateHelpText}" severity="Info" strength="3" escape="false"/><apex:pageMessages />
				</apex:pageBlockSection>

				<apex:actionFunction name="mailTemplateSelected" action="{!mailTemplateSelected}" rerender="NotificationManagementSection">
					<apex:param name="settingId" value="" assignTo="{!settingId}" />
					<apex:param name="mailTemplateId" value="" assignTo="{!mailTemplateId}" />
				</apex:actionFunction>

				<apex:actionFunction name="mailTemplateRemoved" action="{!mailTemplateRemoved}" rerender="NotificationManagementSection">
					<apex:param name="settingId" value="" assignTo="{!settingId}" />
				</apex:actionFunction>

				<apex:actionFunction name="chatterTemplateChanged" action="{!chatterTemplateChanged}" rerender="NotificationManagementSection">
					<apex:param name="settingId" value="" assignTo="{!settingId}" />
					<apex:param name="mailTemplateId" value="" assignTo="{!chatterTemplate}" />
				</apex:actionFunction>

				<apex:actionFunction name="chatterTemplateRemoved" action="{!chatterTemplateRemoved}" rerender="NotificationManagementSection">
					<apex:param name="settingId" value="" assignTo="{!settingId}" />
				</apex:actionFunction>
	</apex:pageBlock>

	<apex:actionFunction action="{!InitConsumerUsers}" name="InitConsumerUsers" status="loadStatus" reRender="resultsCU, pageMessages, search_pan, opPrevNextup, opPrevNextd"/>


</apex:form>

</apex:page>