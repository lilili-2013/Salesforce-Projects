<apex:page standardcontroller="Contact">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/jquery-1.6.2.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/jquery-ui-1.8.1.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/Mdl.JQueryExtensions.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/jq.CreateElements.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/jquery.timers-1.2.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/json2.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/MicrosoftAjax.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/jquery.cookie.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/IE6_select_fix.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/common/jquery.popupWindow.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/TypeDefinitions.js"></script>

<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/controllers/jq.Controller_combine.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/linkers/jq.Linker_combine.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/helpers/jq.WidgetHelper_combine.js"></script>
<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/logging/jq.logging_combine.js"></script>
<link rel="Stylesheet" type="text/css" href="https://generalatlantic.boardex.com/public/v4.0/css/defaultStatic.css" />
<link rel="Stylesheet" type="text/css" href="https://generalatlantic.boardex.com/WidgetUIServices/Areas/P2P/Content/Styles/P2PVisualisationStructure.css" />
<link rel="Stylesheet" type="text/css" href="https://generalatlantic.boardex.com/WidgetUIServices/Areas/P2P/Content/Styles/P2PVisualisation.css" />
<link rel="Stylesheet" type="text/css" href="https://generalatlantic.boardex.com/public/v4.0/css/profileOverviewStatic.css" />
<!-- Insert client specific stylesheet here in place of boardexClient.css -->
<link rel="Stylesheet" type="text/css" href="https://generalatlantic.boardex.com/public/v4.0/css/boardexClient.css" />
<link rel="Stylesheet" type="text/css" href="https://generalatlantic.boardex.com/main.css" />


<div id="BoardExWidgetContainer"></div>

<script type="text/javascript">
var boardExWidgetController = function() {
    function initServiceInfo() {
        var serviceInfo = new Widgets.ServiceInfo();
        serviceInfo.setWidgetVersion(4.0);
        serviceInfo.setServiceKey("6da1724c-e19f-4ce8-bd5c-b5484aa6c995");
        serviceInfo.setServiceUrl("https://generalatlantic.boardex.com/");
        serviceInfo.setBoardExUrl("https://www.boardex.com");
        serviceInfo.setReportingUrl("https://generalatlantic.boardex.com/Reporting");
        serviceInfo.setWidgetRootUrl("https://generalatlantic.boardex.com/");
        serviceInfo.setWidgetUIServicesUrl("https://generalatlantic.boardex.com/WidgetUIServices");
        serviceInfo.setPlatformInputAdminRootUrl("https://RCMAdmin.boardex.com/Administration");
        serviceInfo.setPlatformOutputWebRootUrl("https://generalatlantic.boardex.com/Web");
        serviceInfo.setAllowIndividualLogin(true);        
        return serviceInfo;
    }
    function initStyles() {
        var styles = new Widgets.Styles();
        styles.setWidth("800px");
        styles.setHeight(($(document).height()-30)+"px");
        styles.setFontName("Arial, Helvetica, Sans-Serif");
        styles.setFontSize("8pt");
        styles.setBackgroundColour("#FFFFFF");
        styles.setResultsHeaderBackgroundColour("#6E6358");
        styles.setNormalTextColour("#000000");
        styles.setResultsHeaderTextColour("#FFFFFF");
        styles.setHighlightedTextColour("#E60000");
        styles.setColumnHeaderBackgroundColour("#ECEFF1");
        styles.setHyperlinksColour("#3B6E8F");
        styles.setColumnHeaderTextColour("#464646");
        styles.setSecondHeaderBackgroundColour("#464646");
        styles.setSecondHeaderTextColour("#FFFFFF");
        styles.setResultsTextColour("#000000");
        styles.setResultsBackgroundColour("#FFFFFF");
        styles.setResultsLineSeparatorColour("#82786F");
        styles.setTabBackgroundColour("#6E6358");
        styles.setTabTextColour("#FFFFFF");
        styles.setSelectedTabTextColour("#000000");        
        return styles;
    }
    function initOptions() {
        var options = new Widgets.Options();
        options.setResultsPerPage(20);
        options.setShowPageNavigation(true);
        options.setP2PResultsPerPage(10);
        options.setP2PAutoExpandResults(true);
        options.setStartP2PAtOurNetwork(true);
        options.setShow3rdDegreeForOurNetwork2Individuals(false);
        options.setEnableContactPrioritisation(true);
        options.setReportingDownloadType(0);
        options.setShowWord2003(false);
        options.setShowWord2007(true);
        options.setShowPdf(true);
        options.setEnableReporting(true);
        options.setHideGreyStars(true);
        options.setHidePersonalFlag(false);
        options.setFirstDegreeDownloadLimit(500);
        options.setSecondDegreeDownloadLimit(100);
        options.setNetworkDownloadLimit(3000);
        options.setShowColleagueFilter(true);
        options.setDefaultStartupSearchWidgetName("search");
        options.setHideP2PMenuItems(false);
        options.setHideUsername(true);
        options.setShowVisualP2PResults(true);
        options.setUsingStylesheet(true);
        options.setClientStylesheetName("boardexclient.css");
        options.setAutoRedirectForSingleSearchResult(true);
        return options;
    }
    function initCustomDictionary() {
    
        var dictionary = new Widgets.TermDictionaryController();
        dictionary.addTermDefinition("1st Degree", "1st Degree"); 
        dictionary.addTermDefinition("2nd Degree", "2nd Degree"); 
        dictionary.addTermDefinition("Achievements", "Achievements"); 
        dictionary.addTermDefinition("Activities", "Activities"); 
        dictionary.addTermDefinition("AdvancedSearchName", "Advanced Search"); 
        dictionary.addTermDefinition("AlertNotificationsName", "My Alerts"); 
        dictionary.addTermDefinition("All my colleagues", "All my colleagues"); 
        dictionary.addTermDefinition("AlreadySubscribedToAlerts", "Following"); 
        dictionary.addTermDefinition("Business Contact", "Business Contact"); 
        dictionary.addTermDefinition("ColleagueName", "Colleague"); 
        dictionary.addTermDefinition("ColleagueSearchName", "Explore Company Structure"); 
        dictionary.addTermDefinition("CombinedSearch", "Combined Search"); 
        dictionary.addTermDefinition("ContactNetworkName", "General Atlantic Network"); 
        dictionary.addTermDefinition("Current Connections Only", "Current Connections Only"); 
        dictionary.addTermDefinition("DashboardListNotAnalysed", "This list will not be available for Dashboard use until tomorrow."); 
        dictionary.addTermDefinition("Dashboards", "Dashboards"); 
        dictionary.addTermDefinition("Direct Connection", "Direct Connection"); 
        dictionary.addTermDefinition("Education", "Education"); 
        dictionary.addTermDefinition("EmailNotificationLabel", "Notify me by Email:"); 
        dictionary.addTermDefinition("Employment", "Employment"); 
        dictionary.addTermDefinition("Enter user name", "Enter user name"); 
        dictionary.addTermDefinition("Exclude Non-Brd", "Exclude Non-Brd"); 
        dictionary.addTermDefinition("Exclude Non-Brd to SD", "Exclude Non-Brd to SD"); 
        dictionary.addTermDefinition("Filter by User", "Filter by User"); 
        dictionary.addTermDefinition("Find Relationship", "Find Relationship"); 
        dictionary.addTermDefinition("FollowCheckboxTooltip", "Receive alerts for this Individual"); 
        dictionary.addTermDefinition("FollowMembersInCreatedList", "Follow members in created list"); 
        dictionary.addTermDefinition("From List", "list"); 
        dictionary.addTermDefinition("GlobalExclusionsManagementName", "Global Exclusions"); 
        dictionary.addTermDefinition("Go", "Go"); 
        dictionary.addTermDefinition("Hide my relationship", "Hide my relationship"); 
        dictionary.addTermDefinition("High permissioned colleagues only", "High permissioned colleagues only"); 
        dictionary.addTermDefinition("HomeMenu", "Home"); 
        dictionary.addTermDefinition("IndividualListSubscriptionPartsHeadingLabel", "Follow these events for individuals in this list:"); 
        dictionary.addTermDefinition("IndividualListSubscriptionsSubscribeTooltip", "follow individuals in this list"); 
        dictionary.addTermDefinition("IndividualListSubscriptionsUnsubscribeTooltip", "stop following individuals in this list"); 
        dictionary.addTermDefinition("IndividualSortOptionName", "name"); 
        dictionary.addTermDefinition("IndividualSubscriptionPartsHeadingLabel", "Follow these events for this Individual:"); 
        dictionary.addTermDefinition("IndividualSubscriptionsSubscribeTooltip", "receive alerts for this individual"); 
        dictionary.addTermDefinition("IndividualSubscriptionsUnsubscribeTooltip", "stop receiving alerts for this individual"); 
        dictionary.addTermDefinition("KnownTo", "Known To"); 
        dictionary.addTermDefinition("ManageSettings", "Manage Your Settings"); 
        dictionary.addTermDefinition("ManualIncrementalUpdateWarning_Duplication", "Update is already in progress"); 
        dictionary.addTermDefinition("ManualIncrementalUpdateWarning_FullBuildInProgress", "Update is already in progress"); 
        dictionary.addTermDefinition("ManualIncrementalUpdateWarning_NoPermissions", "Dashboards are not yet available on your account. Lists will be prepared overnight"); 
        dictionary.addTermDefinition("ManualIncrementalUpdateWarning_SQL", "Server Error, please try again later"); 
        dictionary.addTermDefinition("Medium and High permissioned colleagues", "Medium and High permissioned colleagues"); 
        dictionary.addTermDefinition("Members", "Members"); 
        dictionary.addTermDefinition("MyAdvancedSearchMenu", "Advanced Search"); 
        dictionary.addTermDefinition("MyAlertsManagementName", "Alerts Management"); 
        dictionary.addTermDefinition("MyColleaguesManagementName", "Colleague Management"); 
        dictionary.addTermDefinition("MyColleaguesName", "My Colleagues"); 
        dictionary.addTermDefinition("MyContactsManagementName", "Contact Management"); 
        dictionary.addTermDefinition("MyContactsMenu", "Contacts"); 
        dictionary.addTermDefinition("MyDashboardsMenu", "Dashboards"); 
        dictionary.addTermDefinition("MyIndListsManagementName", "Individual Lists"); 
        dictionary.addTermDefinition("MyIndListSubscriptionsMenu", "Individual List Alerts"); 
        dictionary.addTermDefinition("MyIndSubscriptionsMenu", "Individual Alerts"); 
        dictionary.addTermDefinition("MyListsManagementName", "List Management"); 
        dictionary.addTermDefinition("MyNetworkName", "My"); 
        dictionary.addTermDefinition("MyOrgListsManagementName", "{Organisation} Lists"); 
        dictionary.addTermDefinition("MyOrgListSubscriptionsMenu", "{Organisation} List Alerts"); 
        dictionary.addTermDefinition("MyOrgSubscriptionsMenu", "{Organisation} Alerts"); 
        dictionary.addTermDefinition("MyPrioritisationMenu", "{Prioritisation} Settings"); 
        dictionary.addTermDefinition("MySubscriptionsMenu", "Alerts Management"); 
        dictionary.addTermDefinition("NoLongerSubscribedMessage", "Subscription will be removed as you are no longer following anything"); 
        dictionary.addTermDefinition("Non-Commercial", "Non-Commercial"); 
        dictionary.addTermDefinition("Non-quoted", "Private"); 
        dictionary.addTermDefinition("Not for Profit", "Non-Profit"); 
        dictionary.addTermDefinition("OrganisationDetails", "Details"); 
        dictionary.addTermDefinition("OrganisationListSubscriptionPartsHeadingLabel", "Follow these events for {organisation}s in this list:"); 
        dictionary.addTermDefinition("OrganisationListSubscriptionsSubscribeTooltip", "follow {organisation}s in this list"); 
        dictionary.addTermDefinition("OrganisationListSubscriptionsUnsubscribeTooltip", "stop following {organisation}s in this list"); 
        dictionary.addTermDefinition("OrganisationNoLongerSubscribedMessage", "{Organisation}s will be removed as you are no longer following them"); 
        dictionary.addTermDefinition("OrganisationSubscriptionPartsHeadingLabel", "Follow these events for this {organisation}:"); 
        dictionary.addTermDefinition("OrganisationSubscriptionsSubscribeTooltip", "receive alerts for this {organisation}"); 
        dictionary.addTermDefinition("OrganisationSubscriptionsUnsubscribeTooltip", "stop receiving alerts for this {organisation}"); 
        dictionary.addTermDefinition("Other Activities", "Other Affiliations"); 
        dictionary.addTermDefinition("Others", "Others"); 
        dictionary.addTermDefinition("OurNetworkName", "General Atlantic"); 
        dictionary.addTermDefinition("PermissionSortOptionName", "permission"); 
        dictionary.addTermDefinition("Personal Contact", "Personal Contact"); 
        dictionary.addTermDefinition("Point2PointName", "Relationship Search"); 
        dictionary.addTermDefinition("Professional", "Professional"); 
        dictionary.addTermDefinition("Qualifications", "Qualifications"); 
        dictionary.addTermDefinition("QuickSearch", "Search"); 
        dictionary.addTermDefinition("Quoted", "Public"); 
        dictionary.addTermDefinition("Relationship Type", "Relationship Type"); 
        dictionary.addTermDefinition("RelationshipPlanningDescription", "View the summary of your company?s relationships with lists of your clients or prospects"); 
        dictionary.addTermDefinition("RelationshipPlanningName", "Relationship Planning"); 
        dictionary.addTermDefinition("RelationshipRiskDescription", "Compare how well your company is connected to key individuals at lists of your clients or prospects"); 
        dictionary.addTermDefinition("RelationshipRiskName", "Relationship Risk"); 
        dictionary.addTermDefinition("Route to Target", "Route to Target"); 
        dictionary.addTermDefinition("Search", "Search"); 
        dictionary.addTermDefinition("SeniorityFilter.AllBoardRoles", "All Board roles"); 
        dictionary.addTermDefinition("SeniorityFilter.AllEmployment", "All Employment"); 
        dictionary.addTermDefinition("SeniorityFilter.ExecutiveDirectors", "Executive Directors"); 
        dictionary.addTermDefinition("SeniorityFilter.NonExecutiveDirectors", "Non Executive Directors"); 
        dictionary.addTermDefinition("SeniorityFilter.SeniorManagers", "Senior Managers"); 
        dictionary.addTermDefinition("Show 'A Colleague'", "Show 'A Colleague'"); 
        dictionary.addTermDefinition("Show my name", "Show my name"); 
        dictionary.addTermDefinition("StarRatingSortOptionName", "star rating"); 
        dictionary.addTermDefinition("Subscribe", "Follow"); 
        dictionary.addTermDefinition("SubscribeToAlerts", "Follow"); 
        dictionary.addTermDefinition("SubscribeToAlertsFollowLink", "follow"); 
        dictionary.addTermDefinition("SubscribeToAlertsLabel", "Alerts"); 
        dictionary.addTermDefinition("SubscribeToAlertsUnfollowLink", "unfollow"); 
        dictionary.addTermDefinition("Unsubscribe", "Unfollow"); 
        dictionary.addTermDefinition("ViewDashboards", "View the Dashboards."); 
        dictionary.addTermDefinition("VisibilitySortOptionName", "visibility"); 
        dictionary.addTermDefinition("VisualP2PAnExternalInfluencerHeader", "An external influencer"); 
        dictionary.addTermDefinition("VisualP2PAnIndividualHeader", "An individual"); 
        dictionary.addTermDefinition("VisualP2PAnInternalInfluencerHeader", "An internal influencer"); 
        dictionary.addTermDefinition("VisualP2PColleaguesHeader", "Your colleagues"); 
        dictionary.addTermDefinition("VisualP2PConnectionsHeader", "Connections"); 
        dictionary.addTermDefinition("VisualP2PYourStartPointHeader", "Your start point"); 
        dictionary.addTermDefinition("VisualP2PYourTargetHeader", "Your target"); 
        return dictionary;
    }
    function initNetworkRatings() {
    var dictionary = {};
    
        dictionary["300"] = "All my colleagues"; 
        dictionary["200"] = "Medium and High permissioned colleagues"; 
        dictionary["100"] = "High permissioned colleagues only"; 
        return dictionary;
    }
    function initNetworkVisibility() {
    var dictionary = {};
    
        dictionary["3"] = "Show my name"; 
        dictionary["2"] = "Show 'A Colleague'"; 
        dictionary["1"] = "Hide my relationship"; 
        return dictionary;
    }
    function initLoggers(controller) {
        var logger = new Widgets.NoLogger();
        controller.setLogger(logger);
        controller.setPerformanceLogger(new Widgets.NoPerformanceLogger(logger));       
    }
    
    var controller = new Widgets.Controller($("#BoardExWidgetContainer"), initServiceInfo(), initStyles(), initOptions(), initCustomDictionary(), initNetworkVisibility(), initNetworkRatings());
    initLoggers(controller);
    
    controller.addLinker("profile", new Widgets.ProfileWidgetLinker());
    controller.addLinker("summary", new Widgets.SummaryWidgetLinker());
    controller.addLinker("indNetwork", new Widgets.IndividualNetworkWidgetLinker());
    controller.addLinker("orgNetwork", new Widgets.OrganisationNetworkWidgetLinker());
    controller.addLinker("reporting", new Widgets.ReportingOptionsPopupWidgetLinker()); 
    controller.addLinker("p2pReporting", new Widgets.P2PReportingOptionsPopupWidgetLinker());
    controller.addLinker("networkReporting", new Widgets.NetworkReportingOptionsPopupWidgetLinker());
    controller.addLinker("contactNetwork", new Widgets.ContactNetworkWidgetLinker());
    controller.addLinker("userColleagues", new Widgets.UserColleaguesLinker());
    controller.addLinker("myContacts", new Widgets.MyContactsLinker());
    controller.addLinker("userIndLists", new Widgets.UserIndividualListsWidgetLinker());
    controller.addLinker("userOrgLists", new Widgets.UserOrganisationListsWidgetLinker());
    controller.addLinker("alertNotifications", new Widgets.AlertNotificationsWidgetLinker());
    controller.addLinker("advancedSearch", new Widgets.AdvancedSearchWidgetLinker());
    
    controller.addLinker("search", new Widgets.SearchWidgetLinker());
    controller.addLinker("combinedSearch", new Widgets.CombinedSearchWidgetLinker());
    controller.addLinker("p2pSearch", new Widgets.Point2PointSearchWidgetLinker());                                      
    controller.addLinker("p2pResults", new Widgets.Point2PointWidgetLinker());

              
    controller.addLinker("logout", new Widgets.NoLinker());     
    controller.addLinker("adminUser", new Widgets.AdminUserPopupWidgetLinker());
    controller.addLinker("knownTo", new Widgets.KnownToColleaguePopupLinker());
    controller.addLinker("addToList", new Widgets.AddToListPopupWidgetLinker());
    controller.addLinker("managePopup", new Widgets.ManagePopupWidgetLinker());
    controller.addLinker("userPrioritisation", new Widgets.UserPrioritisationLinker());
    controller.addLinker("addContact", new Widgets.AddContactPopupWidgetLinker());
    controller.addLinker("alertsManagement", new Widgets.MyAlertsLinker());
    controller.addLinker("alertsRss", new Widgets.AlertsRssLinker());
    controller.addLinker("dashboards", new Widgets.DashboardsLinker());
       
    
    
    return controller;
}();
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.SearchWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new SearchWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.ProfileWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new ProfileWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.SummaryWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new SummaryWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.Point2PointSearchWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new Point2PointSearchWidget());
</script>



<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.Point2PointVisualResultsWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new Point2PointVisualResultsWidget());
</script>
    

<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.P2PExpandedConnectionPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new P2PExpandedConnectionPopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.IndividualNetworkWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new IndividualNetworkWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.OrganisationNetworkWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new OrganisationNetworkWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.LogOnWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new LogOnWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.AdminUserPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new AdminUserPopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.ManagePopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new ManagePopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.KnownToColleaguePopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new KnownToColleaguePopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.UserListsPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new UserListsPopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.ContactNetworkWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new ContactNetworkWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.ReportingOptionsPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new ReportingOptionsPopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.P2PReportingOptionsPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new P2PReportingOptionsPopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.NetworkReportingOptionsPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new NetworkReportingOptionsPopupWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.ContactPopupWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new ContactPopupWidget());
</script>



<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.CombinedSearchWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new CombinedSearchWidget());
</script>


<script type="text/javascript" src="https://generalatlantic.boardex.com/public/v4.0/scripts/jq.AlertNotificationsWidget.js"></script>
<script type="text/javascript">
    boardExWidgetController.addWidget(new AlertNotificationsWidget());
</script>

<script type="text/javascript">
    $(document).ready(function() {

        boardExWidgetController.loginWithKeyOnly(
                                    '69010cb6-f396-479e-85df-0a0d8711212f',
                function() {
                    // Supply the callback function. Show the Profile widget
                    boardExWidgetController.showNewWidget(function() {

                    if ("{!contact.BXIndividualID__c}" != "")
                        {
                            boardExWidgetController.getWidget('profile').show(parseInt("{!contact.BXIndividualID__c}"));
                        }
                        else
                        {
                            boardExWidgetController.getWidget('search').show("{!contact.name}", SearchWidget.searchType.individual, 'Search');
                        }
                    });
                });

    });
</script>
</apex:page>