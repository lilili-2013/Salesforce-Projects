<apex:page controller="ts2.JobOrdersStageRecordsUpdateController" >

	<apex:includeScript value="{!URLFOR($Resource.ts2__jQuery, 'jquery-1.8.2.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.ts2__SSearch, 'res/js/s_js.js')}" />

	<apex:stylesheet value="{!URLFOR($Resource.ts2__SSearch, 'res/css/s_style.css')}" />

<apex:form >
<apex:outputText id="global_vars" value="
	global_vars = {
		AllBatchesCompleted:{!AllBatchesCompleted}
	};
" style="display:none;"/>

	<apex:pageMessages id="pageMessages" />

<apex:outputPanel id="pnDescription" rendered="{!IsCurrentUserSystemAdmin}" >
<p>
By clicking the button below you will be updating all existing stage records in the system by populating the following fields pulled from the Job Order record the Stage record is assigned to.
</p>
<p>
> Account (Account Object)<br/>
> Contact (Contact Object)<br/>
> Primary Recruiter (User Object)<br/>
> Secondary Recruiter (User Object)<br/>
> Hiring Manager (User Object)<br/>
> Project (Project Object)<br/>
</p>
<p>
If the field is already populated on the Stage record it will not be overwritten with a new values. If a field is not populate on the Job Order record, there will be nothing to populate on the Stage record. This action may take a few seconds or several minutes based on the amount of records you have in your Org.
</p>
<p>
If you are not sure what action this will perform, please contact Jobscience Support.
</p>
</apex:outputPanel>

	<apex:pageBlock id="pbStagesList" mode="details" title="Mass Stage Records Update" rendered="{!IsCurrentUserSystemAdmin}">
		<apex:pageBlockButtons location="top">
			<apex:commandButton value="Start Processing" action="{!StartProcessing}" onclick="jQuery('#pbbStagesList_spinner').addClass('spinner_on');jQuery('[id$=pbStagesList] input.btn').attr('disabled','disabled').addClass('btnDisabled');" oncomplete="" rerender="pnStagesList,actionPoller" />
			<span id="pbbStagesList_spinner" class="spinner_indicator">&nbsp;</span>
		</apex:pageBlockButtons>
		<apex:outputPanel id="pnStagesList">
		<apex:pageBlockSection title="Record Stage list" collapsible="false" columns="1">
			<apex:dataTable id="dtbStagesList" value="{!StageRecords}" var="stage" styleClass="list" headerClass="headerRow wideHeaderRow" rowClasses="dataRow even,dataRow odd" width="100%">
				<apex:column styleClass="dataCell" id="cellStageName">
					<apex:facet name="header">Stage Name</apex:facet>
					<apex:outputText value="{!stage.Name}" />
				</apex:column>
				<apex:column styleClass="dataCell" id="cellRecordsProcessed">
					<apex:facet name="header">Processed Batches (100 records per each batch)</apex:facet>
					<apex:outputText value="{!stage.PrecessedBatches} of {!stage.TotalBatches}" rendered="{!NOT(ISNULL(stage.BatchId))}" />
				</apex:column>
				<apex:column styleClass="dataCell" id="cellNumberOfErrors">
					<apex:facet name="header">Number Of Errors</apex:facet>
					<apex:outputText value="{!stage.NumberOfErrors}" rendered="{!NOT(ISNULL(stage.BatchId))}" />
				</apex:column>
				<apex:column styleClass="dataCell" id="cellStatus">
					<apex:facet name="header">Status</apex:facet>
					<apex:outputText value="{!stage.Status}"  rendered="{!NOT(ISNULL(stage.BatchId))}" />
				</apex:column>
			</apex:dataTable>
		</apex:pageBlockSection>
		</apex:outputPanel>
	</apex:pageBlock>

	<apex:actionPoller id="actionPoller" action="{!PollerHandler}" rerender="pnStagesList,global_vars" enabled="{!EnablePoller}" interval="5" oncomplete="if(getGlobalVars('AllBatchesCompleted')){jQuery('#pbbStagesList_spinner').removeClass('spinner_on');}" />

</apex:form>

<script type="text/javascript">
	jQuery.noConflict();
	jQuery(document).ready(function() {
		gfxInit();
	});
	function gfxInit() {
		a1=new Image; a1.src="{!URLFOR($Resource.SSearch, 'res/img/spinner.gif')}";
	}
	function getGlobalVars(property) {
		var result = '';
		var global_vars_hash = '';
		var global_vars_val = jQuery("span[id$=global_vars]").html();
		try {
			global_vars_hash = eval(global_vars_val);
		}
		catch (e) { global_vars_hash=''; }
		if (typeof global_vars_hash === "object") {
			try {
				var getter_str = 'global_vars_hash.'+property;
				result = eval(getter_str);
			}
			catch (e) { result=''; }
		}
		return result;
	}
</script>

</apex:page>