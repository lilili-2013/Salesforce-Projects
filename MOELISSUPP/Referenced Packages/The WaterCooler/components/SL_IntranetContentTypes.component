<apex:component controller="SLSI.SL_IntranetContentTypesController">
	
<!-- 	<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.SL_IntranetHub,'/IntranetHub/widgetCSS/SL_IntranetContentTypes.css')}" /> -->
    
	<script src="/soap/ajax/25.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/25.0/apex.js" type="text/javascript"></script> 
    
	<apex:attribute assignTo="{!compImpl}" name="aComponentImpl" type="SLSI.WidgetAbstract" description="component implementation object" required="true"/>
	
	<div class="wc-widget SL_IntranetContentTypes" id="widget{!id}" >
		<apex:form >
			<apex:actionFunction name="widget{!id}leftSideBarFilteryLibrary" action="{!getLeftSidebarContents}" rerender="filterLibrary,filterLibraryMob" status="loader" oncomplete="widget{!id}.lock(false);reRenderCss();">
				<apex:param name="contentTypesToFirstLevelCat" assignTo="{!MyImpl.contentTypesToFirstLevelcategories}" value=""/> 
				<apex:param name="firstLevelTosecondLevelCat" assignTo="{!MyImpl.firstLevelToSecondLevelcategories}" value=""/>
				<apex:param name="secondLevelToThirdlevelCat" assignTo="{!MyImpl.secondLevelToThirdLevelcategories}" value=""/>
		    </apex:actionFunction>
		    
		    <apex:actionFunction name="widget{!id}.rerenderTheCategories" action="{!Myimpl.rerenderTheCategories}" rerender="filterLibrary,filterLibraryMob" status="loader" oncomplete="widget{!id}.lock(false);reRenderCss();">
				<apex:param name="contentTypes" assignTo="{!MyImpl.strContentIds}" value=""/> 
		    </apex:actionFunction>
		    
			<apex:actionFunction name="widget{!id}.getFilteredByDepartment" action="{!MyImpl.getFilteredByDepartment}" status="loader" rerender="opDummy" onComplete="widget{!id}.lock(false);/*widget{!id}.rerenderTheCategories();*/">
			    <apex:param name="deptId" assignTo="{!MyImpl.strDeptId}" value=""/> 
			</apex:actionFunction>
			<!-- End of Newly created for Department -->
		
		</apex:form>
		
		<apex:outputpanel id="opdummy" />
		
		<apex:outputPanel id="filterLibrary"> 
			 
			<script>
				initAccordionInnerInnerInner();
				initAccordionInnerInner();
				initAccordionInner();
		        initAccordion();
		    </script>
	        
	        <div class="group-block" style="padding:0px;">
	        	<apex:outputPanel rendered="{!MyImpl.lstContentTypes.size > 0}">  
	             	<h2>{!$Label.slsi__SL_Tab_Document}</h2>
	            </apex:outputPanel>
	            <ul class="groups accordion" id="accordionSection" style="margin-top:10px;">
	                 <apex:repeat value="{!MyImpl.lstContentTypes}" var="lev0">
						<li> 
							<a class="opener" style="cursor: pointer;" onclick="$(this).parent().siblings().children().removeClass('active');$(this).addClass('active');widget{!id}.toggleContentViews('{!JSENCODE(lev0)}');"><span>{!lev0}</span></a>
							<div class="slide">
			                  	<ul class="accordionInner">
				                    <apex:repeat value="{!MyImpl.mapContentTypesToLstFirstLevelCatg[lev0]}" var="lev1">
				                        <li> 
			                        		<a class="openerInner" style="cursor: pointer;" onclick="widget{!id}.toggleContentViews('{!lev0}', '{!lev1}');"><span>{!lev1}</span></a>
											<div class="slideInner">
											    <ul class="accordionInnerInner">
											        <apex:repeat value="{!MyImpl.mapFirstLevelCatgIdToLstSecondLevelCatg[lev0 + '_' + lev1]}" var="lev2">
											            <li style="list-style-type: none">
															<a class="openerInnerInner" style="cursor: pointer;" onclick="widget{!id}.toggleContentViews('{!lev0}', '{!lev1}', '{!lev2}');"><span>{!lev2}</span></a>
															<div class="slideInnerInner">
															    <ul class="accordionInnerInnerInner">
															        <apex:repeat value="{!MyImpl.mapSecondLevelCatgIdToLstThirdLevelCatg[lev0 + '_' + lev1 + '_' + lev2]}" var="lev3">
															            <li>
															                <a class="openerInnerInnerInner" style="cursor: pointer;" onclick="$(this).parent().siblings().removeClass('active');$(this).parent().addClass('active');widget{!id}.toggleContentViews('{!lev0}', '{!lev1}', '{!lev2}', '{!lev3}');">{!lev3}</a>
							                                             </li>
							                                         </apex:repeat>
							                                     </ul>
							                                 </div>
							                             </li>
							                         </apex:repeat>
							                     </ul>
							                 </div>
							             </li>
							         </apex:repeat>
								</ul>
							</div>	       
						</li>        
				     </apex:repeat>
				 </ul>
		    </div>
		</apex:outputPanel>
     </div>
     
    <!-- mobile content -->
     <div class="wc-widget-mobile mobile-content" >
		<apex:outputPanel id="filterLibraryMob"> 
             <!-- top-block -->
              <div class="top-block">
                  <!-- title holder -->
                  <div class="title-holder"> 
                      <h2 id="title-holderId">{!$Label.SL_Tab_Document}</h2>   
                  </div>
 
              </div>
              
              <script>
                    $('#accordionSection1 > li:first-child > a').addClass('active');
              </script>
              
              <div class="top-block">
	              <div class="title-holder">
		              <ul class="groups accordion" id="accordionSection1">
		                <apex:repeat value="{!MyImpl.lstContentTypes}" var="lev0">
		                <li> 
		                    <a class="opener" style="cursor: pointer;" onclick="$(this).parent().siblings().children().removeClass('active');$(this).addClass('active');widget{!id}.toggleContentViews('{!JSENCODE(lev0)}');"><span onclick="changeHeader(this.innerHTML);" style="font-size:22px;">{!lev0}</span></a>
		                    <div class="slide">
		                        <ul class="accordionInner">
		                            <apex:repeat value="{!MyImpl.mapContentTypesToLstFirstLevelCatg[lev0]}" var="lev1">
		                                <li> 
		                                    <a class="openerInner" style="cursor: pointer;" onclick="widget{!id}.toggleContentViews('{!lev0}', '{!lev1}');"><span onclick="changeHeader(this.innerHTML);" style="font-size:22px;">{!lev1}</span></a>
		                                    <div class="slideInner">
		                                        <ul class="accordionInnerInner">
		                                            <apex:repeat value="{!MyImpl.mapFirstLevelCatgIdToLstSecondLevelCatg[lev0 + '_' + lev1]}" var="lev2">
		                                                <li style="list-style-type: none">
		                                                    <a class="openerInnerInner" style="cursor: pointer;" onclick="widget{!id}.toggleContentViews('{!lev0}', '{!lev1}', '{!lev2}');"><span onclick="changeHeader(this.innerHTML);" style="font-size:22px;">{!lev2}</span></a>
		                                                    <div class="slideInnerInner">
		                                                        <ul class="accordionInnerInnerInner">
		                                                            <apex:repeat value="{!MyImpl.mapSecondLevelCatgIdToLstThirdLevelCatg[lev0 + '_' + lev1 + '_' + lev2]}" var="lev3">
		                                                                <li>
		                                                                    <a class="openerInnerInnerInner" style="cursor: pointer;" onclick="$(this).parent().siblings().removeClass('active');$(this).parent().addClass('active');widget{!id}.toggleContentViews('{!lev0}', '{!lev1}', '{!lev2}', '{!lev3}');"><span onclick="changeHeader(this.innerHTML);" style="font-size:22px;">{!lev3}</span></a>
		                                                                 </li>
		                                                             </apex:repeat>
		                                                         </ul>
		                                                     </div>
		                                                 </li>
		                                             </apex:repeat>
		                                         </ul>
		                                     </div>
		                                 </li>
		                             </apex:repeat>
		                        </ul>
		                    </div>           
		                </li>        
		             	</apex:repeat>
		         	</ul>
		         </div>
		     </div>
		</apex:outputPanel>     
    </div>
      
    <script>
        function changeHeader(arg)
        {
            document.getElementById('title-holderId').innerHTML = 'Documents: ' + arg;
        }
    </script> 
    
    <script>
    	(function () {    		
    		widget{!id}.lock(true);
			widget{!id}ReloadleftSideBarFilteryLibrary();
		}());
    
    
		function widget{!id}ReloadleftSideBarFilteryLibrary()
		{	
			var cvmeta = new SL_MetaData("{!$Api.Session_ID}", 'ContentVersion');
			  
			var contentTypes = '';
			var firstLevelCatg = '';
			var secondLevelCatg = '';
			var thirdLevelCatg = '';
			var contentTypesTofirstlevelchilds = '';
			var firstLevelToSecondLevelChilds = '';
			var secondLevelToThirdLevelChilds = '';
	
	        //Finding picklist options for all the category level for Employee Resources category
	
	         for(var i = 0; i <= 3 ; i++)
	         {
                 if(i == 0)
                 	fieldId = 'SLSI__Content_Types__c' ;
                 else
                 	fieldId = 'SLSI__Category_Level_' + i + '__c' ;
                 
                 values = cvmeta.getPicklistValues(fieldId);
                 optionsArray = values.values;
					
				 //optionsArray								
                 for(var j = 0; j < optionsArray.length; j++)
                 {
                 	 if(i == 0)
                     {
                         if(j == 0)
                         {
                         	
                            contentTypes += optionsArray[j].value;
                            contentTypesTofirstlevelchilds += optionsArray[j].value + '::';
                         }
                         else
                         {
                            contentTypes += ',,' + optionsArray[j].value;
                            contentTypesTofirstlevelchilds += '@#' + optionsArray[j].value + '::';
                         }

                         var currValues = cvmeta.getDependentValues('SLSI__Category_Level_1__c' , optionsArray[j].value);
                         var options = currValues.values;
                         var isEntered = false;
							
                         for(var k = 0; k < options.length; k++)
                         {
                              if(k == 0)
                                 contentTypesTofirstlevelchilds += options[k].value;
                              else
                                 contentTypesTofirstlevelchilds += ',,' + options[k].value;

                              if(!isEntered)
                                 isEntered = true;
                         }

                         if(!isEntered)
                             contentTypesTofirstlevelchilds += 'NC';
                      }
                             
                      if(i == 1)
                      {
                          if(j == 0)
                          {
                             firstLevelCatg += optionsArray[j].value;
                             firstLevelToSecondLevelChilds += optionsArray[j].value + '::';
                          }
                          else
                          {
                             firstLevelCatg += ',,' + optionsArray[j].value;
                             firstLevelToSecondLevelChilds += '@#' + optionsArray[j].value + '::';
                          }

                         var currValues = cvmeta.getDependentValues('SLSI__Category_Level_2__c' , optionsArray[j].value);
                         var options = currValues.values;
                         var isEntered = false;

                         for(var k = 0; k < options.length; k++)
                         {
                              if(k == 0)
                                 firstLevelToSecondLevelChilds += options[k].value;
                              else
                                 firstLevelToSecondLevelChilds += ',,' + options[k].value;

                              if(!isEntered)
                                 isEntered = true;
                         }

                         if(!isEntered)
                             firstLevelToSecondLevelChilds += 'NC';
                      }
                      else if(i == 2)
                      {
                         if(j == 0)
                         {
                             secondLevelCatg += optionsArray[j].value;
                             secondLevelToThirdLevelChilds += optionsArray[j].value + '::';
                         }
                         else
                         {
                             secondLevelCatg += ',,' + optionsArray[j].value;
                             secondLevelToThirdLevelChilds += '@#' + optionsArray[j].value + '::';
                         }

                         var currValues = cvmeta.getDependentValues('SLSI__Category_Level_3__c' , optionsArray[j].value);
                         var options = currValues.values;
                         var isEntered = false;

                         for(var k = 0; k < options.length; k++)
                         {
                              if(k == 0)
                                 secondLevelToThirdLevelChilds += options[k].value;
                              else
                                 secondLevelToThirdLevelChilds += ',,' + options[k].value;

                              if(!isEntered)
                                 isEntered = true;
                         }

                         if(!isEntered)
                             secondLevelToThirdLevelChilds += 'NC';
                      }
                      else if(i == 3)
                      {
                         if(j == 0)
                             thirdLevelCatg += optionsArray[j].value;
                          else
                             thirdLevelCatg += ',,' + optionsArray[j].value;
                      }
                  }
              }
              
	          widget{!id}leftSideBarFilteryLibrary(contentTypesTofirstlevelchilds, firstLevelToSecondLevelChilds, secondLevelToThirdLevelChilds);
			}
     </script>
			
</apex:component>