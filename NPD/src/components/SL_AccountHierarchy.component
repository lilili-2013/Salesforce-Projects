<apex:component controller="SL_AccountHierarchy">
    <apex:attribute name="accountId" type="Id" required="true" description="account id" assignTo="{!idAccountId}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SL_SearchAccountHierarchy, '/css/sl-bs-bootstrap.css')}"/>
    
    <apex:outputPanel id="op1" >
    <div id="sl-bs" class="container" style="display:{!If(accountId == null, 'none','block')};">
        <apex:outputPanel rendered="{!IF(AND(lstAccountWrapper!=null,lstAccountWrapper.size > 0), true, false)}">
            <table class ="table table-hover table-bordered table-responsive" border="0" cellpadding="0" cellspacing="0">
            	<tr style="background-color: #d9edf7;">
            		<th>Account Name</th>
            		<apex:repeat value="{!$ObjectType.Account.FieldSets.SL_SearchAccountHierarchy}" var="field">
            		    <th>{!field.Label}</th>
                    </apex:repeat>
            	</tr>
            	<apex:repeat value="{!lstAccountWrapper}" var="AccountWrapper" >
            		<tr>
            			<td style="{!IF(AccountWrapper.strUniqueLevel!='0',mapAccountToSpace_indicatingLevel[AccountWrapper.strUniqueLevel],'')};">
            				<apex:outputLink id="linkId" value="/{!AccountWrapper.objAccount.id}" target="_top" style="color:{!mapRecordTypeNameToColorCode[AccountWrapper.objAccount.RecordType.DeveloperName]};font-weight:{!IF(idAccountId == AccountWrapper.objAccount.Id, 'bold','normal')}">{!AccountWrapper.objAccount.name}</apex:outputLink>
            			</td>
            			<apex:repeat value="{!$ObjectType.Account.FieldSets.SL_SearchAccountHierarchy}" var="field">
            		    <td><apex:outputField value="{!AccountWrapper.objAccount[field.FieldPath]}"/></td>
                        </apex:repeat>
            		</tr>
            	</apex:repeat>
            </table>
        </apex:outputPanel>
    </div>
    </apex:outputPanel>
   	<apex:actionFunction name="onloadAF" action="{!fetchAccountHierarchy}" reRender="op1" status="dummy"/> 
   	<script>
   	    onloadAF();
    </script>
</apex:component>