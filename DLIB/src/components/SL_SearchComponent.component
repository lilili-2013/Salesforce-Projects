<apex:component controller="SL_AutoCompleteSearchController">
	<!-- Attributes Required For Component -->
		<apex:attribute name="autocomplete_textbox" description="The ID for the Autocomplete List Textbox." type="String" required="true"/>
		<apex:attribute name="isOnSearchPage" description="The Boolean indicating component is on Search Page." type="Boolean" required="true"/>
	
	<apex:outputPanel rendered="{!strCustomSettingName == 'si'}">
	<!-- JQuery Files -->
        <apex:stylesheet value="{!URLFOR($Resource.SL_WaterCooler, 'css/bootstrap.min.css')}" />
		 <apex:stylesheet value="{!URLFOR($Resource.SL_WaterCooler, 'css/style.css')}"/>
		 <apex:stylesheet value="http://fonts.googleapis.com/css?family=Roboto:400,100,300,300italic,100italic,400italic,900,900italic" />
		 <apex:stylesheet value="{!URLFOR($Resource.SL_WaterCooler, 'css/font-awesome.min.css')}"/>
		<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" />
		<apex:includescript value="{!URLFOR($Resource.SL_AutoCompleteComponentResources, 'jquery-ui.js')}"/>
		<apex:stylesheet value="{!URLFOR($Resource.SL_AutoCompleteComponentResources, 'jquery-ui.css')}"/>
                <!--<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>-->
      </apex:outputPanel>
      <apex:outputPanel rendered="{!strCustomSettingName != 'si'}">
      	<apex:includescript value="{!URLFOR($Resource.SL_AutoCompleteComponentResources, 'jquery-ui.js')}"/>
		<apex:stylesheet value="{!URLFOR($Resource.SL_AutoCompleteComponentResources, 'jquery-ui.css')}"/>
      </apex:outputPanel>

	<!-- Loading Image -->
		<style>
	    	.ui-autocomplete-loading { background: white url("{!URLFOR($Resource.SL_AutoCompleteComponentResources, 'images/big-loading.gif')}") right center no-repeat; }
		</style>


	<!-- AutoComplete header -->
		<!--<h2>{!$Label[strCustomSettingName + '_HelpHomeWelcome']}</h2>-->

	<!-- AutoComplete Search form --> 
		<div class="search-form">
			<script>
				  	function searchFocus()
					{
						if(document.getElementById('{!$Component.serachText}').value == 'Search Knowledge Base…' || document.getElementById('{!$Component.serachText}').value == 'Have a question? Ask or enter a search term here.')
							document.getElementById('{!$Component.serachText}').value= "";
					}

					function searchBlur()
					{
						if(document.getElementById('{!$Component.serachText}').value == '')
						{
							document.getElementById('{!$Component.serachText}').value= '{!strCustomSettingName}'=='si' ? "Search Knowledge Base…" : "Have a question? Ask or enter a search term here.";
						}
						$('.ui-autocomplete-loading').removeClass("ui-autocomplete-loading");
					}

					function callSearch(e)
					{
						if(window.event)
			                 key = window.event.keyCode; 	//IE
			            else
			                 key = e.which;     			//firefox

						 //var checkEvent = e;
						 //if(checkEvent.keyCode == 13)
						 if(key == 13)
						 {
							  searchFunction();
							  return false;
						 }
					}

					function searchFunction()
					{
						var searchTerm = document.getElementById('{!$component.serachText}').value;
						searchTerm = searchTerm.trim();
						if(searchTerm == '')
						{
							searchTerm = '{!strCustomSettingName}'=='si' ? "Search Knowledge Base…" : "Have a question? Ask or enter a search term here.";
							window.location = "Search?search=" + searchTerm + "&subId="+ '{!strSubscriptionOrgId}';
							return false;
						}
						if({!isOnSearchPage})
						{
							if(searchTerm.length < 2)
							{
								return false;
							}
							searchAF(searchTerm);
							return false;
						}
						else
						{
							if(searchTerm.length < 2)
							{
								return false;
							}
							callSearchPage();
							return false;
						}
					}
					
			</script>

			<fieldset>
				<div class="text-holder">
					<apex:inputText id="serachText" value="{!strInitialVal}" onkeypress="return callSearch(event);" onfocus="searchFocus();" onblur="searchBlur();" />
				</div>
				<apex:outputPanel rendered="{!strCustomSettingName != 'si'}">
					<input type="submit" value="Search" onClick="return searchFunction()"  />
				</apex:outputPanel>
				<apex:outputPanel rendered="{!strCustomSettingName == 'si'}">
					<input  class="search-submit" type="button" onClick="return searchFunction()"  value=""/>
				</apex:outputPanel>
			</fieldset>

		<!--	<div class="jumbotron top">
	      <div class="container">
		      <div class="row">
		        <div class="col-md-12 col-sm-12 col-xs-12">
			        <a href="#" title="">
					      <img class="responsive wc-logo" src="http://silverlinecrm.com/wordpress/wp-content/uploads/wc-logo-knowledge-base.png" alt="WaterCooler Logo"/>
			        </a>
		        </div>
		      </div>
		      <div class="row">
		        <div class="col-md-8">
			        <h1>Knowledge Base</h1>
		        </div>
		      </div>
		      -->
    		<!--	<div class="row">
						<div class="col-md-12  col-lg-12  col-sm-12 col-xs-12">
							<div class="search-box inline">
								<form role="search" method="get" class="search-form" action="http://silverlinecrm.com/watercooler-knowledge-base-search/">
									<div>
										<input type="search" id="serachText" class="search-field" placeholder="Search Knowledge Base…" value="{!strInitialVal}" name="swpquery" title="Search for:" onkeypress="return callSearch(event);" onfocus="searchFocus();" onblur="searchBlur();" />
										<input type="submit" class="search-submit" value="Search" onClick="return searchFunction()" />
									</div>
								</form>
							</div>
	 	    </div>
	    </div>-->

		</div>

	  <script type="text/javascript">

	  	<!-- AutoComplete Script-->

	    //var j$ = jQuery.noConflict();
	    $(document).ready(function() {
	        
            Visualforce.remoting.timeout = 120000; 
            
	        var sObjects;
	        var queryTerm;
	        
	        var N= navigator.appName, ua= navigator.userAgent, tem;
            var M= ua.match(/(opera|chrome|safari|firefox|msie)\/?\s*(\.?\d+(\.\d+)*)/i);
            if(M && (tem= ua.match(/version\/([\.\d]+)/i))!= null) M[2]= tem[1];
            M = M? [M[1], M[2]]: [N, navigator.appVersion, '-?'];
            var browserInfo = M.toString();
            
            if(browserInfo.indexOf('MSIE')!=-1 || browserInfo.indexOf('rv:11.0')!=-1)
            {
                $('.search-submit').css("padding-top","14.5px");
            }
            
	        $(esc('{!$Component.serachText}')).autocomplete({
	            minLength: 2,
	            source: function(request, response)
	            {
                    queryTerm = request.term;
                    queryTerm = queryTerm.trim();
                    var countChar = queryTerm.length;
					var countSpecialChar = 0;

					if(countChar > 0)
					{
						for(i=0; i < countChar; i++)
						{
							if(queryTerm.charAt(i) == '*')
							{
								countSpecialChar = countSpecialChar + 1;
							}
						}
					}

					if(countChar != countSpecialChar)
					{
                    	SL_AutoCompleteSearchController.findSObjects(queryTerm,
                        function(result, event)
                        {
                            if(event.type == 'exception')
                            {
                                return false;
                            }
                            else
                            {
                                sObjects = result;
                                response(sObjects);
	                        }
                        });
                     }
                     else
                     {
                     	 sObjects = '';
                         response(sObjects);
                     }
               },
                focus: function( event, ui ) {
                    $(esc('{!$Component.serachText}')).val( ui.item.articleObject.Title );
                    return false;
                },
                select: function( event, ui ) {
			            		var event = e || window.event;
                        $(esc('{!$Component.serachText}')).val( ui.item.articleObject.Title );
                        $(esc('{!$Component.serachText}')+'_lkold').val( ui.item.articleObject.Title );
                        return false;
                }
	         })
	         .data( "ui-autocomplete" )._renderItem = function( ul, item )
	         {

	         	var recordDetailLink = "\"ArticleDetail?Name=" + item.articleObject.UrlName + "&obj="+ item.articleObjectType + "&subId="+ '{!strSubscriptionOrgId}' + "\"";
	            var entry = "<a href=" + recordDetailLink + ">";
	            entry = entry + item.articleObject.Title.substring(0, 101);
	            entry = entry +  "</a>";
	            return $( "<li></li>" )
	                .data( "ui-autocomplete-item", item )
	                .append( entry )
	                .appendTo( ul );
	        };
	    });

	    function esc(myid) {
	           return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
	    }

	  </script>

	  <apex:actionFunction name="callSearchPage" action="{!goToSearchPage}" >
	  	<apex:param name="searchTerm" value="" assignTo="{!strSearchText}" />
	  </apex:actionFunction>
</apex:component>