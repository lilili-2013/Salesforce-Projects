<apex:page id="pageID" controller="SL_TimeEntryController" docType="html-5.0" standardStylesheets="true" sidebar="false" showHeader="{!!isInsert}">
    <apex:includeScript value="{!$Resource.SL_TimeEntryJquery}" />
    <apex:includeScript value="{!URLFOR($Resource.JqueryUI, 'jquery-ui-1.11.4.custom/jquery-ui.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.Moment, 'moment.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.bootstrap, 'dist/js/sl-bootstrap.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.DatePicker, 'build/js/bootstrap-datetimepicker.min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.ckeditor, 'ckeditor/ckeditor.js')}" />
    <apex:includescript value="{!URLFOR($Resource.modernizer, 'modernizer.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.SL_MultiselectAutocomplete, 'js/jquery.tokeninput.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.SL_FixedHeader)}" />
    <apex:stylesheet value="{!URLFOR($Resource.bootstrap, 'dist/css/sl-bootstrap.min.css')}" />
    <!-- <apex:stylesheet value="{!URLFOR($Resource.DatePicker, 'build/css/bootstrap-datetimepicker.css')}" /> -->
    <apex:stylesheet value="{!URLFOR($Resource.DatePicker, 'build/css/bootstrap-datetimepicker.min.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.JqueryUI, 'jquery-ui-1.11.4.custom/jquery-ui.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.SL_MultiselectAutocomplete, 'css/token-input-facebook.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.SL_MultiselectAutocomplete, 'css/token-input-listStyle.css')}" />
    <style>
    .statusTD {
        padding-top:2px !important;
        padding-bottom:2px !important;
    }
     .sticky {
        top: 0;
        position: fixed;
        padding-right: 35px;
        }
     .cke_contents.cke_reset {
            height: 110px !important;
        }
        .cke_top.cke_reset_all {
             height: 25px !important;
        }
        .cke_toolgroup
        {
            height:22px !important;
        }
        .smallerForm
        {
            height:30px !important;
        }
        .Fixed
        {
            position: fixed;
        }
        .radioClass {
            padding-left: 2px;
        }
        
        .ui-dialog-titlebar-close {
            display: none;
        }
        
        .cke_button__textcolor {
            display: none;
        }
        
        .top-buffer {
            margin-top: 20px;
        }
        
        input[type=radio] {
            margin-right: 2px;
        }
        
        .bodyDiv {
            background: #FEFEFA;
        }
        
        .selected,
        .selected td {
            background-color: #C0C0C0;
        }
        
        .blurrOut {
            opacity: 0.6;
            /* Real browsers */
            filter: alpha(opacity=60);
            /* MSIE */
        }
        
        .no-js #loader {
            display: none;
        }
        
        .js #loader {
            display: block;
            position: absolute;
            left: 100px;
            top: 0;
        }
        
        .se-pre-con {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 9999;
            opacity: 0.9;
            background: url({!URLFOR($Resource.animatedLoader)
        }
        
        ) center no-repeat #fff;
    }
    .helptext {
        opacity: 0.4;
        filter: alpha(opacity=40);
        /* For IE8 and earlier */
    }
    .helptext:hover {
        opacity: 1.0;
        filter: alpha(opacity=100);
        /* For IE8 and earlier */
    }
    .companyLabel {
        color: grey;
    }
    .bootstrap-select.btn-group .dropdown-menu {
        z-index: 2000;
    }
    .bootstrap-select.btn-group .dropdown-menu.inner {
        position: static;
    }
    .modal {
        overflow: visible;
    }
    .modal-body {
        overflow-y: visible !important;
    }
    input[type=text]:disabled {
        background: #dddddd;
    }
    </style>
    <!--background: url(/img/loading.gif) center no-repeat #fff;
background: url({!URLFOR($Resource.animatedLoader)}) center no-repeat #fff;
-->
    <script>
    var jsonHealth = {};
    var jsonEffort = {};
    var jsonEndDates = {};
    var editor1, html1 = '';
    var editor2, html2 = '';
    //var editor3, html3 = '';
    var menu;
    var menuPosition;
    var placeholder;
    var isAdded;
    var selectedProjectHold = '';
    var numberSent=0; 
    function loading(val) {
        if(val)
        {
        	 document.getElementById('loadingSpinner').style.display = 'block';
             document.getElementById('loadingSpinner').style.opacity= 0.6;
        }
        else
        {
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('loadingSpinner').style.opacity= 0.9;
        }
                
    }
    function openWindow(user) {
            if (navigator.appVersion.indexOf("MSIE 7") > 0 || navigator.appVersion.indexOf("MSIE 8") > 0 || navigator.appVersion.indexOf("MSIE 9") > 0) {
                window.open('/apex/SL_TimeEntry2?isInsert=' + user.value, '_parent', '');
            } else if (navigator.appVersion.indexOf("Chrome") > 0) {
                myWindow = window.open('/apex/SL_TimeEntry2?isInsert=' + user.value, '', 'fullscreen=yes,resizable=yes,scrollbars=yes,channelmode=yes,top=0,left=0');
                myWindow.resizeTo(window.outerWidth, window.outerHeight);
            } else {
                myWindow = window.open('/apex/SL_TimeEntry2?isInsert=' + user.value, '', 'fullscreen=yes,resizable=yes,scrollbars=yes,channelmode=yes,top=0,left=0');
                myWindow.resizeTo(window.outerWidth - 10, window.outerHeight - 10);
            }
        }
    function prevWeek() {
            checkTimeChange();
            if ($('input.hiddenTimeChange').val() == 'false'&&statusHasChanged==false) {
                prevWeekAction();
            }
        }

        function nextWeek() {
            checkTimeChange();
            if ($('input.hiddenTimeChange').val() == 'false'&&statusHasChanged==false) {
                nextWeekAction();
            }

        }

    function collectHealth(prjName, health) {
            jsonHealth[prjName]=health;
        }
    function collectEffort(prjName, effort) {
            jsonEffort[prjName]=effort;
            console.log(jsonEffort);
        }
    function collectDate(prjName, endDate) {
            jsonEndDates[prjName]=endDate;
        }
    function changedDate(date) {
            var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            if (radioSelected == 'Monthly') {
                var formattedDateController = moment(date).format("MM/YYYY");
                var formattedDate = moment(date).format("YYYY-MM-DD");
                $("[id*='theHiddenInputDate']").val(formattedDate);
                $("[id*='hiddenDateforcontoller']").val(formattedDateController);
                updateMTDHours();
            } else {
                var formattedDateController = moment(date).format("MM/DD/YYYY");
                var formattedDate = moment(date).format("YYYY-MM-DD");
                $("[id*='theHiddenInputDate']").val(formattedDate);
                $("[id*='hiddenDateforcontoller']").val(formattedDateController);
                updateDateRange();
            }
        }
    function refreshPage() {
            updateMTDHours();
            document.getElementById("jumpUpLink").click();
        }

    function createEditor() {

            var formatdate2 = 'MM/DD/YYYY';
            $('#datetimepicker2').datetimepicker({

                format: formatdate2
            });

            $('#datetimepicker3').datetimepicker({
                minDate: new Date(),
                format: formatdate2
            });
            getProjectHealthOptions();
            getProjectEffortOptions();
            var lockCheck = document.getElementById("lastStepsLocked").value;
            if (lockCheck == 'LockedCell') {
                $('#statusTableGrid').addClass('blurrOut');
                var lStepsLocked = document.getElementById("lastSteps").value;
                var nStepsLocked = document.getElementById("nextSteps").value;
                //var commentsLocked = document.getElementById("comments").value;
                document.getElementById("percentComplete").disabled = true;
                document.getElementById("lastSteps").disabled = true;
                document.getElementById("nextSteps").disabled = true;
                document.getElementById("projHealthSelect").disabled = true;
                document.getElementById("EffortSelect").disabled = true;
                //document.getElementById("comments").disabled = true;
                document.getElementById("enddateid").disabled = true;
                document.getElementById("duedateid").disabled = true;

            } else {
                $('#statusTableGrid').removeClass('blurrOut');
                populateDate();
                document.getElementById("percentComplete").disabled = false;
                document.getElementById("lastSteps").disabled = false;
                document.getElementById("nextSteps").disabled = false;
                document.getElementById("projHealthSelect").disabled = false;
                document.getElementById("EffortSelect").disabled = false;
                //document.getElementById("comments").disabled = false;
                document.getElementById("enddateid").disabled = false;
                document.getElementById("duedateid").disabled = false;
            }
            
            var charCountAll = 500;
            document.getElementById('totalCharNextSteps').value = (strip(document.getElementById("nextSteps").value).length) + ' of ' + charCountAll + ' characters';
            document.getElementById('totalCharLastSteps').value = (strip(document.getElementById("lastSteps").value).length) + ' of ' + charCountAll + ' characters';
           // document.getElementById('totalCharComments').value = (strip(document.getElementById("comments").value).length) + ' of ' + charCountAll + ' characters';
            CKEDITOR.config.colorButton_colors = 'FFFF00';
            editor1 = CKEDITOR.replace('lastSteps');
            editor1.on('contentDom', function() {
                var editable = editor1.editable();

                editable.attachListener(editor1.document, 'keyup', function() {
                    statusOverwrite();

                    if (editor1.document.getBody().getText().length >= charCountAll) {
                        $('#wentOverWarningLastSteps').css({
                            'display': ''
                        });
                        editor1.setData(editor1.document.getBody().getText().substring(0, charCountAll));
                        var lastStepsCount = parseInt(editor1.document.getBody().getText().length);
                        document.getElementById('totalCharLastSteps').value = lastStepsCount + ' of ' + charCountAll + ' characters';
                    } else {
                        $('#wentOverWarningLastSteps').css({
                            'display': 'none'
                        });
                        var lastStepsCount = parseInt(editor1.document.getBody().getText().length);
                        document.getElementById('totalCharLastSteps').value = lastStepsCount + ' of ' + charCountAll + ' characters';
                    }
                });
            });
            editor2 = CKEDITOR.replace('nextSteps');
            editor2.on('contentDom', function() {
                var editable2 = editor2.editable();

                editable2.attachListener(editor2.document, 'keyup', function() {
                    statusOverwrite();
                    if (editor2.document.getBody().getText().length >= charCountAll) {
                        $('#wentOverWarningNextSteps').css({
                            'display': ''
                        });
                        editor2.setData(editor2.document.getBody().getText().substring(0, charCountAll));
                        var nextStepsCount = parseInt(editor2.document.getBody().getText().length);
                        document.getElementById('totalCharNextSteps').value = nextStepsCount + ' of ' + charCountAll + ' characters';
                    } else {
                        $('#wentOverWarningNextSteps').css({
                            'display': 'none'
                        });
                        var nextStepsCount = parseInt(editor2.document.getBody().getText().length);
                        document.getElementById('totalCharNextSteps').value = nextStepsCount + ' of ' + charCountAll + ' characters';
                    }
                });

            });
            /*editor3 = CKEDITOR.replace('comments');
            editor3.on('contentDom', function() {
                var editable3 = editor3.editable();

                editable3.attachListener(editor3.document, 'keyup', function() {
                    statusOverwrite();

                    if (editor3.document.getBody().getText().length >= charCountAll) {
                        $('#wentOverWarningComments').css({
                            'display': ''
                        });
                        editor3.setData(editor3.document.getBody().getText().substring(0, charCountAll));
                        var commentsCount = parseInt(editor3.document.getBody().getText().length);
                        document.getElementById('totalCharComments').value = commentsCount + ' of ' + charCountAll + ' characters';
                    } else {
                        $('#wentOverWarningComments').css({
                            'display': 'none'
                        });
                        var commentsCount = parseInt(editor3.document.getBody().getText().length);
                        document.getElementById('totalCharComments').value = commentsCount + ' of ' + charCountAll + ' characters';
                    }
                });
            });*/

            CKEDITOR.instances.editor1.config.height = '40px'; // 500 pixels high.
            CKEDITOR.instances.editor2.config.height = '40px'; // 500 pixels high.
            //CKEDITOR.instances.editor3.config.height = '40px'; // 500 pixels high.
            CKEDITOR.instances.editor1.config.maxLength = charCountAll;
            CKEDITOR.instances.editor2.config.maxLength = charCountAll;
           // CKEDITOR.instances.editor3.config.maxLength = charCountAll;
            var lStepsVal = document.getElementById("lastSteps").value;
            var nStepsVal = document.getElementById("nextSteps").value;
            //var commentsVal = document.getElementById("comments").value;

            //strip(nStepsVal);
            CKEDITOR.instances.editor1.setData('<p>' + lStepsVal + '</p>');
            CKEDITOR.instances.editor2.setData('<p>' + nStepsVal + '</p>');
          //  CKEDITOR.instances.editor3.setData('<p>' + commentsVal + '</p>');

        }
    function selectProjectChanged(selProject, el) {
            if (selProject != selectedProjectHold) {
                selectedProjectHold = selProject;
                statusOverwriteLoad();
                $('tr').removeClass('selected');
                $(el).addClass('selected');
            }
        }
     function strip(html) {
            var tmp = document.createElement("DIV");
            tmp.innerHTML = html;
            return tmp.textContent || tmp.innerText || "";
        }
     function loadStatus() {
            loadProjectStatus(selectedProjectHold);
        }
     function sendToSF(edString, sUser, cDate, dayOfWeek) {
            SL_TimeEntryController.SubmitTimeEntry(edString, sUser, cDate, dayOfWeek, JSON.stringify(jsonEndDates),JSON.stringify(jsonHealth),JSON.stringify(jsonEffort),
                function(r, e) {

                    if(dayOfWeek!='')
                    {
                        numberSent+=1;
                        if(numberSent==7)
                        {
                             updateMTDHours();
                        }
                    }
                    else
                    {
                        updateMTDHours();
                    }

                });

        }
    function sendEd() {
            var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            if (radioSelected == 'Monthly') {
                var myJsonObj = {};
                var curUser = $(".selectUser1 option:selected").val();
                var currDate = $("[id*='theHiddenInputDate']").val()
                var quarterCheck = true;
                var negativeCheck = true;
                $('.testVFMonthly').each(function(i, v) {
                    var jsonProp = $(v).attr('name');
                    if ($(v).val() != 'EndDate') {
                        if (($(v).val() % 0.25) != 0) {
                            alert('Time must be entered in increments of .25, .5, or 1');
                            quarterCheck = false;
                        }
                        if ($(v).val() < 0) {
                            alert('Negative Time Entries are not allowed');
                            negativeCheck = false;
                        }
                    }
                    myJsonObj[jsonProp] = $(v).val();
                });
                if (quarterCheck && negativeCheck) {
                    //strPrjNameToEndDate += ']}';
                    statusHasChanged=false;
                    $('input.hiddenTimeChange').val('false');
                    sendToSF(JSON.stringify(myJsonObj), curUser, currDate, '');
                }
            } else {
                var myJsonObjMon = {};
                var myJsonObjTue = {};
                var myJsonObjWed = {};
                var myJsonObjThu = {};
                var myJsonObjFri = {};
                var myJsonObjSat = {};
                var myJsonObjSun = {};
                var curUser = $(".selectUser1 option:selected").val();
                var currDate = $("[id*='theHiddenInputDate']").val()
                var quarterCheck = true;
                var negativeCheck = true;
                $('input.testVFDailyMon').each(function(i, v) {
                    var jsonProp = $(v).attr('name');
                    if ($(v).val() != 'EndDate') {
                        if (($(v).val() % 0.25) != 0) {
                            alert('Time must be entered in increments of .25, .5, or 1');
                            quarterCheck = false;
                        }
                        if ($(v).val() < 0) {
                            alert('Negative Time Entries are not allowed');
                            negativeCheck = false;
                        }
                    }
                    myJsonObjMon[jsonProp] = $(v).val();
                });

                if (quarterCheck && negativeCheck) {
                    $('input.testVFDailyTue').each(function(i, v) {
                        var jsonProp = $(v).attr('name');
                        if ($(v).val() != 'EndDate') {
                            if (($(v).val() % 0.25) != 0) {
                                alert('Time must be entered in increments of .25, .5, or 1');
                                quarterCheck = false;
                            }
                            if ($(v).val() < 0) {
                                alert('Negative Time Entries are not allowed');
                                negativeCheck = false;
                            }
                        }

                        myJsonObjTue[jsonProp] = $(v).val();
                    });
                }
                if (quarterCheck && negativeCheck) {
                    $('input.testVFDailyWed').each(function(i, v) {
                        var jsonProp = $(v).attr('name');
                        if ($(v).val() != 'EndDate') {
                            if (($(v).val() % 0.25) != 0) {
                                alert('Time must be entered in increments of .25, .5, or 1');
                                quarterCheck = false;
                            }
                            if ($(v).val() < 0) {
                                alert('Negative Time Entries are not allowed');
                                negativeCheck = false;
                            }
                        }

                        myJsonObjWed[jsonProp] = $(v).val();
                    });
                }
                if (quarterCheck && negativeCheck) {
                    $('input.testVFDailyThu').each(function(i, v) {
                        var jsonProp = $(v).attr('name');
                        if ($(v).val() != 'EndDate') {
                            if (($(v).val() % 0.25) != 0) {
                                alert('Time must be entered in increments of .25, .5, or 1');
                                quarterCheck = false;
                            }
                            if ($(v).val() < 0) {
                                alert('Negative Time Entries are not allowed');
                                negativeCheck = false;
                            }
                        }

                        myJsonObjThu[jsonProp] = $(v).val();
                    });
                }
                if (quarterCheck && negativeCheck) {
                    $('input.testVFDailyFri').each(function(i, v) {
                        var jsonProp = $(v).attr('name');
                        if ($(v).val() != 'EndDate') {
                            if (($(v).val() % 0.25) != 0) {
                                alert('Time must be entered in increments of .25, .5, or 1');
                                quarterCheck = false;
                            }
                            if ($(v).val() < 0) {
                                alert('Negative Time Entries are not allowed');
                                negativeCheck = false;
                            }
                        }

                        myJsonObjFri[jsonProp] = $(v).val();
                    });
                }
                if (quarterCheck && negativeCheck) {
                    $('input.testVFDailySat').each(function(i, v) {
                        var jsonProp = $(v).attr('name');
                        if ($(v).val() != 'EndDate') {
                            if (($(v).val() % 0.25) != 0) {
                                alert('Time must be entered in increments of .25, .5, or 1');
                                quarterCheck = false;
                            }
                            if ($(v).val() < 0) {
                                alert('Negative Time Entries are not allowed');
                                negativeCheck = false;
                            }
                        }
                        myJsonObjSat[jsonProp] = $(v).val();
                    });
                }
                if (quarterCheck && negativeCheck) {
                    $('input.testVFDailySun').each(function(i, v) {
                        var jsonProp = $(v).attr('name');
                        if ($(v).val() != 'EndDate') {
                            if (($(v).val() % 0.25) != 0) {
                                alert('Time must be entered in increments of .25, .5, or 1');
                                quarterCheck = false;
                            }
                            if ($(v).val() < 0) {
                                alert('Negative Time Entries are not allowed');
                                negativeCheck = false;
                            }
                        }
                        myJsonObjSun[jsonProp] = $(v).val();
                    });
                }
                if (quarterCheck && negativeCheck) {
                    $('input.hiddenTimeChange').val('false');
                    statusHasChanged=false;
                    // strPrjNameToEndDate += ']}';
                    sendToSF(JSON.stringify(myJsonObjMon), curUser, currDate, 'Mon');
                    sendToSF(JSON.stringify(myJsonObjTue), curUser, currDate, 'Tue');
                    sendToSF(JSON.stringify(myJsonObjWed), curUser, currDate, 'Wed');
                    sendToSF(JSON.stringify(myJsonObjThu), curUser, currDate, 'Thu');
                    sendToSF(JSON.stringify(myJsonObjFri), curUser, currDate, 'Fri');
                    sendToSF(JSON.stringify(myJsonObjSat), curUser, currDate, 'Sat');
                    sendToSF(JSON.stringify(myJsonObjSun), curUser, currDate, 'Sun');
                }
            }

        }

    window.addEventListener('scroll', function() {
        if (window.pageYOffset >= menuPosition.top && !isAdded) {
            menu.classList.add('sticky');
            menu.parentNode.insertBefore(placeholder, menu);
            isAdded = true;
        } else if (window.pageYOffset < menuPosition.top && isAdded) {
            menu.classList.remove('sticky');
            menu.parentNode.removeChild(placeholder);
            isAdded = false;
        }
    });
      $(function() {
            $('[data-toggle="popoverHours"]').popover({
                delay: {
                    "show": 500,
                    "hide": 100
                }
            });
            $('[data-toggle="popoverProject"]').popover({
                delay: {
                    "show": 750,
                    "hide": 3000
                }
            });
        })   
         $(function() {
            $('[data-toggle="tooltip"]').tooltip()
        })

        $('#myModal').on('shown.bs.modal', function() {
            $('#myInput').focus();
        })

     $(function() {
            var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            if (radioSelected == 'Monthly') {
                var formatdate = 'MM/YYYY';
            } else {
                var formatdate = 'MM/DD/YYYY'
            }
            $('#datetimepicker1').datetimepicker({
                format: formatdate
            });
            $("#datetimepicker1").on("dp.change", function(e) {
                changedDate(e.date);
            });

            var formatdate2 = 'MM/DD/YYYY'
            $('#datetimepicker2').datetimepicker({
                format: formatdate2
            });

            var formatdate3 = 'MM/DD/YYYY'
            $('#datetimepicker3').datetimepicker({
                minDate: new Date(),
                format: formatdate3
            });

        });
      var statusHasChanged = false;
        function statusOverwrite() {
            if(document.getElementById("percentComplete").disabled!=true)
            {
                statusHasChanged = true;
                var currPercentComplete = document.getElementById("percentComplete").value.replace(/[^\d\.]/g,'');
                var currentDueDate = document.getElementById("duedateid").value;
                var currLastSteps = editor1.getData();
                var currNextSteps = editor2.getData();
                //var currComments = editor3.getData();
                //storeProjectStatus(currPercentComplete, currNextSteps, currLastSteps, currComments, currentDueDate);
                storeProjectStatus(currPercentComplete, currNextSteps, currLastSteps, currentDueDate);
            }
        }

        function statusOverwriteSubmit() {
            if(document.getElementById("percentComplete").disabled!=true)
            {
            var currPercentComplete = document.getElementById("percentComplete").value.replace(/[^\d\.]/g,'');
            var currentDueDate = document.getElementById("duedateid").value;
            var currLastSteps = editor1.getData();
            var currNextSteps = editor2.getData();
           // var currComments = editor3.getData()
            //storeProjectStatusSubmit(currPercentComplete, currNextSteps, currLastSteps, currComments, currentDueDate);
            }
            else
            {
                var currPercentComplete = null;
                var currentDueDate = null;
                var currLastSteps = null;
                var currNextSteps = null;
            }
            storeProjectStatusSubmit(currPercentComplete, currNextSteps, currLastSteps, currentDueDate);
        }

        function statusOverwriteLoad() {
            if(document.getElementById("percentComplete").disabled!=true)
            {
            var currPercentComplete = document.getElementById("percentComplete").value.replace(/[^\d\.]/g,'');
            var currentDueDate = document.getElementById("duedateid").value;
            var currLastSteps = editor1.getData();
            var currNextSteps = editor2.getData();
            //var currComments = editor3.getData();
            //storeProjectStatusLoad(currPercentComplete, currNextSteps, currLastSteps, currComments, currentDueDate);
            storeProjectStatusLoad(currPercentComplete, currNextSteps, currLastSteps, currentDueDate);
            }
            else
            {
                loadProjectStatus(selectedProjectHold);
            }
        }

       
        $(window).bind('beforeunload', function() {
            if ($('input.hiddenTimeChange').val() == 'true'||statusHasChanged==true) {
                return 'You have time and or status entries entered that you have NOT saved.';
            }
        });
        function getURLParameter(name) {
          return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,""])[1].replace(/\+/g, '%20'))||null
        }

        function checkStatusAccess()
        {
              SL_TimeEntryController.allStatusAccess(
                        function(r, e) {
                            if (r == true) {
                                $('.aggregateViewBtn').css({
                                    'display': ''
                                });;
                            }
                        });
        }

        $(document).ready(function() {
            if ({!!isInsert}) {
                document.getElementById("pageID:formid:newProjectId").style.opacity = 0.5;
                document.getElementById("pageID:formid:newProjectId").style.filter = "alpha(opacity = 50)";
                document.getElementById("pageID:formid:newProjectId").disabled = true;
            }
            checkStatusAccess();
            menu = document.querySelector('.menu');
            menuPosition = menu.getBoundingClientRect();
            placeholder = document.createElement('div');
            placeholder.style.width = menuPosition.width + 'px';
            placeholder.style.height = menuPosition.height + 'px';
            isAdded = false;
            var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            if (radioSelected == 'Monthly') {
                $('.daysofweekcheckboxes').css({
                    'display': 'none'
                });
                $('#nextPrevWeeks').css({
                    'display': 'none'
                });
                $('.mtdHoursColumn').css({
                    'display': 'none'
                });
                $('.mtdHoursColumnHeader').css({
                    'display': 'none'
                });
                $('input.testVFDailyMon').css({
                    'display': 'none'
                });
                $('input.testVFDailyTue').css({
                    'display': 'none'
                });
                $('input.testVFDailyWed').css({
                    'display': 'none'
                });
                $('input.testVFDailyThu').css({
                    'display': 'none'
                });
                $('input.testVFDailyFri').css({
                    'display': 'none'
                });
                $('input.testVFDailySat').css({
                    'display': 'none'
                });
                $('input.testVFDailySun').css({
                    'display': 'none'
                });
                $('th.dayHeader').css({
                    'display': 'none'
                });
                $('input.testVFMonthly').css({
                    'display': ''
                });
                $('td.testVFMonthlltd').css({
                    'display': ''
                });
                $('th.monthlyHeader').css({
                    'display': ''
                });
            } else {
                $('.daysofweekcheckboxes').css({
                    'display': ''
                });
                $('#nextPrevWeeks').css({
                    'display': ''
                });
                $('.mtdHoursColumn').css({
                    'display': ''
                });
                $('.mtdHoursColumnHeader').css({
                    'display': ''
                });
                $('input.testVFMonthly').css({
                    'display': 'none'
                });
                $('th.monthlyHeader').css({
                    'display': 'none'
                });
                $('td.testVFMonthlltd').css({
                    'display': 'none'
                });
                $('input.testVFDailyMon').css({
                    'display': ''
                });
                $('input.testVFDailyTue').css({
                    'display': ''
                });
                $('input.testVFDailyWed').css({
                    'display': ''
                });
                $('input.testVFDailyThu').css({
                    'display': ''
                });
                $('input.testVFDailyFri').css({
                    'display': ''
                });
                $('input.testVFDailySat').css({
                    'display': ''
                });
                $('input.testVFDailySun').css({
                    'display': ''
                });
                $('th.dayHeader').css({
                    'display': ''
                });
            }
            preferenceChange();

            try {
                createEditor();
            } catch (err) {}
           // var loadProjectName = getURLParameter('retProj');
           var loadProjectName = $("[id*='oldselectedproject']").val();
            if(loadProjectName!=null)
            {
                $('.projNameSpan').each(function(i, v) {
                    if (($(v).html() == loadProjectName)) {
                        var nameNode = document.getElementById($(v).attr('id'))
                       selectProjectChanged(loadProjectName,nameNode.parentNode.parentNode);
                    }
                });
            }
            $(".se-pre-con").fadeOut("slow");
            $('#statusTableGrid').addClass('blurrOut');
            $('.closebtn').each(
                function(i, v) {
                    SL_TimeEntryController.checkClosed($(v).attr("name").substring(11, $(v).attr("name").length),
                        function(r, e) {
                            if (r == true) {

                                $(v).css('display', 'none');
                            }
                        });
                }
            )
            $('input.testVFMonthly').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString1 = $(v).val();
                    $(v).val(tempString1.substring(10, tempString1.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailyMon').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString1 = $(v).val();
                    $(v).val(tempString1.substring(10, tempString1.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailyTue').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString2 = $(v).val();
                    $(v).val(tempString2.substring(10, tempString2.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailyWed').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString3 = $(v).val();
                    $(v).val(tempString3.substring(10, tempString3.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailyThu').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString4 = $(v).val();
                    $(v).val(tempString4.substring(10, tempString4.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailyFri').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString5 = $(v).val();
                    $(v).val(tempString5.substring(10, tempString5.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailySat').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString6 = $(v).val();
                    $(v).val(tempString6.substring(10, tempString6.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            $('input.testVFDailySun').each(function(i, v) {
                if (($(v).val() == 'EndDate')) {
                    $(v).css({
                        'display': 'none'
                    });
                }
                if ($(v).val().substring(0, 10) == 'LockedCell') {
                    var tempString7 = $(v).val();
                    $(v).val(tempString7.substring(10, tempString7.length))
                    $(v).prop('disabled', true);
                    $(v).css("opacity", "0.6");
                }
            });
            if ($('.selectUser1').children('option').length == 1) {
                $('.selectedUserDiv').css({
                    'visibility': 'hidden'
                });
            }
             
        })

        function selectUserChangeCheck() {
            var changed = $('input.hiddenTimeChange').val();
            if (changed == 'true'||statusHasChanged==true) {
                $("#unsavedTime2").dialog("open");
            }
        }

        function splitTimeCrossCalculate() {
            var selection = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            var numCheckedCounter = 0;
            if (selection == "Daily") {
                $('.modalCheckBox').each(function(i, v) {
                    if ($(v).is(':checked')) {
                        numCheckedCounter++;
                    }
                });
            } else {
                numCheckedCounter = 1;
            }
            var projCounter = 0;
            $('.testVFDailyMon.' + crossPortName).each(function(i, v) {
                projCounter++;
            });
            var multiplier = numCheckedCounter * projCounter;
            var counter = 0;
            var totalHours = document.getElementById('enterSplitHours').value;
            if (multiplier != 0) {

                $('.modalCheckBox').each(function(i, v) {
                    counter++;

                    if (selection == "Daily") {
                        if ($(v).is(':checked')) {
                            var calculation = totalHours / multiplier;
                            if (calculation % 0.25 != 0) {
                                calculation -= calculation % 0.25;
                                calculation += 0.25;
                                $('#calculatedHours').text('Hours split: ' + calculation);
                            } else {
                                $('#calculatedHours').text('Hours split: ' + calculation);
                            }
                        }
                    } else {
                        var calculation = totalHours / multiplier;
                        if (calculation % 0.25 != 0) {
                            calculation -= calculation % 0.25;
                            calculation += 0.25;
                            $('#calculatedHours').text('Hours split: ' + calculation);
                        } else {
                            $('#calculatedHours').text('Hours split: ' + calculation);
                        }
                    }
                });
            }
        }

        function splitTimeCross() {
            var selection = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            $('input.hiddenTimeChange').val('true');
            var numCheckedCounter = 0;
            if (selection == "Daily") {
                $('.modalCheckBox').each(function(i, v) {
                    if ($(v).is(':checked')) {
                        numCheckedCounter++;
                    }
                });
            } else {
                numCheckedCounter = 1;
            }
            var projCounter = 0;
            $('.testVFDailyMon.' + crossPortName).each(function(i, v) {
                projCounter++;
            });
            var multiplier = numCheckedCounter * projCounter;
            var counter = 0;
            var totalHours = document.getElementById('enterSplitHours').value;
            if (multiplier != 0) {

                $('.modalCheckBox').each(function(i, v) {
                    counter++;

                    if (selection == "Daily") {
                        if ($(v).is(':checked')) {
                            var calculation = totalHours / multiplier;
                            if (calculation % 0.25 != 0) {
                                calculation -= calculation % 0.25;
                                calculation += 0.25;

                            }
                            if (counter == 1 && $('.testVFDailyMon.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailyMon.' + crossPortName).val(calculation);
                            else if (counter == 2 && $('.testVFDailyTue.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailyTue.' + crossPortName).val(calculation);
                            else if (counter == 3 && $('.testVFDailyWed.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailyWed.' + crossPortName).val(calculation);
                            else if (counter == 4 && $('.testVFDailyThu.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailyThu.' + crossPortName).val(calculation);
                            else if (counter == 5 && $('.testVFDailyFri.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailyFri.' + crossPortName).val(calculation);
                            else if (counter == 6 && $('.testVFDailySat.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailySat.' + crossPortName).val(calculation);
                            else if (counter == 7 && $('.testVFDailySun.' + crossPortName).attr("disabled") == null)
                                $('.testVFDailySun.' + crossPortName).val(calculation);
                            //$('input.testVFDailySat').val(2)
                        }
                    } else {
                        var calculation = totalHours / multiplier;
                        if (calculation % 0.25 != 0) {
                            calculation -= calculation % 0.25;
                            calculation += 0.25;
                        }
                        $('.testVFMonthly.' + crossPortName).val(calculation);
                    }
                });
            }
        }

        var crossPortName;
        var crossPortNameOriginal;
        var crossPortTitleName;
        var crossPortCompanies;

        function storeCross(projectName) {
            crossPortName = projectName.replace(/\s/g, "");
            crossPortName = crossPortName.replace(".", "-");
            crossPortName = crossPortName.replace(",", "-");
            crossPortNameOriginal = projectName;
            crossPortTitleName = "Split Time for ";
            $("#companyList").empty();
            $('.companyLabel.' + crossPortName).each(function(i, v) {
                var ul = document.getElementById("companyList");
                var li = document.createElement("li");
                var textline = document.createTextNode($(v).text());
                li.appendChild(textline);
                ul.appendChild(li);
            });
            document.getElementById('myModalLabel').innerHTML = crossPortTitleName + "<b>" + crossPortNameOriginal + "</b>";

        }

        function radioChange() {
            if (radioChangeCounter = true) {
                $("#timePreferenceWarning").dialog("open");
            } else {
                radioChangeCounter = true;
            }

        }

        function selectUserChange() {
            preferenceChange();
            selectUserChangedAction();
        }

        function preferenceChange() {
            var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            if (radioSelected == 'Monthly') {
                var formatdate = 'MM/YYYY';
            } else {
                var formatdate = 'MM/DD/YYYY'
            }
            $('#datetimepicker1').datetimepicker({
                format: formatdate
            });
            var selection = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
            if (selection == "Monthly") {
                $('#nextPrevWeeks').css({
                    'display': 'none'
                });
                $('.mtdHoursColumn').css({
                    'display': 'none'
                });
                $('.mtdHoursColumnHeader').css({
                    'display': 'none'
                });
                $('input.testVFDailyMon').css({
                    'display': 'none'
                });
                $('input.testVFDailyTue').css({
                    'display': 'none'
                });
                $('input.testVFDailyWed').css({
                    'display': 'none'
                });
                $('input.testVFDailyThu').css({
                    'display': 'none'
                });
                $('input.testVFDailyFri').css({
                    'display': 'none'
                });
                $('input.testVFDailySat').css({
                    'display': 'none'
                });
                $('input.testVFDailySun').css({
                    'display': 'none'
                });
                $('th.dayHeader').css({
                    'display': 'none'
                });
                $('input.testVFMonthly').css({
                    'display': ''
                });
                $('td.testVFMonthlltd').css({
                    'display': ''
                });
                $('th.monthlyHeader').css({
                    'display': ''
                });
            } else if (selection == "Daily") {
                $('#nextPrevWeeks').css({
                    'display': ''
                });
                $('.mtdHoursColumn').css({
                    'display': ''
                });
                $('.mtdHoursColumnHeader').css({
                    'display': ''
                });
                $('input.testVFMonthly').css({
                    'display': 'none'
                });
                $('th.monthlyHeader').css({
                    'display': 'none'
                });
                $('td.testVFMonthlltd').css({
                    'display': 'none'
                });
                $('input.testVFDailyMon').css({
                    'display': ''
                });
                $('input.testVFDailyTue').css({
                    'display': ''
                });
                $('input.testVFDailyWed').css({
                    'display': ''
                });
                $('input.testVFDailyThu').css({
                    'display': ''
                });
                $('input.testVFDailyFri').css({
                    'display': ''
                });
                $('input.testVFDailySat').css({
                    'display': ''
                });
                $('input.testVFDailySun').css({
                    'display': ''
                });
                $('th.dayHeader').css({
                    'display': ''
                });
            }
        }

        function changedTime() {
            $('input.hiddenTimeChange').val('true');
        }

       $(function() {
            $("#unsavedTime").dialog({
                autoOpen: false,
                resizable: false,
                height: 260,
                width: 400,
                modal: true,
                buttons: {
                    "Save Entries": function() {
                        document.getElementById("pageID:formid:saveAll").click();
                    },
                    "Continue without Saving": function() {
                        $('input.hiddenTimeChange').val('false');
                        statusHasChanged = false;
                        $(this).dialog("close");
                    }
                }
            });
        });
        $(function() {
            $("#unsavedTime2").dialog({
                autoOpen: false,
                resizable: false,
                height: 260,
                width: 400,
                modal: true,
                buttons: {
                    "Save Entries": function() {
                        document.getElementById("pageID:formid:saveAll").click();
                    },
                    "Continue without Saving": function() {
                        $('input.hiddenTimeChange').val('false');
                        statusHasChanged = false;
                        $(this).dialog("close");
                    }
                }
            });
        });
        $(function() {
            $("#removeProjectWarning").dialog({
                autoOpen: false,
                resizable: false,
                height: 260,
                width: 400,
                modal: true,
                buttons: {
                    "Yes": function() {
                        $(this).dialog("close");
                        var i = removeProjectThis.parentNode.parentNode.parentNode.rowIndex;
                        document.getElementById("mytable").deleteRow(i);
                        var pName = removeProjectName;
                        var curUser = $(".selectUser1 option:selected").val();
                        SL_TimeEntryController.removeProject(pName, curUser,
                            function(r, e) {});
                        removeProjectNameOnly = removeProjectName.replace(/\'/g,"\\\'");
                        removeProjectCompany = removeProjectName.replace(/\'/g,"\\\'");
                        removeProjectName = removeProjectName.replace(/\'/g,"\\\'");
                        var tableadd = '<tr><td style="width:65px"><button id="addbutton" type="button" class="btn btn-default" aria-label="Left Align" onclick="addProject(\'' + removeProjectName + '\',\'' + removeProjectNameOnly + '\',\'' + removeProjectCompany + '\');"><span class="glyphicon glyphicon-plus" aria-hidden="true" style="color:green"></span></button></td><td><div style="float:left;margin-right:20px;"><label class="companyLabel" style="display:block" for="projName"><font size="1">' + removeProjectCompany + '</font></label><span id="projName">' + removeProjectNameOnly + '</span></div></td></tr>';
                        $('#activeProjTable > tbody > tr:first').before(tableadd);

                    },
                    "No": function() {
                        $(this).dialog("close");
                    }
                }
            });
        });
        $(function() {
            $("#timePreferenceWarning").dialog({
                autoOpen: false,
                resizable: false,
                height: 260,
                width: 400,
                modal: true,
                buttons: {
                    "Yes": function() {

                        var curUser = $(".selectUser1 option:selected").val();
                        var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
                        var currDate = $("[id*='theHiddenInputDate']").val()
                        SL_TimeEntryController.radioChanged(curUser, radioSelected, currDate,
                            function(r, e) {
                                selectUserChangedAction();
                            });
                        $(this).dialog("close");
                    },
                    "No": function() {
                        radioSwitchCounter = false;
                        var radioSelected = $("input[type='radio'][name='pageID:formid:timeRadioButton']:checked").val();
                        if (radioSelected == 'Monthly') {
                            $("input[type='radio'][name='pageID:formid:timeRadioButton']").val(['Daily']);
                        } else {
                            $("input[type='radio'][name='pageID:formid:timeRadioButton']").val(['Monthly']);
                        }
                        $(this).dialog("close");
                    }
                }
            });
        });
        $(function() {
            $("#CloseProjectWarning").dialog({
                autoOpen: false,
                resizable: false,
                height: 260,
                width: 400,
                modal: true,
                buttons: {
                    "Yes": function() {
                        var projNameClosed = closedProjectName;
                        $(closedProjectElement).prop('disabled', 'true');
                        SL_TimeEntryController.closeProject(projNameClosed,
                            function(r, e) {

                            });
                        $(this).dialog("close");
                    },
                    "No": function() {
                        //Do nothing and close the alert
                        $(this).dialog("close");
                    }
                }
            });
        });
        var radioSwitchCounter = true;

        $(document).ready(function() {

            (function($) {

                $('#filter').keyup(function() {
                    document.getElementById("pageID:formid:newProjectId").style.opacity = 1;
                    document.getElementById("pageID:formid:newProjectId").style.filter = "alpha(opacity = 100)";
                    document.getElementById("pageID:formid:newProjectId").disabled = false;
                    var rex = new RegExp($(this).val(), 'i');
                    $('.searchable tr').hide();
                    $('.searchable tr').filter(function() {
                        return rex.test($(this).text());
                    }).show();

                })

            }(jQuery));

        });
        $(document).ready(function() {

            (function($) {

                $('#firstfilter').keyup(function() {
                    var rex = new RegExp($(this).val(), 'i');
                    $('.firstsearchable tr').hide();
                    $('.firstsearchable tr').filter(function() {
                        return rex.test($(this).text());
                    }).show();

                })

            }(jQuery));

        });

       function checkTimeChange() {
            var changed = $('input.hiddenTimeChange').val();

            if (changed == 'true'||statusHasChanged==true) {
                $("#unsavedTime").dialog("open");
            }
        }

        function addProject(addProjectName, addProjectNameOnly, addProjectCompany) {
            addProjectAction(addProjectName);
        }

        function reactivateProject(reProjectName) {
            reactivateProjectAction(reProjectName);
        }

        var closedProjectName;
        var closedProjectElement;

        function closeProject(projectName, el) {
            closedProjectName = projectName;
            $("#CloseProjectWarning").dialog("open");
            closedProjectElement = el;
        }

        var projectHealthList;
        function getProjectHealthOptions()
        {
            if(projectHealthList==null)
            {
             SL_TimeEntryController.getProjectHealth(function(r,e){
                var projectHealthList = r.split('|');
                var sel = document.getElementById('projHealthSelect');
                for(var i = 0; i < projectHealthList.length; i++) {
                    var opt = document.createElement('option');
                    opt.innerHTML = projectHealthList[i];
                    opt.value = projectHealthList[i];
                    sel.appendChild(opt);
            }
            populateHealth();
            });
            }
             else
             {
                 var sel = document.getElementById('projHealthSelect');
                    for(var i = 0; i < projectHealthList.length; i++) {
                        var opt = document.createElement('option');
                        opt.innerHTML = projectHealthList[i];
                        opt.value = projectHealthList[i];
                        sel.appendChild(opt);
             }
             populateHealth();
         }
        }

        var projectEffortList;
        function getProjectEffortOptions()
        {
            if(projectEffortList==null)
            {
             SL_TimeEntryController.getProjectEffort(function(r,e){
                var projectEffortList = r.split('|');
                var sel = document.getElementById('EffortSelect');
                for(var i = 0; i < projectEffortList.length; i++) {
                    var opt = document.createElement('option');
                    opt.innerHTML = projectEffortList[i];
                    opt.value = projectEffortList[i];
                    sel.appendChild(opt);
            }
            populateEffort();
            });
            }
             else
             {
                 var sel = document.getElementById('EffortSelect');
                    for(var i = 0; i < projectEffortList.length; i++) {
                        var opt = document.createElement('option');
                        opt.innerHTML = projectEffortList[i];
                        opt.value = projectEffortList[i];
                        sel.appendChild(opt);
             }
             populateEffort();
         }
        }



        var removeProjectThis;
        var removeProjectName;
        var removeProjectNameOnly;
        var removeProjectCompany;

        function removeProject(r, projectName, projectNameOnly, projectCompany) {
            removeProjectThis = r;
            removeProjectName = projectName;
            removeProjectNameOnly = projectNameOnly;
            removeProjectCompany = projectCompany;
            $("#removeProjectWarning").dialog("open");
        }

        function showActiveProjects() {
            document.getElementById('activeProjTable').style.display = '';
            document.getElementById('closedProjTable').style.display = 'none';
            $('#closedProjectLink').removeClass('active');
            $('#activeProjectLink').addClass('active');
        }

        function showClosedProjects() {
            document.getElementById('activeProjTable').style.display = 'none';
            document.getElementById('closedProjTable').style.display = '';
            $('#closedProjectLink').addClass('active');
            $('#activeProjectLink').removeClass('active');
        }

        function submitEverything() {
            statusOverwriteSubmit();
        }

        

          function populateHealth()
          {
            if(jsonHealth[String(selectedProjectHold).trim()]!=null)
            {
                $('#projHealthSelect').val(jsonHealth[String(selectedProjectHold).trim()]);
            }
            else
            {
                var name = JSON.parse('{!strHealthWrapper}');
                for (var indx = 0; indx < name.length; indx++) {
                    if (name[indx].strProjectName == String(selectedProjectHold).trim()) {
                       $('#projHealthSelect').val(name[indx].strHealth);
                        break;
                    }
                }
            }
          }

          function populateEffort()
          {
            if(jsonEffort[String(selectedProjectHold).trim()]!=null)
            {
                $('#EffortSelect').val(jsonEffort[String(selectedProjectHold).trim()]);
            }
            else
            {
                var name = JSON.parse('{!strEffortWrapper}');
                for (var indx = 0; indx < name.length; indx++) {
                    if (name[indx].strProjectName == String(selectedProjectHold).trim()) {
                       $('#EffortSelect').val(name[indx].strEffort);
                        break;
                    }
                }
            }
          }

          function populateDate() {
            if(jsonEndDates[String(selectedProjectHold).trim()]!=null)
            {
                document.getElementById('enddateid').value = jsonEndDates[String(selectedProjectHold).trim()];
            }
            else
            {
                var name = JSON.parse('{!strEndDateWrapper}');
                for (var indx = 0; indx < name.length; indx++) {
                    if (name[indx].strProjectName == String(selectedProjectHold).trim()) {
                        var projectEndDate = '';
                        if (name[indx].strEndDate.split('-').length > 1) {
                            var date = name[indx].strEndDate.split('-');
                            projectEndDate = date[1] + '/' + date[2] + '/' + date[0];
                            var d = new Date(date[0], date[1] - 1, date[2]);
                            if (d < new Date()) {
                                $('#enddateid').css("border-style", "solid");
                                $('#enddateid').css("border-width", "medium");
                                $('#enddateid').css("border-color", "#EA8C2F");
                            }
                        }
                        document.getElementById('enddateid').value = projectEndDate;

                        break;
                    }
                }
            }
            if (new Date($('#duedateid').val()) < new Date()) {
                if ($('#duedateid').val() != "") {
                    $('#duedateid').css("border-style", "solid");
                    $('#duedateid').css("border-width", "medium");
                    $('#duedateid').css("border-color", "#EA8C2F");
                }
            }
            changeBarColor();
        }
    
        function changeBarColor() {
            if ({!isPrevPercentSame}) {
                $('#prgbar').removeClass('progress-bar-success');
                $('#prgbar').addClass('progress-bar-warning');
                $('#percentComplete').css("border-style", "solid");
                $('#percentComplete').css("border-width", "medium");
                $('#percentComplete').css("border-color", "#EA8C2F");
            } else {
                $('#prgbar').removeClass('progress-bar-warning');
                $('#prgbar').addClass('progress-bar-success');
            }
        }
        function seeAllProjects()
        {
            aggregateViewAction();

        }
    </script>
    <!--showmsg,custPopupOuter-->

    <apex:form id="formid">

        <body>
            <apex:outputPanel rendered="{!!isInsert}" id="opId1" style="background:red">

                <div id="sl">
                    <div id="sl-body">
                        <div class="container-fluid">
                            <div id="loadingSpinner" class="se-pre-con"></div>

                            <div id="unsavedTime" style="display:none" title="Unsaved Entries">
                                <span class="ui-icon ui-icon-alert"></span>
                                <p><font size="3">You have entered unsaved time for the selected date range. Changing dates will result in the loss of all unsaved entries.</font></p>
                            </div>
                            <div id="unsavedTime2" style="display:none" title="Unsaved Entries">
                                <span class="ui-icon ui-icon-alert"></span>
                                <p><font size="3">You have entered unsaved time for the selected Users. Changing the Selected User will result in the loss of all unsaved entries.</font></p>
                            </div>
                            <div id="removeProjectWarning" style="display:none" title="Alert">
                                <span class="ui-icon ui-icon-alert"></span>
                                <p><font size="3">If you remove yourself from this project, you will no longer be able to add time or status updates.  Are you sure you want to remove yourself from this project?</font></p>
                            </div>
                            <div id="timePreferenceWarning" style="display:none" title="Alert">
                                <span class="ui-icon ui-icon-alert"></span>
                                <p><font size="3">It is recommended that you change your time entry method at the beginning of the month prior to entering any time for the month. Switching between options will delete all timecards for the selected month. Are you sure you want to switch time preferences?</font></p>
                            </div>
                            <div id="CloseProjectWarning" style="display:none" title="Alert">
                                <span class="ui-icon ui-icon-alert"></span>
                                <p><font size="3">Closing this project will set this month as the project's last open time and status entry cycle.  Closing a project affects time and status reporting abilities for all project team members.  Are you sure you want to close out this project?</font></p>
                            </div>
                            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            <h4 class="modal-title" id="myModalLabel"></h4>
                                        </div>
                                        <div class="modal-body" style="height:235px">
                                            <div class="container-fluid col-md-12">
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        <div class="row">
                                                            Enter Hours to split:
                                                            <div class="input-group">
                                                                <input id="enterSplitHours" class="form-control" onkeyup="splitTimeCrossCalculate()" />
                                                                <span class="input-group-addon" id="calculatedHours">Hours Split: 0</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 daysofweekcheckboxes" style="display:none">
                                                        <apex:repeat value="{!inputFields}" var="headerDay">
                                                            <font size="2">
                     <label class="checkbox">
                     <input class="modalCheckBox" type="checkbox" onchange="splitTimeCrossCalculate()" value=""/>{!headerDay}
                     </label>
                    </font>
                                                        </apex:repeat>
                                                    </div>
                                                    <div class="col-md-5">
                                                        <ul id="companyList" class="list-unstyled">
                                                        </ul>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                            <button type="button" class="btn btn-primary" onclick="splitTimeCross()">Split Time</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <apex:inputHidden value="{!selectDate}" id="theHiddenInputDate" />
                            <apex:inputHidden value="{!currentDate}" id="hiddenDateforcontoller" />
                            <apex:inputHidden value="{!oldselectproject}" id="oldselectedproject" />
                            <apex:inputHidden value="{!currentDueDate}" id="hiddenDueDate" />
                            <input type="hidden" class="hiddenTimeChange" value="false" id="hiddenTimeEnteredChange" />

                            <apex:actionFunction action="{!updateDateRange}" status="loadingspin" name="updateMTDHours" />
                            <apex:actionFunction action="{!updateDateRange}" status="loadingspin" name="updateDateRange" />
                            <apex:actionFunction action="{!fillDailyExistingTimecards}" name="updateDailyCells" />
                            <apex:actionFunction action="{!prevWeek}" status="loadingspin" name="prevWeekAction" />
                            <apex:actionStatus id="loadingspin" onstart="loading(true)" onstop="loading(false)" />
                            <apex:actionStatus id="loadingspinforever" onstart="loading(true)" />
                            <apex:actionFunction action="{!nextWeek}" status="loadingspin" name="nextWeekAction" />
                            <apex:actionFunction action="{!selectUserChanged}" status="loadingspin" name="selectUserChangedAction" oncomplete="refreshPage()" rerender="thehiddenInputDate" />
                            <apex:actionFunction action="{!submitStatus}" status="loadingspin" name="submitStatusAction" rerender="outputProjTable" />
                            <apex:actionFunction action="{!submitStatus}" status="loadingspinforever" name="submitStatusActionSubmit" oncomplete="sendEd();" rerender="outputProjTable" />
                            <apex:actionFunction action="{!loadStatus}" name="loadProjectStatus" reRender="outputstatusTable" oncomplete="createEditor()">
                                <apex:param name="projectName" value="" assignTo="{!selectedProject}" />
                            </apex:actionFunction>
                            <apex:actionFunction action="{!addToProject}" name="addProjectAction" status="loadingspin" oncomplete="submitEverything()" reRender="outputProjTable;activeProjPanel">
                                <apex:param name="addprojectName" value="" assignTo="{!addProject}" />
                            </apex:actionFunction>
                            <apex:actionFunction action="{!reactivateProject}" name="reactivateProjectAction" status="loadingspin"  oncomplete="submitEverything()" reRender="outputProjTable;activeProjPanel">
                                <apex:param name="reprojectName" value="" assignTo="{!reProject}" />
                            </apex:actionFunction>
                            <apex:actionFunction action="{!statusChanged}" name="storeProjectStatus" reRender="theHiddenInputDate;outputstatusTable">
                                <apex:param name="projectPerCompleteStatus" value="" assignTo="{!currentPercentComplete}" />
                                <apex:param name="projectNStepsStatus" value="" assignTo="{!currentNextSteps}" />
                                <apex:param name="projectLStepsStatus" value="" assignTo="{!currentLastSteps}" />
                                <!--<apex:param name="projectCommentsStatus" value="" assignTo="{!currentComments}" />-->
                                <apex:param name="projectDueDateStatus" value="" assignTo="{!currentDueDate}" />
                            </apex:actionFunction>
                            <apex:actionFunction action="{!statusChanged}" name="storeProjectStatusSubmit" status="loadingspinforever" oncomplete="submitStatusActionSubmit()" reRender="theHiddenInputDate;outputstatusTable">
                                <apex:param name="projectPerCompleteStatus" value="" assignTo="{!currentPercentComplete}" />
                                <apex:param name="projectNStepsStatus" value="" assignTo="{!currentNextSteps}" />
                                <apex:param name="projectLStepsStatus" value="" assignTo="{!currentLastSteps}" />
                               <!-- <apex:param name="projectCommentsStatus" value="" assignTo="{!currentComments}" />-->
                                <apex:param name="projectDueDateStatus" value="" assignTo="{!currentDueDate}" />
                            </apex:actionFunction>
                            <apex:actionFunction action="{!statusChanged}" name="storeProjectStatusLoad" reRender="theHiddenInputDate;outputstatusTable" oncomplete="loadStatus();">
                                <apex:param name="projectPerCompleteStatus" value="" assignTo="{!currentPercentComplete}" />
                                <apex:param name="projectNStepsStatus" value="" assignTo="{!currentNextSteps}" />
                                <apex:param name="projectLStepsStatus" value="" assignTo="{!currentLastSteps}" />
                                <!--<apex:param name="projectCommentsStatus" value="" assignTo="{!currentComments}" />-->
                                <apex:param name="projectDueDateStatus" value="" assignTo="{!currentDueDate}" />
                            </apex:actionFunction>
                            <apex:actionFunction action="{!seeAllProjectsAction}" name="aggregateViewAction" status="loadingspinforever" oncomplete="refreshPage()" reRender="theHiddenInputDate;">
                               <!-- <apex:param name="seeAllProjects" value="" assignTo="{!seeAllProjects}" />-->
                            </apex:actionFunction>
                            <apex:actionFunction action="{!statusChanged}" name="statusChangedAction" reRender="outputstatusTable" />
                            <div class="row">
                                <div class="col-sm-9">
                                    <div class="row">
                                        <div id="jumpLinkAllDiv" class="col-sm-5">
                                            <h4>
                                                My Active Projects
                                            </h4>
                                            <A HREF="#jumpLinkMyDiv"><u>Go To All Other Projects</u></A>

                                        </div>
                                        <div class="col-sm-2">
                                        </div>
                                        <div class="col-sm-3">
                                            <div class="selectedUserDiv">
                                                <label for="selectUser1">Time For: </label>
                                                <apex:selectList styleClass="selectUser1 form-control" size="1" value="{!selectedUser}" onchange="selectUserChange()" onclick="selectUserChangeCheck()" id="selectUser1">
                                                    <apex:selectOptions id="selectedOp" value="{!availableUsers}" />
                                                </apex:selectList>
                                            </div>
                                            
                                        </div>
                                        <div class="col-sm-2">
                                        </div>

                                    </div>


                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div style="display: inline-block;border-style:solid;border-width:2px;padding-left:2px">
                                                <font size="3"><b> My Hours MTD: </b></font><span id="totalUserHours"><i>{!userMTDHoursTotal}</i></span>
                                            </div>
                                        </div>
                                        <div class="col-sm-2">
                                        </div>
                                        <div class='col-sm-3'>
                                            <label for="datetimepicker1">{!weekOrMonth} Of: </label>
                                            <div class="form-group">
                                                <div class='input-group date' id='datetimepicker1' onclick="checkTimeChange()">
                                                    <input type='text' class="form-control" value="{!currentDate}" />
                                                    <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class='col-sm-2'>
                                            <apex:selectRadio style="display:none" styleClass="radioClass" id="timeRadioButton" value="{!dailyOrMonthly}" onchange="radioChange()">
                                                <apex:selectOptions value="{!timeOptions}" />
                                            </apex:selectRadio>
                                        </div>


                                    </div>
                                    <div class="row">
                                        <div class="col-sm-5">
                                            <div class="row">
                                                <div class="col-sm-5">
                                                    <div class="aggregateViewBtn" style="display:none">
                                                        <label for="seeAllProjectsTextbox" > Show all projects </label>
                                                        <apex:inputCheckbox style="float:left" styleclass="aggregateViewBtn" value="{!seeAllProjects}" onchange="seeAllProjects();"/>
                                                    </div>
                                                    <apex:commandButton styleClass="btn btn-md btn-default" value="Unlock time" action="{!unlockTimeRecords}" rendered="{!isSystemAdmin}" />
                                                </div>
                                              
                                            </div>
                                    
                                        </div>
                                        <div class="col-sm-2">
                                        </div>
                                        <div id="nextPrevWeeks" class="col-sm-5">
                                            <button id="prevWeekbtn" style="float:left" type="button" class="btn btn-md btn-default" onclick="prevWeek();"><span class="glyphicon glyphicon-backward" aria-hidden="true"></span> Prev Week</button>
                                            <button id="nextWeekbtn" style="float:right" type="button" class="btn btn-md btn-default" onclick="nextWeek();">Next Week <span class="glyphicon glyphicon-forward" aria-hidden="true"></span></button>
                                        </div>

                                    </div>

                                    <div class="row top-buffer">
                                        <div class="col-sm-12">
                                            <div class="input-group" style="padding-top:5px;">
                                                <span class="input-group-btn">
                    <apex:commandButton id="saveAll2" styleClass="btn btn-md btn-success" value="Save" onclick="submitEverything()" reRender="pageID:formid:outputProjTable"/> 
                </span>
                                                <span class="input-group-addon">Search</span>
                                                <input id="firstfilter" type="text" class="form-control" />
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row top-buffer">

                                        <div class="col-sm-12">
                                            <apex:outputPanel id="outputProjTable">
                                                <table id='mytable' class="table">
                                                    <thead>
                                                        <th>
                                                        </th>
                                                        <th>
                                                        </th>
                                                        <th>
                                                        </th>
                                                        <th>
                                                        </th>
                                                        <th class="mtdHoursColumnHeader">
                                                            <font size="2">My MTD</font>
                                                        </th>
                                                        <th class='mtdHoursProjectColumnHeader'>
                                                            <font size="2">MTD</font>
                                                        </th>
                                                        <th class='ltdHoursProjectColumnHeader'>
                                                            <font size="2">LTD</font>
                                                        </th>
                                                        <th class='monthlyHeader' style="display:none">
                                                            <font size="2">MTD Hours</font>
                                                        </th>

                                                        <apex:repeat id="daysOfWeek" value="{!inputFields}" var="headerDay">
                                                            <th style="display:none" class='dayHeader'>
                                                                <font size="2">{!headerDay}</font>
                                                            </th>
                                                        </apex:repeat>
                                                    </thead>
                                                    <tbody class="firstsearchable">
                                                        <apex:repeat id="projectListID" value="{!mtdMap}" var="proj">
                                                            <tr onclick="selectProjectChanged('{!JSENCODE(proj)}', this);">
                                                                <div class="form-group">
                                                                    <td style="width:10px;">
                                                                        <center>
                                                                            <button id="closebutton" name="closeButton{!proj}" type="button" class="btn btn-xs btn-default closebtn" data-toggle="tooltip" data-placement="top" title="Clicking this button will set this project to close on {!nextClosedDate}" aria-label="Left Align" onclick="closeProject('{!JSENCODE(proj)}',this)">
                                                                                <span class="glyphicon glyphicon-remove" aria-hidden="true" style="color:red"></span>
                                                                            </button>
                                                                            <span data-toggle="tooltip" data-placement="top" title="This project will be closed and removed from your project list on {!projCloseDates[proj]}" style="color:red;font-weight:bold">{!projCloseDates[proj]}</span>
                                                                        </center>
                                                                    </td>
                                                                    <td style="width:10px;">
                                                                        <center>
                                                                            <button id="removebutton" type="button" class="btn btn-xs btn-default" aria-label="Left Align" data-toggle="tooltip" data-placement="top" title="Clicking this button will remove this project from your project list and set your end date to today's date" onclick="removeProject(this,'{!JSENCODE(proj)}','{!JSENCODE(mtdMapNames[proj])}','{!JSENCODE(mapNamesToCompany[proj])}')">
                                                                                <span class="glyphicon glyphicon-minus-sign" aria-hidden="true" style="color:black"></span>
                                                                            </button>
                                                                        </center>
                                                                    </td>
                                                                    <td style="width:10px;">
                                                                        <center>
                                                                            <button id="splitbutton" style="display:{!IF(crossMap[mtdMapNames[proj]] > 1, '', 'none')}" data-toggle="modal" data-target="#myModal" type="button" class="btn btn-xs btn-default" aria-label="Left Align" onclick="storeCross('{!JSENCODE(mtdMapNames[proj])}')">
                                                                                <span class="glyphicon glyphicon-tasks" aria-hidden="true" style="color:green"></span>
                                                                            </button>
                                                                        </center>
                                                                    </td>
                                                                    <td style="display:none">
                                                                       <!-- <span class="projNameSpan" name="{!proj}">{!proj}</span>-->
                                                                        <apex:outputText id="projName" styleclass="projNameSpan" value="{!proj}"></apex:outputText>
                                                                    </td>
                                                                    <td>
                                                                        <div style="float:left;margin-right:20px;">
                                                                            <label class="companyLabel {!mtdMapNamesNoSpace[proj]}" style="display:block" for="projNameOnly">
                                                                                <font size="1">{!mapNamesToCompany[proj]}</font>
                                                                            </label>
                                                                            <font size="2"><a target="_blank" href="/{!projectNameMap[proj]}"><apex:outputText id="projNameOnly" value="{!mtdMapNames[proj]}"></apex:outputText></a></font>
                                                                        </div>
                                                                    </td>
                                                                    <td class="mtdHoursColumn">
                                                                        <span class="mtdHoursSpan" id="mtdHours"><center><i>{!mtdMap[proj]}</i></center></span>
                                                                    </td>
                                                                    <td class="mtdHoursProjectColumn">
                                                                        <span id="mtdHoursProject" data-toggle="popoverHours" data-trigger="hover" data-html="true" data-placement="right" data-delay="500" data-content="{!mapWGMTDHoursText[proj]}"><center><i>{!mtdMapHoursProject[proj]}</i></center></span>
                                                                    </td>
                                                                    <td class="ltdHoursProjectColumn">
                                                                        <span id="ltdHoursProject" data-toggle="popoverHours" data-trigger="hover" data-html="true" data-placement="right" data-delay="500" data-content="{!mapWGLTDHoursText[proj]}"><center><i>{!ltdMapHoursProject[proj]}</i></center></span>
                                                                    </td>
                                                                    <apex:outputPanel rendered="{!IF(seeAllProjects!=true,true,false)}">
                                                                    <td class="testVFMonthlltd">
                                                                        <input style="width:50px;display:none" class="testVFMonthly {!mtdMapNamesNoSpace[proj]}" id="numHours" name="{!proj}" onchange="changedTime()" value="{!existingTimecardsMap[proj]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailyMon {!mtdMapNamesNoSpace[proj]}" id="numHoursMon" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][0]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailyTue {!mtdMapNamesNoSpace[proj]}" id="numHoursTue" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][1]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailyWed {!mtdMapNamesNoSpace[proj]}" id="numHoursWed" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][2]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailyThu {!mtdMapNamesNoSpace[proj]}" id="numHoursThu" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][3]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailyFri {!mtdMapNamesNoSpace[proj]}" id="numHoursFri" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][4]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailySat {!mtdMapNamesNoSpace[proj]}" id="numHoursSat" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][5]}" />
                                                                    </td>
                                                                    <td>
                                                                        <input style="width:50px;display:none" class="testVFDailySun {!mtdMapNamesNoSpace[proj]}" id="numHoursSun" name="{!proj}" onchange="changedTime()" value="{!mtdMapDaily[proj][6]}" />
                                                                    </td>
                                                                    </apex:outputPanel>
                                                                </div>
                                                            </tr>
                                                        </apex:repeat>
                                                    </tbody>
                                                </table>
                                            </apex:outputPanel>
                                            <apex:commandButton id="saveAll" styleClass="btn btn-md btn-success" value="Save" onclick="submitEverything()" reRender="pageID:formid:outputProjTable" />
                                        </div>

                                    </div>
                                </div>
                                <div class="col-sm-3">
                                 <!--  <div class="menu" style="overflow-y: scroll; height:815px;"> -->
                                 <div class="menu">
                                    <apex:outputPanel id="outputstatusTable">
                                        <table id="statusTableGrid" class="table">
                                            <tr>
                                                <td class="statusTD">
                                                    <apex:commandButton id="saveAll3" styleClass="btn btn-sm btn-success" style="float:right" value="Save" onclick="submitEverything()" reRender="pageID:formid:outputProjTable"/> 
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                    <h4>
                                                      Status Update {!currentDateStatus} 
                                                    </h4>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                    <h5>
                                                      {!selectedProject}
                                                    </h5>
                                                    <!-- <apex:outputText id="projNameStatus" value="{!selectedProject}" style="font-weight:bold"></apex:outputText> -->
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                    <div class="progress" style="margin-bottom:0px">
                                                        <div id="prgbar" class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="{!currentPercentComplete}" aria-valuemin="0" aria-valuemax="100" style="width:{!currentPercentComplete}%">
                                                            <span class="sr-only"> Complete (success)</span>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                               <td class="statusTD">
                                                     <div class="input-group">
                                                        <span class="input-group-addon smallerForm">% Complete</span>
                                                        <input id="percentComplete" class="form-control smallerForm" value="{!currentPercentComplete}" onkeyup="statusOverwrite()" />
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                     <div class="input-group">
                                                      <span class="input-group-addon smallerForm">Project Health</span>
                                                      <select class="form-control smallerForm" onblur="collectHealth('{!JSENCODE(selectedProject)}',this.value)" id="projHealthSelect">
                                                      </select>
                                                    </div>
                                                </td>
                                            </tr>
                                             <tr>
                                                <td class="statusTD">
                                                    <div class="input-group">
                                                      <span class="input-group-addon smallerForm">Effort</span>
                                                      <select class="form-control smallerForm" onblur="collectEffort('{!JSENCODE(selectedProject)}',this.value)" id="EffortSelect">
                                                      </select>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                               <td class="statusTD">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                                <!--<label for="enddateid" class="col-sm-3 control-label">End Date</label>-->
                                                                <div class='input-group date' id='datetimepicker3'>
                                                                <span class="input-group-addon smallerForm">End Date</span>
                                                                    <input type='text' id="enddateid" class="form-control smallerForm" onblur="collectDate('{!JSENCODE(selectedProject)}', this.value);" />
                                                                    <span class="input-group-addon smallerForm">
                                                                     <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                    <output id="NextStepsLastModified"> Next Steps <font size="1">{!currentNextStepsLastModified}</font></output>
                                                    <textarea id="nextSteps" value="{!currentNextSteps}" style="visibility:hidden;height:150px">{!currentNextSteps}</textarea>
                                                    <output id="totalCharNextSteps" value="0">0 of 500 characters</output>
                                                    <span id="wentOverWarningNextSteps" style="display:none"><font color="red"> Next Steps cannot be over 500 characters</font></span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                                <div class='input-group date' id='datetimepicker2'>
                                                                <span class="input-group-addon smallerForm">Next Steps Date</span>
                                                                    <input type='text' id="duedateid" class="form-control smallerForm" onblur="statusOverwrite()" value='{!currentDueDate}' />
                                                                    <span class="input-group-addon smallerForm">
                                                                <span class="glyphicon glyphicon-calendar"></span>
                                                                    </span>
                                                                </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="statusTD">
                                                    <output id="LastStepsLastModified">Last Steps <font size="1">{!currentLastStepsLastModified}</font></output>
                                                    <textarea id="lastStepsLocked" value="{!currentStatusLocked}" style="display:none">{!currentStatusLocked}</textarea>
                                                    <textarea id="lastSteps" value="{!currentLastSteps}" style="visibility:hidden;height:150px">{!currentLastSteps}</textarea>
                                                    <output id="totalCharLastSteps" value="0">0 of 500 characters</output>
                                                    <span id="wentOverWarningLastSteps" style="display:none"><font color="red"> Last Steps cannot be over 500 characters</font></span>
                                                </td>
                                            </tr>

                                           <!-- <tr>
                                                <td>
                                                    <output id="CommentsLastModified">Comments <font size="1">{!currentCommentsLastModified}</font></output>
                                                    <span id="wentOverWarningComments" style="display:none"><font color="red"> Comments cannot be over 500 characters</font></span>
                                                    <br/>
                                                    <textarea id="comments" value="{!currentComments}" style="visibility:hidden;height:150px">{!currentComments}</textarea>
                                                    <output id="totalCharComments" value="0">0 of 500 characters</output>
                                                </td>
                                            </tr>-->
                                        </table>
                                    </apex:outputPanel>
                                </div>
                                </div>
                            </div>
                           
                            <div class="row">
                             
                            <div class="col-sm-9" style="padding-top:25px">
                                <div id="jumpLinkMyDiv" class="col-lg-12">
                                <h4>
                                    All Other Projects
                                </h4>
                                <a href="#jumpLinkAllDiv">Go To My Projects</a>
                                    <apex:outputPanel id="activeProjPanel">
                                    <div class="row">
                                        <div class="input-group" style="padding-top:5px;">
                                            <span class="input-group-btn"><apex:commandButton id="newProjectId" styleClass="btn btn-md btn-default" value="New Project" onclick="openWindow(document.getElementById('{!$Component.selectUser1}'));" reRender="tstpopup"/></span>
                                            <span class="input-group-addon">Search</span>
                                            <input id="filter" type="text" class="form-control" placeholder="Search for your project before creating a new one..." />
                                        </div>
                                    </div>
                                    <div class="row" style="padding-top:5px">
                                        <ul class="nav nav-pills" style="padding-left:81px">
                                          <li id="activeProjectLink" role="presentation" class="active"><a href="#jumpLinkMyDiv" onclick="showActiveProjects()">Active Projects</a></li>
                                          <li id="closedProjectLink" role="presentation"><a href="#jumpLinkMyDiv" onclick="showClosedProjects()">Closed Projects</a></li>

                                        </ul>
                                    <!--<div style="padding-left:102px" >
                                        <button class="btn btn-default" type="button" onclick="showActiveProjects()" id="activeProjectButton">Active Projects</button>
                                        <button class="btn btn-default" type="button" onclick="showClosedProjects()" id="closedProjectButton">Closed Projects</button>
                                   </div>-->
                                    </div>
                                     <!--<div class="row">
                                        <div class="col-lg-12">
                                            <ul class="nav nav-tabs">
                                                <li id="activeProjectLink" role="presentation" class="active"><a href="#jumpLinkMyDiv" onclick="showActiveProjects()">All Active Projects</a></li>
                                                <li id="closedProjectLink" role="presentation"><a href="#jumpLinkMyDiv" onclick="showClosedProjects()">Closed Projects</a></li>
                                                <li role="presentation"><a href="#jumpLinkAllDiv">Go To My Open Projects</a></li>
                                            </ul>
                                        </div>
                                    </div>-->
                                    <div class="row">
                                        <table id="activeProjTable" class="table" style="margin-top:10px;">
                                            <thead>
                                                <th></th>
                                                <th style="width:500px"></th>
                                                <!--<th style="align:left">
                                                    <center> MTD</center>
                                                </th>
                                                <th style="align:left">
                                                    <center> LTD </center>
                                                </th>
                                                <th></th>-->
                                            </thead>
                                            <tbody class="searchable">

                                                <apex:repeat id="activProjList" value="{!allOtherActiveProjects}" var="activeProj">
                                                    <tr>
                                                        <td style="width:65px">
                                                            <button id="addbutton" type="button" class="btn btn-default" aria-label="Left Align" onclick="addProject('{!JSENCODE(activeProj.Company_project_name_formula__c)}','{!JSENCODE(activeProj.Name)}','{!JSENCODE(activeProj.Portfolio_Company__r.Name)}');">
                                                                <span class="glyphicon glyphicon-plus" aria-hidden="true" style="color:green"></span>
                                                            </button>
                                                        </td>
                                                        <td style="width:500px">
                                                            <div style="float:left;margin-right:20px;">
                                                                <label class="companyLabel" style="display:block" for="projName"><font size="1">{!activeProj.Portfolio_Company__r.Name}</font></label>
                                                                <a target="_blank" href="/{!projectNameMap[activeProj.Company_project_name_formula__c]}">
                                                                    <apex:outputText style="display:block" id="projName" value="{!activeProj.Name}"></apex:outputText>
                                                                </a>
                                                            </div>
                                                        </td>
                                                       <!-- <td style="align:left;width:80px">
                                                            <span id="AllmtdHoursProject" data-toggle="popoverHours" data-trigger="hover" data-html="true" data-placement="right" data-delay="500" data-content="{!mapWGMTDHoursText[activeProj.Company_project_name_formula__c]}"><center><i>{!mtdMapHoursProject[activeProj.Company_project_name_formula__c]}</i></center></span>
                                                        </td>
                                                        <td style="align:left;width:80px">
                                                            <span id="AllltdHoursProject" data-toggle="popoverHours" data-trigger="hover" data-html="true" data-placement="right" data-delay="500" data-content="{!mapWGLTDHoursText[activeProj.Company_project_name_formula__c]}"><center><i>{!ltdMapHoursProject[activeProj.Company_project_name_formula__c]}</i></center></span>
                                                        </td>
                                                        <td></td>-->
                                                    </tr>
                                                </apex:repeat>
                                            </tbody>
                                            <tr></tr>
                                        </table>
                                        <table id="closedProjTable" class="table" style="margin-top:10px;display:none">
                                            <thead>
                                                <th>
                                                    Reactivate Project
                                                </th>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                            </thead>
                                            <tbody class="searchable">
                                                <apex:repeat id="closeProjList" value="{!closedProjects}" var="closeProj">
                                                    <tr>
                                                        <td style="width:65px">
                                                            <button id="reactivatebutton" type="button" class="btn btn-default" aria-label="Left Align" onclick="reactivateProject('{!JSENCODE(closeProj.Company_project_name_formula__c)}');">
                                                                <span class="glyphicon glyphicon-flash" aria-hidden="true" style="color:Green"></span>
                                                            </button>
                                                        </td>
                                                        <td style="width:350px">
                                                            <div style="float:left;margin-right:20px;">
                                                                <label class="companyLabel" style="display:block" for="projName"><font size="1">{!closeProj.Portfolio_Company__r.Name}</font></label>
                                                                <a target="_blank" href="/{!projectNameMap[closeProj.Company_project_name_formula__c]}">
                                                                    <apex:outputText style="display:block" id="projName" value="{!closeProj.Name}"></apex:outputText>
                                                                </a>
                                                            </div>
                                                        </td>
                                                        <td>
                                                        </td>
                                                        <td>
                                                        </td>
                                                        <td>
                                                        </td>
                                                    </tr>
                                                </apex:repeat>
                                            </tbody>
                                        </table>
                                        </div>
                                       
                                    </apex:outputPanel>
                                </div>
                            </div>
                            </div>
                             <div class="col-sm-3">
                                        </div>
                                    
                        </div>
                    </div>
                </div>
            </apex:outputPanel>
            <!--*********************************************************Start New Project Functionality*****************************************************    -->
            <apex:outputPanel id="custPopupOuter">
                <apex:outputPanel id="custPopup" rendered="{!isInsert}">

                    <div id="sl">
                        <div id="sl-body">
                            <div style="padding-left:5%; padding-top:5px; padding-bottom:5px; background:#eeeeee; border-radius:5px">
                                <h2 style="font-size:30px;">New Project</h2>
                            </div>

                            <div id="divId">
                                <table width="100%" cellpadding="5px" cellspacing="5px" style=" border-collapse: separate; border-spacing: 0px 12px; padding-left:5%">
                                    <tr>
                                        <td style="width:40%!important;">Project Category</td>
                                        <td style="width:60%!important;">
                                            <span style="color: red; font-size:22px; ">|</span>
                                            <apex:selectList id="pCategory" style="display:inline!important" value="{!strSelectedProjectCategory}" multiselect="false" size="1" onchange="renderOtherFields();">
                                                <apex:selectOptions value="{!ProjectCategoryOptions}" />
                                            </apex:selectList>
                                            <!--<apex:inputField id="pCategory" style="display:inline!important"  value="{!objASProject.Project_Category__c}" onchange="renderOtherFields()"/>-->
                                        </td>
                                    </tr>
                                    <script>
                                        document.getElementById('{!$Component.pCategory}').disabled = 'true';
                                        $(document).ready(function() {
                                            document.getElementById('{!$Component.pCategory}').disabled = ''
                                        });
                                    </script>
                                </table>

                                <table id="cross" width="100%" cellpadding="5px" cellspacing="5px" style="display:none; border-collapse: separate; border-spacing: 0px 12px; padding-left:5%">
                                    <script>
                                        function getHLContactIds() {
                                            $('[id$=hiddenCompanyIds]').val($('#myAutocomplete').val());
                                        }
                                        $(document).ready(function() {
                                            $("#myAutocomplete").tokenInput({
                                                !PortfolioCompanies
                                            }, {
                                                preventDuplicates: true
                                            });
                                        });
                                    </script>
                                    <apex:repeat value="{!lstASProjectCWCross}" var="fieldValue">
                                        <apex:repeat value="{!objASProjectCross}" var="project">
                                            <tr>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'Name', '', 'none')}">
                                                    {!fieldValue.strFieldLabel}
                                                    <img id="helpImage" class="helptext" src="{!$Resource.SL_HelpIcon}" alt="" data-placement="right" data-toggle="tooltip" data-original-title="Do not enter the company name as part of the project name" title="" />
                                                    <script>
                                                        $(document).ready(function() {
                                                            $('[data-toggle="tooltip"]').tooltip();
                                                        });
                                                    </script>
                                                </td>

                                                <td style="width:40%!important; display:{!IF(AND(fieldValue.strFieldAPI != 'Name', fieldValue.strFieldAPI != 'Eng_Ltr_Executed__c', fieldValue.strFieldAPI != 'EBITDA_Value__c'), '', 'none')}">{!fieldValue.strFieldLabel}</td>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'Eng_Ltr_Executed__c', '', 'none')}">Engagement Letter</td>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'EBITDA_Value__c', '', 'none')}">EBITDA Value at Stake (MM)</td>
                                                <td style="width:{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), '30%!important', '60%!important')}; display:{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), 'inline-flex !important', '')}">
                                                    <span style="color: {!IF(fieldValue.isRequired, 'red', 'white')}; font-size:22px; ">|</span>
                                                    <apex:inputHidden value="{!strCompanyId}" id="inputTxtId_lkid" rendered="{!IF(fieldValue.strFieldAPI == 'Portfolio_Company__c', true, false)}" />

                                                    <apex:outputPanel rendered="{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), true, false)}">
                                                        <apex:inputHidden value="{!strSelectedCompanyIds}" id="hiddenCompanyIds" rendered="{!IF(isCrossPortfolio, true, false)}" />
                                                        <input type="text" id="myAutocomplete" style="width:230px;" />
                                                    </apex:outputPanel>

                                                    <apex:inputText html-placeholder="Start typing company name" style="display:inline!important" onchange="displayMsg();" onkeyup="resetCompanyId();" rendered="{!IF(AND(!isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), true, false)}" id="inputTxtId" value="{!strCompanyName}">
                                                        <c:SL_Autocomplete objectname="Account" sObjectFieldName="Name" autocomplete_textbox="{!$Component.inputTxtId}" isInlineVF="false" bgColor="#aaa" fontSize="12" />
                                                    </apex:inputText>

                                                    <apex:inputHidden value="{!strInvestmentOppId}" id="inputInvOppTxtId_lkid" rendered="{!IF(fieldValue.strFieldAPI == 'Investment_Opportunity__c', true, false)}" />
                                                    <apex:inputText html-placeholder="Start typing Inv. Opportunity" style="display:inline!important" onchange="displayMsg();" onkeyup="resetOpportunityId();" rendered="{!IF(fieldValue.strFieldAPI == 'Investment_Opportunity__c', true, false)}" id="inputInvOppTxtId" value="{!strInvestmentOppName}">
                                                        <c:SL_Autocomplete objectname="Deal__c" sObjectFieldName="Name" autocomplete_textbox="{!$Component.inputInvOppTxtId}" isInlineVF="false" bgColor="#aaa" fontSize="12" />
                                                    </apex:inputText>

                                                    <apex:inputField style="display:inline!important" value="{!project[fieldValue.strFieldAPI]}" rendered="{!IF(AND(fieldValue.strFieldAPI != 'Portfolio_Company__c', fieldValue.strFieldAPI != 'Investment_Opportunity__c'), true, false)}" />
                                                    <apex:outputPanel rendered="{!IF(OR(fieldValue.strFieldAPI == 'Portfolio_Company__c', fieldValue.strFieldAPI == 'Investment_Opportunity__c'), true, false)}">
                                                        <span id="spanId" style="display:none;color:red;"><b>Please search again</b></span>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                    </apex:repeat>
                                </table>

                                <table id="specific" width="100%" cellpadding="5px" cellspacing="5px" style="display:none; border-collapse: separate; border-spacing: 0px 12px; padding-left:5%">
                                    <apex:repeat value="{!lstASProjectCWSpecific}" var="fieldValue">
                                        <apex:repeat value="{!objASProjectSpecific}" var="project">
                                            <tr>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'Name', '', 'none')}">
                                                    {!fieldValue.strFieldLabel}
                                                    <img id="helpImage" class="helptext" src="{!$Resource.SL_HelpIcon}" alt="" data-placement="right" data-toggle="tooltip" data-original-title="Do not enter the company name as part of the project name" title="" />
                                                    <script>
                                                        $(document).ready(function() {
                                                            $('[data-toggle="tooltip"]').tooltip();
                                                        });
                                                    </script>
                                                </td>

                                                <td style="width:40%!important; display:{!IF(AND(fieldValue.strFieldAPI != 'Name', fieldValue.strFieldAPI != 'Eng_Ltr_Executed__c', fieldValue.strFieldAPI != 'EBITDA_Value__c'), '', 'none')}">{!fieldValue.strFieldLabel}</td>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'Eng_Ltr_Executed__c', '', 'none')}">Engagement Letter</td>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'EBITDA_Value__c', '', 'none')}">EBITDA Value at Stake (MM)</td>
                                                <td style="width:{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), '30%!important', '60%!important')}; display:{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), 'inline-flex !important', '')}">
                                                    <span style="color: {!IF(fieldValue.isRequired, 'red', 'white')}; font-size:22px; ">|</span>
                                                    <apex:inputHidden value="{!strCompanyId}" id="inputTxtId_lkid" rendered="{!IF(fieldValue.strFieldAPI == 'Portfolio_Company__c', true, false)}" />

                                                    <apex:outputPanel rendered="{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), true, false)}">
                                                        <apex:inputHidden value="{!strSelectedCompanyIds}" id="hiddenCompanyIds" rendered="{!IF(isCrossPortfolio, true, false)}" />
                                                        <input type="text" id="myAutocomplete" style="width:230px;" />
                                                    </apex:outputPanel>

                                                    <apex:inputText html-placeholder="Start typing company name" style="display:inline!important" onchange="displayMsg();" onkeyup="resetCompanyId();" rendered="{!IF(AND(!isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), true, false)}" id="inputTxtId" value="{!strCompanyName}">
                                                        <c:SL_Autocomplete objectname="Account" sObjectFieldName="Name" autocomplete_textbox="{!$Component.inputTxtId}" isInlineVF="false" bgColor="#aaa" fontSize="12" />
                                                    </apex:inputText>

                                                    <apex:inputHidden value="{!strInvestmentOppId}" id="inputInvOppTxtId_lkid" rendered="{!IF(fieldValue.strFieldAPI == 'Investment_Opportunity__c', true, false)}" />
                                                    <apex:inputText html-placeholder="Start typing Inv. Opportunity" style="display:inline!important" onchange="displayMsg();" onkeyup="resetOpportunityId();" rendered="{!IF(fieldValue.strFieldAPI == 'Investment_Opportunity__c', true, false)}" id="inputInvOppTxtId" value="{!strInvestmentOppName}">
                                                        <c:SL_Autocomplete objectname="Deal__c" sObjectFieldName="Name" autocomplete_textbox="{!$Component.inputInvOppTxtId}" isInlineVF="false" bgColor="#aaa" fontSize="12" />
                                                    </apex:inputText>

                                                    <apex:inputField style="display:inline!important" value="{!project[fieldValue.strFieldAPI]}" rendered="{!IF(AND(fieldValue.strFieldAPI != 'Portfolio_Company__c', fieldValue.strFieldAPI != 'Investment_Opportunity__c'), true, false)}" />
                                                    <apex:outputPanel rendered="{!IF(OR(fieldValue.strFieldAPI == 'Portfolio_Company__c', fieldValue.strFieldAPI == 'Investment_Opportunity__c'), true, false)}">
                                                        <span id="spanId" style="display:none;color:red;"><b>Please search again</b></span>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                    </apex:repeat>
                                </table>

                                <table id="diligence" width="100%" cellpadding="5px" cellspacing="5px" style="display:none; border-collapse: separate; border-spacing: 0px 12px; padding-left:5%">
                                    <apex:repeat value="{!lstASProjectCWDiligence}" var="fieldValue">
                                        <apex:repeat value="{!objASProjectDiligence}" var="project">
                                            <tr>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'Name', '', 'none')}">
                                                    {!fieldValue.strFieldLabel}
                                                    <img id="helpImage" class="helptext" src="{!$Resource.SL_HelpIcon}" alt="" data-placement="right" data-toggle="tooltip" data-original-title="Do not enter the company name as part of the project name" title="" />
                                                    <script>
                                                        $(document).ready(function() {
                                                            $('[data-toggle="tooltip"]').tooltip();
                                                        });
                                                    </script>
                                                </td>

                                                <td style="width:40%!important; display:{!IF(AND(fieldValue.strFieldAPI != 'Name', fieldValue.strFieldAPI != 'Eng_Ltr_Executed__c', fieldValue.strFieldAPI != 'EBITDA_Value__c'), '', 'none')}">{!fieldValue.strFieldLabel}</td>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'Eng_Ltr_Executed__c', '', 'none')}">Engagement Letter</td>
                                                <td style="width:40%!important; display:{!IF(fieldValue.strFieldAPI == 'EBITDA_Value__c', '', 'none')}">EBITDA Value at Stake (MM)</td>
                                                <td style="width:{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), '30%!important', '60%!important')}; display:{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), 'inline-flex !important', '')}">
                                                    <span style="color: {!IF(fieldValue.isRequired, 'red', 'white')}; font-size:22px; ">|</span>
                                                    <apex:inputHidden value="{!strCompanyId}" id="inputTxtId_lkid" rendered="{!IF(fieldValue.strFieldAPI == 'Portfolio_Company__c', true, false)}" />

                                                    <apex:outputPanel rendered="{!IF(AND(isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), true, false)}">
                                                        <apex:inputHidden value="{!strSelectedCompanyIds}" id="hiddenCompanyIds" rendered="{!IF(isCrossPortfolio, true, false)}" />
                                                        <input type="text" id="myAutocomplete" style="width:230px;" />
                                                    </apex:outputPanel>

                                                    <apex:inputText html-placeholder="Start typing company name" style="display:inline!important" onchange="displayMsg();" onkeyup="resetCompanyId();" rendered="{!IF(AND(!isCrossPortfolio, fieldValue.strFieldAPI == 'Portfolio_Company__c'), true, false)}" id="inputTxtId" value="{!strCompanyName}">
                                                        <c:SL_Autocomplete objectname="Account" sObjectFieldName="Name" autocomplete_textbox="{!$Component.inputTxtId}" isInlineVF="false" bgColor="#aaa" fontSize="12" />
                                                    </apex:inputText>

                                                    <apex:inputHidden value="{!strInvestmentOppId}" id="inputInvOppTxtId_lkid" rendered="{!IF(fieldValue.strFieldAPI == 'Investment_Opportunity__c', true, false)}" />
                                                    <apex:inputText html-placeholder="Start typing Inv. Opportunity" style="display:inline!important" onchange="displayMsg();" onkeyup="resetOpportunityId();" rendered="{!IF(fieldValue.strFieldAPI == 'Investment_Opportunity__c', true, false)}" id="inputInvOppTxtId" value="{!strInvestmentOppName}">
                                                        <c:SL_Autocomplete objectname="Deal__c" sObjectFieldName="Name" autocomplete_textbox="{!$Component.inputInvOppTxtId}" isInlineVF="false" bgColor="#aaa" fontSize="12" />
                                                    </apex:inputText>

                                                    <apex:inputField style="display:inline!important" value="{!project[fieldValue.strFieldAPI]}" rendered="{!IF(AND(fieldValue.strFieldAPI != 'Portfolio_Company__c', fieldValue.strFieldAPI != 'Investment_Opportunity__c'), true, false)}" />
                                                    <apex:outputPanel rendered="{!IF(OR(fieldValue.strFieldAPI == 'Portfolio_Company__c', fieldValue.strFieldAPI == 'Investment_Opportunity__c'), true, false)}">
                                                        <span id="spanId" style="display:none;color:red;"><b>Please search again</b></span>
                                                    </apex:outputPanel>
                                                </td>
                                            </tr>
                                        </apex:repeat>
                                    </apex:repeat>
                                </table>

                                <script>
                                    var inputArray = document.getElementById('divId').getElementsByTagName('input');
                                    for (var index = 0; index < inputArray.length; index++) {
                                        if (inputArray[index].type == 'checkbox') {
                                            inputArray[index].className = 'checkbox';
                                        } else if (inputArray[index].type == 'text') {
                                            inputArray[index].className = 'form-control';
                                            inputArray[index].style.width = '29%';
                                        }
                                    }

                                    var selectArray = document.getElementById('divId').getElementsByTagName('select');
                                    for (var index = 0; index < selectArray.length; index++) {

                                        selectArray[index].className = 'form-control';
                                        if (selectArray[index].multiple == true) {
                                            selectArray[index].style.width = '100%';
                                        } else {
                                            selectArray[index].style.width = '29%';
                                        }
                                    }
                                </script>
                            </div>
                            <apex:pageMessages id="showmsg"></apex:pageMessages>
                            <apex:outputPanel rendered="{!isRenderOtherFields}" id="workingGroupPanel">
                                <hr style="width: 100%; color: black; height: 1px; background-color:#f6f0ee;" />
                                <div style="padding-top:5px; padding-bottom:5px; padding-left:3%; background:#eeeeee; border-radius:5px">
                                    <a href="" style="text-decoration:none; color:black; cursor:pointer" onclick="document.getElementById('{!$Component.scrollDown}').focus(); return false;">
                                        <h2>Working Group Members</h2>
                                    </a>
                                </div>
                                <br/>
                                <div id="wgmdivId">
                                    <table class="table" id="wgmTable" width="100%" cellpadding="5px;" cellspacing="5px;">
                                        <thead>
                                            <tr>
                                                <th style="background-color:white; color:black;"></th>
                                                <apex:repeat value="{!lstContactColumnWrapper}" var="contactField">
                                                    <th style="background-color:white; color:black;">{!contactField.strFieldLabel}</th>
                                                </apex:repeat>
                                                <apex:repeat value="{!lstWGMColumnWrapper}" var="EWGMemberField">
                                                    <th style="background-color:white; color:black;">{!EWGMemberField.strFieldLabel}</th>
                                                </apex:repeat>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <apex:repeat value="{!lstGroupMemberWrapper}" var="groupmember">
                                                <tr>
                                                    <td>
                                                        <apex:inputCheckbox value="{!groupmember.isSelected}" onclick="enableFields(this)" />
                                                    </td>
                                                    <apex:repeat value="{!lstContactColumnWrapper}" var="contactField">
                                                        <td>
                                                            <apex:outputField value="{!groupmember.contact[contactField.strFieldAPI]}" />
                                                        </td>
                                                    </apex:repeat>
                                                    <apex:repeat value="{!lstWGMColumnWrapper}" var="EWGMemberField">
                                                        <td>
                                                            <apex:inputField value="{!groupmember.EWGMember[EWGMemberField.strFieldAPI]}" />
                                                        </td>
                                                    </apex:repeat>
                                                </tr>
                                            </apex:repeat>
                                        </tbody>
                                    </table>
                                </div>
                                <hr style="width: 100%; color: black; height: 1px; background-color:#f6f0ee;" />

                                <center style="padding-bottom:10px;">
                                    <!--<apex:commandButton id="scrollDown" value="Save" onclick="$('[id$=hiddenCompanyIds]').val($('#myAutocomplete').val());" action="{!createProject}" rerender="showmsg,custPopup" status="loading" oncomplete="showTable();closeWindow();"/>&nbsp;&nbsp;&nbsp;&nbsp;-->
                                    <apex:commandButton id="scrollDown" value="Save" onclick="callCreateProject(); return false;" />&nbsp;&nbsp;&nbsp;&nbsp;
                                    <apex:commandButton value="Cancel" onclick="cancelWindow();" />
                                </center>

                                <script>
                                    var wgmDivHeight = document.getElementById('wgmdivId').clientHeight;
                                    if (wgmDivHeight > 420)
                                        document.getElementById("wgmdivId").style.height = "420px";

                                    $(document).ready(function() {
                                        if (wgmDivHeight > 420)
                                            $('#wgmTable').freezeHeader({
                                                'height': '400px'
                                            });
                                    });

                                    function callCreateProject() {
                                        $('[id$=hiddenCompanyIds]').val($('#myAutocomplete').val());
                                        createProjectAF();
                                    }

                                    var table = document.getElementById('wgmdivId').getElementsByTagName('table');
                                    var rows = table[0].getElementsByTagName('tr');
                                    var inputWGMArray = document.getElementById('wgmdivId').getElementsByTagName('input');
                                    for (var index = 0; index < inputWGMArray.length; index++) {
                                        if (inputWGMArray[index].type == 'checkbox') {
                                            inputWGMArray[index].className = 'checkbox';
                                        } else if (inputWGMArray[index].type == 'text') {
                                            inputWGMArray[index].className = 'form-control';
                                            inputWGMArray[index].style.width = '70%';
                                            inputWGMArray[index].style.display = 'inline';
                                        }
                                    }

                                    var selectWGMArray = document.getElementById('wgmdivId').getElementsByTagName('select');
                                    for (var index = 0; index < selectWGMArray.length; index++) {
                                        selectWGMArray[index].className = 'form-control';
                                        if (rows[1].getElementsByTagName('td').length < 8)
                                            selectWGMArray[index].style.width = '50%';
                                        else
                                            selectWGMArray[index].style.width = '70%';
                                    }

                                    for (var i = 1; i < rows.length; i++) {
                                        var cells = rows[i].getElementsByTagName('td');
                                        var anchors = rows[i].getElementsByTagName('img');
                                        var selects = rows[i].getElementsByTagName('select');
                                        var textareas = rows[i].getElementsByTagName('textarea');
                                        if (cells[0].getElementsByTagName('input')[0].checked == false) {
                                            for (var cellIndex = 1; cellIndex < cells.length; cellIndex++) {
                                                var inputArray = cells[cellIndex].getElementsByTagName('input');

                                                if (inputArray.length > 0) {
                                                    inputArray[0].disabled = "disabled";
                                                    for (var j = 0; j < inputArray.length; j++) {
                                                        if (inputArray[j].type == 'text')
                                                            inputArray[j].disabled = "disabled";
                                                    }
                                                }
                                            }

                                            for (var cellIndex = 0; cellIndex < anchors.length; cellIndex++) {
                                                if (anchors.length > 0)
                                                    anchors[cellIndex].style.display = 'none';
                                            }

                                            for (var cellIndex = 0; cellIndex < selects.length; cellIndex++) {
                                                if (selects.length > 0)
                                                    selects[cellIndex].disabled = "disabled";
                                            }

                                            for (var cellIndex = 0; cellIndex < textareas.length; cellIndex++) {
                                                if (textareas.length > 0)
                                                    textareas[cellIndex].disabled = "disabled";
                                            }
                                        }
                                    }
                                </script>
                            </apex:outputPanel>
                            <apex:outputPanel id="dummy">
                                <apex:outputPanel >
                                    <script>
                                        function closeWindow() {
                                            if ({!!isValid}) {
                                                if ('{!strSelectedProjectCategory}' == 'Portfolio Company Specific' && '{!strCompaniesHaveCurrentProject}' != '') {
                                                    alert('You cannot create this project for {!strCompanyName} because a project of the same name already exists under this company. Please manage the existing project or create a new one with a different name.');
                                                    return false;
                                                } else if ('{!strSelectedProjectCategory}' == 'Cross Portfolio' && '{!strCompaniesHaveCurrentProject}' != '') {
                                                    alert('You cannot create this project for {!strCompaniesHaveCurrentProject} because a project of the same name already exists. Please remove {!strCompaniesHaveCurrentProject} from the list of portfolio companies for this cross portfolio project.');
                                                    return false;
                                                }
                                                return false;
                                                // callForCrossPortfolio();
                                            }

                                            if (navigator.appVersion.indexOf("MSIE 7") > 0 || navigator.appVersion.indexOf("MSIE 8") > 0 || navigator.appVersion.indexOf("MSIE 9") > 0) {
                                                window.location.href = '/apex/SL_TimeEntry2';
                                                window.location.reload(true);
                                            } else {
                                                self.close();
                                                window.opener.location.href = '/apex/SL_TimeEntry2';
                                                window.opener.location.reload(true);
                                            }
                                        }

                                        function callForCrossPortfolio() {
                                            if ('{!strSelectedProjectCategory}' == 'Cross Portfolio')
                                                alert('You cannot create this project for {!strCompaniesHaveCurrentProject} because a project of the same name already exists. Please remove {!strCompaniesHaveCurrentProject} from the list of portfolio companies for this cross portfolio project.');
                                            return false;
                                        }
                                    </script>

                                    <apex:actionFunction name="createProjectAF" action="{!createProject}" rerender="{!IF(!isExistsProjectName, 'dummy,showmsg', 'custPopupOuter,showmsg,dummy')}" status="loading" oncomplete="showTable();closeWindow();" />
                                    <apex:actionFunction name="renderOtherFields" action="{!populateFields}" rerender="custPopupOuter" status="loading" oncomplete="showTable();" />
                                    <apex:actionFunction name="populateContactAF" action="{!populateContact}" rerender="custPopupOuter" status="loading" oncomplete="showTable();">
                                        <apex:param name="companyName" value="" assignTo="{!strCompanyName}" />
                                        <apex:param name="companyId" value="" assignTo="{!strCompanyId}" />
                                    </apex:actionFunction>
                                    <apex:actionFunction name="checkDiligencetAF" action="{!checkDiligenceOnInvOpportunity}" rerender="custPopupOuter" status="loading" oncomplete="showTable();showAlert();">
                                        <apex:param name="invOppName" value="" assignTo="{!strInvestmentOppName}" />
                                        <apex:param name="invOppId" value="" assignTo="{!strInvestmentOppId}" />
                                    </apex:actionFunction>
                                </apex:outputPanel>
                            </apex:outputPanel>
                        </div>
                    </div>

                    <script>
                        var selectsArray = document.getElementById('divId').getElementsByTagName('select');
                        selectsArray[0].className = 'form-control';
                        selectsArray[0].style.width = '28.5%';

                        function showTable() {
                            if ({!isRenderOtherFields} && '{!strProjectCategory}' != '' && '{!strProjectCategory}' == 'Diligence') {
                                document.getElementById('specific').style.display = 'none';
                                document.getElementById('cross').style.display = 'none';
                                document.getElementById('diligence').style.display = '';
                            }
                            if ({!isRenderOtherFields} && '{!strProjectCategory}' != '' && '{!strProjectCategory}' == 'CrossPortfolio') {
                                document.getElementById('specific').style.display = 'none';
                                document.getElementById('diligence').style.display = 'none';
                                document.getElementById('cross').style.display = '';
                            }
                            if ({!isRenderOtherFields} && '{!strProjectCategory}' != '' && '{!strProjectCategory}' == 'PortfolioCompanySpecific') {
                                document.getElementById('specific').style.display = '';
                                document.getElementById('diligence').style.display = 'none';
                                document.getElementById('cross').style.display = 'none';
                            }
                        }

                        function showAlert() {
                            if ({!isDiligencePresent})
                                alert('This Investment Opportunity already has a Diligence project associated to it. There can only be one Diligence project per Investment Opportunity');
                        }

                        function enableFields(value) {
                            var rows = value.parentNode.parentNode;

                            var cells = rows.getElementsByTagName('td');
                            var anchors = rows.getElementsByTagName('img');
                            var selects = rows.getElementsByTagName('select');
                            var textareas = rows.getElementsByTagName('textarea');

                            for (var cellIndex = 1; cellIndex < cells.length; cellIndex++) {
                                var inputArray = cells[cellIndex].getElementsByTagName('input');

                                if (inputArray.length > 0) {
                                    for (var j = 0; j < inputArray.length; j++) {
                                        if (inputArray[j].type == 'text') {
                                            if (value.checked)
                                                inputArray[j].disabled = "";
                                            if (value.checked == false)
                                                inputArray[j].disabled = "disabled";
                                        }
                                    }

                                    if (value.checked)
                                        inputArray[0].disabled = '';
                                    if (value.checked == false)
                                        inputArray[0].disabled = 'disabled';
                                }

                            }

                            for (var cellIndex = 0; cellIndex < anchors.length; cellIndex++) {
                                var inputArray = anchors;
                                if (inputArray.length > 0 && value.checked)
                                    inputArray[cellIndex].style.display = '';
                                if (inputArray.length > 0 && value.checked == false)
                                    inputArray[cellIndex].style.display = 'none';
                            }

                            for (var cellIndex = 0; cellIndex < selects.length; cellIndex++) {
                                if (selects.length > 0 && value.checked)
                                    selects[cellIndex].disabled = "";
                                if (selects.length > 0 && value.checked == false)
                                    selects[cellIndex].disabled = "disabled";
                            }

                            for (var cellIndex = 0; cellIndex < textareas.length; cellIndex++) {
                                if (textareas.length > 0 && value.checked)
                                    textareas[cellIndex].disabled = "";
                                if (textareas.length > 0 && value.checked == false)
                                    textareas[cellIndex].disabled = "disabled";
                            }
                        }

                        function displayMsg() {
                            var inputArray = document.getElementById('divId').getElementsByTagName('input');
                            for (var index = 0; index < inputArray.length; index++) {
                                if (inputArray[index].type == 'hidden' && inputArray[index].value == '')
                                    document.getElementById('spanId').style.display = '';
                            }
                        }

                        function resetCompanyId() {
                            document.getElementById('spanId').style.display = 'none';
                            var inputArray = document.getElementById('divId').getElementsByTagName('input');
                            for (var index = 0; index < inputArray.length; index++) {
                                if (inputArray[index].type == 'hidden')
                                    inputArray[index].value = '';
                            }
                        }

                        function resetOpportunityId() {
                            document.getElementById('spanId').style.display = 'none';
                            var inputArray = document.getElementById('divId').getElementsByTagName('input');
                            for (var index = 0; index < inputArray.length; index++) {
                                if (inputArray[index].type == 'hidden')
                                    inputArray[index].value = '';
                            }
                        }

                        function checkValue(value) {
                            if (value == 'Diligence') {
                                if (navigator.appVersion.indexOf("MSIE 7") > 0 || navigator.appVersion.indexOf("MSIE 8") > 0 || navigator.appVersion.indexOf("MSIE 9") > 0) {
                                    window.location.href = '/apex/SL_TimeEntry2';
                                } else {
                                    self.close();
                                }
                            }
                        }

                        function cancelWindow() {
                            if (navigator.appVersion.indexOf("MSIE 7") > 0 || navigator.appVersion.indexOf("MSIE 8") > 0 || navigator.appVersion.indexOf("MSIE 9") > 0)
                                history.back();
                            else
                                self.close();
                        }
                    </script>
                </apex:outputPanel>
            </apex:outputPanel>

            <apex:actionstatus id="loading" startText="Requesting...">
                <apex:facet name="start">
                    <div id="salesforceSource_blurybackground" style="position:fixed; left:1px; top:1px; width:100%; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.7;filter:alpha(opacity=60)"></div>
                    <div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 100%; display: ''; ">
                        <div style="width: 144px;vertical-align: middle;" class="waitingHolder">
                            <table style="width: 100%; height: 100%">
                                <tr align="center" valign="top" style="width: 100%; height: 30%">
                                    <td valign="top"><img src="/img/loading.gif" /><span class="waitingDescription"><b>Loading...</b></span></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 100%; display:''; "></div>
                    <script>
                        document.getElementById('ManageMembersViewport_loading').height = window.innerHeight * (3 / 4);
                    </script>
                </apex:facet>
                <apex:facet name="stop"></apex:facet>
            </apex:actionstatus>
        </body>
    </apex:form>
</apex:page>