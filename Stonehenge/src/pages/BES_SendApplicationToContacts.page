<apex:page controller="BES_SendApplicationToContacts" tabstyle="Contact" sidebar="false">
<apex:SectionHeader title="Send Application" subTitle="{!propBuildingName} - {!propUnitNumber}"/>
 	<apex:form >
 	<apex:inputHidden id="hidRecIds" value="{!hidRecIds}"/>            
        <script> 
            var objHidRecId = document.getElementById('{!$Component.hidRecIds}');
            var intGlobalProperties = 0;
        </script>
        <apex:pageBlock title="Select Recipients" mode="edit" id="pbSearchProperties">
			<apex:PageBlockButtons >
				<apex:commandButton value="Send Application" action="{!SendApplicationsToRecipents}" rerender="opSearchProperties"/>
				
				<apex:commandButton value="Cancel" action="{!cancelAddProperty}"/>
				<apex:actionFunction name="cancelProperty" />
			</apex:PageBlockButtons>
        <table width="100%">
				<tr>
					<td>
						<apex:OutputPanel id="opSearchProperties"  >
							<apex:OutputPanel id="opErrorMessage" rendered="{!isError}" >
								<apex:outputlabel value="{!printErrorMessage}" style="color:red"/>
								<br/><br/><br/>
							</apex:OutputPanel>
						</apex:OutputPanel>
					</td> 
				</tr>
				<tr>
					<td width="100%">
 					   <script>
		                    var objChkboxArrpbProperties = new Array();
		                    var objtxtShowDateTimeArr = new Array();
   		                    var objcmbHourArr = new Array();
   		                    var objcmbMinArr = new Array();
   		                    var objcmbMeridiemArr = new Array();   		                       		                    
	                        var objRecIdspbProperties = '';
	                    </script>    			
						<apex:outputPanel id="opMainProperties">                   
		                    <apex:outputpanel id="opProperties" rendered="{!renderTable}">	                    
			                    <apex:pageBlockTable value="{!searchResult}" var="sr" id="pbTblProperty">			                    
			                        <apex:column headerValue="" id="chkAll" rendered="true"  > 
			                                <apex:facet name="header">
			                                    <apex:inputCheckbox id="chkgridSelect" onClick="javascript:checkAllpbReg(this, objChkboxArrpbProperties)"/>                                    
			                                </apex:facet>
			                                                           
			                                	<apex:inputCheckbox rendered="{!sr.CheckBoxVisible}"  id="chkRecord" value="{!sr.selected}" />
			                               
			                                <script>
			                                    objChkboxArrpbProperties.push('{!$Component.chkRecord}');
			                                    objRecIdspbProperties += "{!sr.recId}" + ",";                            
			                                </script>
			                        </apex:column> 
			                         <apex:column headerValue="Contact Name" value="{!sr.recName}"/>
			                         <apex:column headerValue="Role" value="{!sr.recRole}"/>
			                         <apex:column headerValue="Email" value="{!sr.RecEmail}"/>
			                    </apex:pageBlockTable>
			                    <font size="1pt">Page #:&nbsp;<apex:outputLabel value="{!PageNumber}"/>&nbsp;of&nbsp;<apex:outputLabel value="{!TotalPageNumber}"/>&nbsp;&nbsp;&nbsp;
			                    <apex:outputlink onclick="javascript: return fillPrevCheckedArraypbReg('prev');" disabled="{!PreviousButtonEnabled}" >                      
			                        Previous
			                    </apex:outputlink>
			                    <apex:actionfunction name="previousCallForReg" action="{!PreviousBtnClick}" oncomplete="javascript:setCheckedBoxespbReg()" rerender="opMainProperties"/>
			                    &nbsp;|&nbsp;
			                    <apex:outputlink onclick="javascript:return fillPrevCheckedArraypbReg('next');" disabled="{!NextButtonDisabled}" >                  
			                        Next
			                    </apex:outputlink>                   
			                    <apex:actionfunction name="nextCallForReg" action="{!NextBtnClick}" oncomplete="javascript:setCheckedBoxespbReg()" rerender="opMainProperties"/>
			                    </font>
			            	</apex:outputpanel>
		                    <apex:OutputPanel id="opNoRecords" rendered="{!renderNoRecords}">
		                        <apex:outputLabel value="No records to display."/>
		                    </apex:OutputPanel>
                    	</apex:outputPanel>
				    </td>
				</tr>
			</table>	
			<script>
				
		        function checkAllpbReg(inputField, objArr)
		        {           
		            var ArrSize = objArr.length;            
		            if (ArrSize > 0)
		            {
		                for(var j = 0; j < ArrSize; j++)
		                {
		                    if(document.getElementById(objArr[j]) != null)
		                    {                       
		                        if(inputField.checked)
		                        {
		                            document.getElementById(objArr[j]).checked = true;                          
		                        }
		                        else
		                        {
		                            document.getElementById(objArr[j]).checked = false;
		                        }
		                    }
		                }
		                //enableDatePickersForAll(objArr);
		            }       
		        }  
		        
		        var mainPrevCheckedArraypbReg = new Array();
		        var mainTxtShowDateTimeArray = new Array();
		        var mainCmbHourArray = new Array();
   		        var mainCmbMinArray = new Array();
   		        var mainCmbMeridiemArray = new Array();
		        var globalRecIdspbReg = '';                 
		        
		        function fillPrevCheckedArraypbReg(btnClicked)
		        {                               
		            var prevCheckedArray = new Array();
		            var prevTxtShowDateTimeArray = new Array();
			        var prevCmbHourArray = new Array();
   			        var prevCmbMinArray = new Array();
   			        var prevCmbMeridiemArray = new Array();
   			        
		            var recIdarr = objRecIdspbProperties.split(",");
		            
		            if(objChkboxArrpbProperties.length > 0)
		            {
		                for(var j = 0; j < objChkboxArrpbProperties.length; j++)
		                {
		                     var isExist = false;
		                     if(document.getElementById(objChkboxArrpbProperties[j]) != null && document.getElementById(objChkboxArrpbProperties[j]).checked == true)
		                     {    
		                        for(var k = 0; k < prevCheckedArray.length; k++)
		                        {                           
		                            if(objChkboxArrpbProperties[j] == prevCheckedArray[k])
		                            {
		                                isExist = true;
		                            }                            
		                        }
		                        if(!isExist)
		                        {                           
		                            prevCheckedArray.push(objChkboxArrpbProperties[j]);
		                            prevTxtShowDateTimeArray.push(objtxtShowDateTimeArr[j] + '~' + document.getElementById(objtxtShowDateTimeArr[j]).value);
		                            prevCmbHourArray.push(objcmbHourArr[j] + '~' + document.getElementById(objcmbHourArr[j]).value);
		                            prevCmbMinArray.push(objcmbMinArr[j] + '~' + document.getElementById(objcmbMinArr[j]).value);
		                            prevCmbMeridiemArray.push(objcmbMeridiemArr[j] + '~' + document.getElementById(objcmbMeridiemArr[j]).value);		                            		                            		                            
		                            if(globalRecIdspbReg.indexOf(recIdarr[j]) == -1)
		                            {
		                                globalRecIdspbReg += recIdarr[j] + ",";
		                            }
		                        }
		                     }
		                     else
		                     {                      
		                        var startIndex = globalRecIdspbReg.indexOf(recIdarr[j]); 
		                        if(startIndex >= 0)
		                        {
		                            globalRecIdspbReg = globalRecIdspbReg.replace(recIdarr[j],"");
		                            globalRecIdspbReg = globalRecIdspbReg.replace(",,",",");            
		                            if(globalRecIdspbReg.indexOf(',') == 0)
		                            {                           
		                                globalRecIdspbReg = globalRecIdspbReg.replace(",",""); 
		                            }
		                        }           
		                     }
		                }
		            }            
		            mainPrevCheckedArraypbReg[intGlobalProperties]= new Array();        
		            mainPrevCheckedArraypbReg[intGlobalProperties]= prevCheckedArray ;  
		            mainTxtShowDateTimeArray[intGlobalProperties] = new Array();
		            mainTxtShowDateTimeArray[intGlobalProperties]= prevTxtShowDateTimeArray;
		            mainCmbHourArray[intGlobalProperties] = new Array();
		            mainCmbHourArray[intGlobalProperties]= prevCmbHourArray;
		            mainCmbMinArray[intGlobalProperties] = new Array();
		            mainCmbMinArray[intGlobalProperties]= prevCmbMinArray;
		            mainCmbMeridiemArray[intGlobalProperties] = new Array();
		            mainCmbMeridiemArray[intGlobalProperties]= prevCmbMeridiemArray;
		            
		            objChkboxArrpbProperties = new Array();
		            objtxtShowDateTimeArr = new Array();
		            objcmbHourArr = new Array();
		            objcmbMinArr = new Array();
		            objcmbMeridiemArr = new Array();
		            
		            objHidRecId.value = globalRecIdspbReg;
		            objRecIdspbProperties = '';            
		            if(btnClicked == 'prev')
		            {   
		                intGlobalProperties--;
		                previousCallForReg();
		                return false;
		            }
		            else
		            {
		                intGlobalProperties++;
		                nextCallForReg();
		                return false;
		            }                       
		        }       
		        function setCheckedBoxespbReg()
		        {                           
		            var count=0;
		            while(mainPrevCheckedArraypbReg.length > 0 && count <= mainPrevCheckedArraypbReg.length && count > intGlobalProperties)
		            {
		                for(var k = 0; k < mainPrevCheckedArraypbReg[count].length; k++)
		                {
		                    document.getElementById(mainPrevCheckedArraypbReg[count][k]).checked = false;                                               
		                }                
		                count++;
		            }           
		            if(mainPrevCheckedArraypbReg.length > 0 &&  mainPrevCheckedArraypbReg[intGlobalProperties] != null && mainPrevCheckedArraypbReg[intGlobalProperties].length > 0)
		            {       
		                for(var k = 0; k < mainPrevCheckedArraypbReg[intGlobalProperties].length; k++)
		                {
		                    document.getElementById(mainPrevCheckedArraypbReg[intGlobalProperties][k]).checked = true;
		                    enableDatePickers(mainPrevCheckedArraypbReg[intGlobalProperties][k]);
			                var txtShowDateTime = mainTxtShowDateTimeArray[intGlobalProperties][k].split("~");
			                var cmbHour = mainCmbHourArray[intGlobalProperties][k].split("~");
			                var cmbMin = mainCmbMinArray[intGlobalProperties][k].split("~");
			                var cmbMeridiem = mainCmbMeridiemArray[intGlobalProperties][k].split("~");			                
			                document.getElementById(txtShowDateTime[0]).value = txtShowDateTime[1];
			                document.getElementById(cmbHour[0]).value = cmbHour[1];
			                document.getElementById(cmbMin[0]).value = cmbMin[1];
			                document.getElementById(cmbMeridiem[0]).value = cmbMeridiem[1];			                			                
		                }
		            }                       
		        }       
		        function enableDatePickers(objChkBox)
	            {            	
	            	if(document.getElementById(objChkBox).checked)
	            	{
	                	var chkId = objChkBox.split(":");
		            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':txtShowDateTime').disabled = false;
		            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbHour').disabled = false;
		            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMin').disabled = false;
		            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMeridiem').disabled = false;
		        	}
		        	else
		        	{
	                	var chkId = objChkBox.split(":");
		            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':txtShowDateTime').disabled = true;
		               	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbHour').disabled = true;
          				document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMin').disabled = true;		            	          	          
			          	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMeridiem').disabled = true;
		        	}
	            }
	            /*function enableDatePickersForAll(objAllChkBox)
	            {            	
					for(var i=0; i < objAllChkBox.length;i++)
					{
		            	if(document.getElementById(objAllChkBox[i]).checked)
		            	{
		                	var chkId = objAllChkBox[i].split(":");
			            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':txtShowDateTime').disabled = false;
			            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbHour').disabled = false;
			            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMin').disabled = false;
			            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMeridiem').disabled = false;
			        	}
			        	else
			        	{
		                	var chkId = objAllChkBox[i].split(":");
			            	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':txtShowDateTime').disabled = true;
			               	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbHour').disabled = true;
	          				document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMin').disabled = true;		            	          	          
				          	document.getElementById(chkId[0]+ ':' + chkId[1]+ ':' + chkId[2]+ ':' + chkId[3]+ ':' + chkId[4] + ':cmbMeridiem').disabled = true;
			        	}
			        }
	            }*/	            
		    </script>  
		</apex:pageBlock>
 	</apex:form>
 							    
</apex:page>