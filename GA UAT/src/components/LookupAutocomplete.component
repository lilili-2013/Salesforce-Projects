<!--
  Dynamic autocomplete functionality
  Originally from http://www.verticalcoder.com/2011/02/19/salesforce-javascript-remoting-jquery-and-autocomplete
  with some improvements.

  @author Daniel Hoechst - original
  @author ForceLogic - Company Referrals - Referred From
  @author darkwater - Company Referrals - UX Enhancements
  @author jfavors (Appirio) - polish
-->
<apex:component controller="LookupAutocompleteController">

  <!-- jQuery Files -->
  <apex:includescript value="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"/>
  <apex:includescript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.12/jquery-ui.min.js"/>
  <apex:stylesheet value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/flick/jquery-ui.min.css"/>

  <!-- Attributes used by component -->
  <apex:attribute name="objectName"
                  description="The object name you want to look for."
                  type="String"
                  required="true"/>
  <apex:attribute name="additionalFields"
                  description="Any additional fields you'd like to search and include in the display."
                  type="String"
                  required="false"/>
  <apex:attribute name="inputFieldId"
                  description="The ID for the Autocomplete List Textbox."
                  type="String"
                  required="true"/>
  <style>
    .ui-autocomplete-loading {
      background: white url('/img/loading.gif') right center no-repeat;
    }
  </style>
  <script type='text/javascript'>
    var j$ = jQuery.noConflict();

    j$(document).ready(function() {

      var sObjects;
      var queryTerm;

      // TODO: Check if we should enable for any other object fields.
      //
      // User object has its own picklist that we don't need
      if ('{!objectName}'.toLowerCase() === 'user') {
        j$(_esc('{!inputFieldId}_mlktp')).hide();
      }

      // Setup jQuery UI autocomplete (http://api.jqueryui.com/autocomplete/)
      j$(_esc('{!inputFieldId}')).autocomplete({
        minLength: 2,

        // Get source data for autocomplete
        source: function(request, response) {
          // queryTerm = request.term;

          // LookupAutocompleteController.findSObjects(
          //   '{!objectName}',
          //   request.term,
          //   '{!additionalFields}',
          //   function(result, event) {
          //     if (event.type == 'exception') {
          //       alert(event.message);
          //     } else {
          //       sObjects = result;
          //       response(sObjects);
          //     }
          //   });

          queryTerm = request.term || '';

          Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.LookupAutocompleteController.findSObjects}',
            '{!objectName}',
            request.term,
            '{!additionalFields}',
            function(result, event) {
              if (event.status) {
                sObjects = result;
                response(sObjects);
              } else {
                console.log(event);
                alert(event.message);
              }
            },
            { escape: true }
          );
        },

        // Actions to do when focusing on an element
        focus: function( event, ui ) {
          j$(_esc('{!inputFieldId}')).val( ui.item.Name );
          return false;
        },

        // Actions to do when selecting an element
        select: function( event, ui ) {
          j$(_esc('{!inputFieldId}')).val( ui.item.Name );
          j$(_esc('{!inputFieldId}_lkid')).val( ui.item.Id );
          j$(_esc('{!inputFieldId}_lkold')).val( ui.item.Name );
          return false;
        },
      })
      .data( 'autocomplete' )._renderItem = function( ul, item ) {
        var entry = '<a>' + item.Name;
        var additionalFields = '';

        j$.each('{!additionalFields}'.split(',') , function(key, value) {
          var actualVal = '';

          // If field contains a reference (e.g. Account.Name), handle JS
          // notation
          if (value.split('.').length > 1) {
            var objectAndField = value.split('.');
            if (item[objectAndField[0]] &&
                item[objectAndField[0]][objectAndField[1]]) {
              actualVal = item[objectAndField[0]][objectAndField[1]] + ', ';
            }
          } else if (item[value]) {
            actualVal = item[value] + ', ';
          }

          additionalFields += actualVal;
        });

        if (additionalFields.length > 0) {
          entry += ' (' +
            additionalFields.substring(0, additionalFields.length - 2) + ')';
        }

        entry += '</a>';

        var re = new RegExp('(' + queryTerm + ')', "gi");

        entry = entry.replace(re, '<b>\$1</b>');

        return j$( '<li></li>' )
          .data( 'item.autocomplete', item )
          .append( entry )
          .appendTo( ul );
      };
    });

    /* Escape SFDC Ids */
    function _esc(myid) {
      return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
    }

  </script>
</apex:component>