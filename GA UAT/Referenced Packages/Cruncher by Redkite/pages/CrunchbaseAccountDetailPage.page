<!--
*   The CrunchbaseAccountDetailPage utilizes Id, Name and Permalink values from CrunchbaseAccountDetailCtl class to make an API 
*   call to Crunchbase. The response is displayed on the Account detail page. When the permalink information exists a Show API 
*   call is made to Crunchbase using javascript. When the permalink information is absent, CrunchbaseAccountDetailPage fetches 
*   and displays all search results relevant to the Account Name and allows the user to select an appropriate match.	   
*
*   Revision History:
*
*   Version		 Author		  Date			Description
*   1.0			 J.Shah		  Sep/05/2011	 Initial Draft
*
-->

<apex:page id="pgCBDetail" sidebar="false" showheader="false" standardController="Account" extensions="RKCB.CrunchbaseAccountDetailCtl" 
	tabStyle="Account" action="{!init}">
	<apex:stylesheet value="{!URLFOR($Resource.RKCB__CrunchbaseVerticalTabs,'css/verticaltabs.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.RKCB__CrunchbaseJQueryUI ,'css/cupertino/jquery-ui-1.8.12.custom.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.RKCB__CrunchbaseResources,'css/Crunchbase.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.RKCB__jqueryLoadmask, 'jquery.loadmask.css')}" />
	
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseResources,'js/BaseTargetBlank.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseJQueryUI ,'js/jquery-1.5.1.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseJQueryUI ,'js/jquery-ui-1.8.12.custom.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseVerticalTabs ,'js/verticaltabs.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.RKCB__jqueryLoadmask, 'jquery.loadmask.min.js')}" />
	
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseResources,'js/CommonFunctions.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseResources,'js/CommonVariables.js')}" />
	<!-- Force the load of Salesforce's javaScript scaleImage function -->
	<apex:includeScript value="{!URLFOR($Resource.RKCB__CrunchbaseResources,'js/ScaleImage.js')}"/>   

	<!-- a Refreshable section to force the page to re-load -->
	<apex:outputPanel id="pageConfig">
	<script type="text/javascript">	 	
		// PAGE GLOBAL VARIABLES		
		var AccountName = "{!JSINHTMLENCODE(strAccountName)}";
		var remotingController;
		if (typeof RKCB != 'undefined') remotingController=RKCB.CrunchbaseAccountDetailCtl;
		else remotingController=CrunchbaseAccountDetailCtl;
		
		j$=jQuery.noConflict();
		j$(document).ready(function(){
			fetchJSONResponse(AccountName,"{!Account.Crunchbase_Permalink__c}");
		});
	</script>
	</apex:outputPanel>

	<script type="text/javascript">
		// ---------------------------------------------------------------------------------------------
		// Overall Flow Functions ----------------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------
	
		// VF Page GLOBAL VARIABLES
		var SITESEARCH_URL = "/apex/CrunchbaseAccountSearchPage?Id={!Account.Id}";  // this variable must stay on the VF page, since it has a merge field.

		/*	Json Data - this is a working variable put in the global scope for convenience */
		var cbJsonData = "{ ";
		
		/* Fetches the JSON response from Crunchbase it the permalink exists else searches for the 
			relevant results on the basis of account name */
		function fetchJSONResponse(pAccountName, pPermalink){
			var cbPermalink = pPermalink;
			
			if(cbPermalink == null || cbPermalink == ""){
				cbPermalink = searchCrunchbase(pAccountName, 1);
			}
			else{
				/*  Parse and display the reponse from Crunchbase   */
				parseCrunchbaseResponse(cbPermalink);
			}
		}
		
		/* Initializes the vertical tab control once all the components have rendered */
		function postLoadInit(){
			closeWait();

			/*	Initialize chatter dialog	*/
			initChatterDialog();
			initSaveToSfDialog();
			
			j$("#verticalTabbedContent").show();
			j$("#verticalTabbedContent").verticaltabs({speed: 500, slideShow: false, activeIndex: 0});
			j$( ".vert-tab" ).show("slide", {direction: "right"}, "slow");
		} 

		// ---------------------------------------------------------------------------------------------
		// Search Functions ----------------------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------

		/* Make Search API calls to Crunchbase to find matches 
		corresponding with the Name of the Account */
		function searchCrunchbase(pAccountName, pSearchPageNum){
			/* The callback appended at the end of the API call is mandatory 
			to retreive the JSON response from Crunchbase. */
			var searchUrl = CB_PERMALINKURLBASE + "/search.js?query=" + encodeURIComponent(pAccountName) + "&page=" + pSearchPageNum + 
				"&api_key={!JSENCODE($Setup.RKCB__Cruncher_Settings__c.RKCB__CB_Api_Key__c)}"+
				"&callback=?";

			getCrunchbaseJSON(
				searchUrl,
				function(cbResponse){ 
				
					/* Check if the crunchbase search response contains results */
					if(cbResponse.results != null && cbResponse.results != ""){

						/* Directly update the permalink value on Account if a single search result 
						   is returned in the Crunchbase response. Handle case if there is single 
						   record in last page and Single record in first page with namespace People	*/
						if(cbResponse.results.length == 1 && pSearchPageNum == 1 
							&& (cbResponse.results[0].namespace != null &&
								cbResponse.results[0].namespace.toLowerCase() != SEARCHRESPONSEVALUE_PERSON.toLowerCase() ||
								cbResponse.results[0].namespace.toLowerCase() != SEARCHRESPONSEVALUE_PRODUCT.toLowerCase())
							){
							updatePermalink(cbResponse.results[0].namespace + "#" + cbResponse.results[0].permalink);
						}
						else{ 
							/*	Display search results	*/
							displaySearchResults(cbResponse);
						}
					} 
					else if(pSearchPageNum != 1){
						// in this case, we've paged through at least the first page, and now 
						//	we're getting a null response
						 
						/*	Special case : No result found in API Search in intermediate pages	*/
						displaySearchResults(cbResponse);
					}
					else if(pSearchPageNum == 1){
						// in this case, we've recieved a null result and we're on the first
						//	page of results.  
						
						/* No search result found, redirect to Site search page	*/
						window.location = SITESEARCH_URL;
					}
				}
			);//getJSON 
		} 
		
		function showSearchTermChangeControl(){
			j$('#search-control').children().fadeOut().delay(400).last().fadeIn();
		}
		
		/*	Display search result and paging links	*/
		function displaySearchResults(cbResponse){
			/* Scroll div displaying the Search Results on top of the page */
			j$("#valueCBSearchResults").scrollTop(0); 
			
			/* Stores the current search page number and the total number of search results
			returned by Crunchbase */
			var currentPageNo = cbResponse.page;								/* Number of the current crunchbase Search Result page */
			var totalSearchPagesCnt = calcSearchPageCnt(cbResponse.total);	  /* Total number of search pages for the query */
			var noPrevNextPages = 3;											/*  Number of records to be shown either side of the current record */
			
			var cbSearchList = ""; 
			var cbPagingLinks = "";
			var cbSiteSearchBtn = "";
			
			if(cbResponse.results != null && cbResponse.results != ""){
				/*  get Search results html from parseCrunchbaseSearchResults   */
				cbSearchList = parseCrunchbaseSearchResults(cbResponse);
				/*	Make the partial url's as Absolute	*/
				cbSearchList = completeRelativeUrl(cbSearchList);
			}
			else{
				cbSearchList = SYSMSG_BEGIN+"{!$Label.RKCB_Search_Error_PageNull}"+SYSMSG_END;
			}
			
			/*	Load Search result content to valueSearchResults div	*/
			j$("#valueSearchResults").html(cbSearchList);
			
			/*  Generate Paging Links   */
			if(totalSearchPagesCnt > 1){ 
				cbPagingLinks = generateSearchPageLinks(totalSearchPagesCnt, currentPageNo, noPrevNextPages,
					"{!$Label.RKCB_Search_Pager_PrevLink}", "{!$Label.RKCB_Search_Pager_NextLink}", "searchCrunchbase");
			}
			else{
				cbPagingLinks += SEARCH_PAGER_BEGIN + SEARCH_PAGER_END;
			}
			/*  Generate Site search button   */
			cbSiteSearchBtn = SITE_SEARCH_LINK_BEGIN + 
								generateHyperlinkHtml(SITESEARCH_URL, "{!$Label.RKCB_Search_SiteSearch}", "_self", "") +
								SITE_SEARCH_LINK_END; 
			
			/*	Load the HTMl related to Paging and Button to div with Id valuePagingLink	*/
			j$("#valuePagingLink").html(SEARCH_PAGER_SPACING + cbPagingLinks + cbSiteSearchBtn);
			
			/*	Stop Loading Message*/
			closeWait();
			
			/*	Display Search Results	*/
			j$("#valueCBSearchResults").show();
		}
		
		/*  Return the search results to searchCrunchbase function  */
		function parseCrunchbaseSearchResults(cbResponse){
			var cbSearchList = SEARCH_RESULTAREA_BEGIN;
	
			/* Iterate over the search results */
			for(cnt = 0; cnt < cbResponse.results.length; cnt++){
					
				/* Creating the UI part Dev with class list item.*/
				cbSearchList += SEARCH_RESULT_BEGIN + SEARCH_RESULT_IMG_BEGIN;
					
				/* Append the Logo in search results if available			 */
				if(cbResponse.results[cnt].image != null){
					if(cbResponse.results[cnt].image.available_sizes.length > 0){
						// there is an assumption here that the api makes all sizes available through the api.
						cbSearchList += generateImageHtml(CB_URLBASE + "/" + cbResponse.results[cnt].image.available_sizes[1][1]);
					}
				}
				else{
					cbSearchList += generateImageHtml("{!URLFOR($Resource.CrunchbaseResources,'images/NoLogo_250x70.png')}");
				}
				cbSearchList += SEARCH_RESULT_IMG_END + SEARCH_RESULT_CONTENT_BEGIN;
					
				/*  Add button to search result - do this for only "companies" */					
				if( cbResponse.results[cnt].namespace != null &&
					cbResponse.results[cnt].namespace.toLowerCase().indexOf(SEARCHRESPONSEVALUE_PERSON.toLowerCase()) == "-1" &&
					cbResponse.results[cnt].namespace.toLowerCase().indexOf(SEARCHRESPONSEVALUE_PRODUCT.toLowerCase()) == "-1"){
					/* Append the parsed namespace and permalink values to the button Id which are used
					to construct a dynamic permanlink url which is then updated on the Account record */
					
					// using the '#' character to break up the data could at worst lose an anchor position. 
					cbSearchList += SEARCH_RESULT_BUTTON_BEGIN +
									generateSearchSelectButton("{!$Label.RKCB_Search_Select}", cbResponse.results[cnt].namespace + 
													   "#" + cbResponse.results[cnt].permalink) +
									SEARCH_RESULT_BUTTON_END;
				}

				/* Append the name to the search results.
				   Handle the scenario when Person first names and 
				   last names are returned in the search results */
				if(cbResponse.results[cnt].first_name != null || cbResponse.results[cnt].last_name != null){
					cbSearchList += SEARCH_RESULT_NAME_BEGIN + 
									generateHyperlinkHtml(cbResponse.results[cnt].crunchbase_url, 
									   					  cbResponse.results[cnt].first_name + " " + 
									   					  cbResponse.results[cnt].last_name, "_blank", "") +
						  			SEARCH_RESULT_NAME_END;
							
				}
				else if(cbResponse.results[cnt].name != null){ 
					cbSearchList += SEARCH_RESULT_NAME_BEGIN +
									generateHyperlinkHtml(cbResponse.results[cnt].crunchbase_url, 
														  cbResponse.results[cnt].name, "_blank", "") +
									SEARCH_RESULT_NAME_END;
				}
					
				/* Append the namespace (i.e. type, like company, person, financial institution to the search results */
				cbSearchList += SEARCH_RESULT_TYPE_BEGIN + 
								String.toTitleCase(cbResponse.results[cnt].namespace) + 
								SEARCH_RESULT_TYPE_END;
				
				/* Append the overview if it exists in the Crunchbase response */
				if(cbResponse.results[cnt].overview != null){
					var overview = cbResponse.results[cnt].overview;
					if (overview.length >= 400){ // limit the response 
						overview = overview.substr(0,396)+"...";	
					}
					cbSearchList += overview; 
				} 
				
				cbSearchList += SEARCH_RESULT_CONTENT_END + SEARCH_RESULT_END;
			}/*for*/
			
			cbSearchList += SEARCH_RESULTAREA_END;
			return cbSearchList;
		}
		
		/* Calculates the number of search pages from the total search results returned by Crunchbase. 
		   Each search page displays 10 search results. */
		function calcSearchPageCnt(pTotalCBSearchResultCnt){
			return Math.ceil(pTotalCBSearchResultCnt/SEARCH_PAGE_SIZE);
		}
		
		// ---------------------------------------------------------------------------------------------
		// Parse Permalink Functions -------------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------
							
		/* Make a Show API call to Crunchbase and parse the received JSON response */ 
		function parseCrunchbaseResponse(pPermalink){
			/*	Display Loading Message	*/
			var crunchbaseUrl = pPermalink;
			/* The callback appended at the end of the Show API call is 
			mandatory to retreive the JSON response from Crunchbase. */
			crunchbaseUrl = crunchbaseUrl.trim() + "?"+
				"api_key={!JSENCODE($Setup.RKCB__Cruncher_Settings__c.RKCB__CB_Api_Key__c)}&"+
				"callback=?";

			getCrunchbaseJSON(crunchbaseUrl,function(cbResponse){
				setHeaderData(cbResponse);
				
				/* Fetch the Office Details if they exist on Crunchbase*/
				setOfficeData(cbResponse.offices);

				/* Fetch the People details that exist on Crunchbase */
				setPeopleData(cbResponse.relationships);
				
				/* Fetch the Product details that exist on Crunchbase */
				setProductData(cbResponse.products);
				
				/* Fetch the Milestone details from Crunchbase */
				setMilestoneData(cbResponse.milestones);
				
				/* Fetch the Investment details from Crunchbase */
				setInvestmentData(cbResponse.investments);
				
				/* Fetch the acquisitions details from Crunchbase */
				setAcquisitionsData(cbResponse.acquisitions);
				
				 /* Fetch the Funding Round details from Crunchbase */
				setFundingData(cbResponse.funding_rounds);
				
				/* Fetch the Competition Details if they exist on Crunchbase*/
				setCompetitionData(cbResponse.competitions); 
				
				postLoadInit();
			});//getJSON
		}
		
		//Generate Header information if permalink exists 
		function setHeaderData(cbResponse){
			//Fetch the Url from Crunchbase to display the logo, if it exists
			var logo ="";
			
			if(cbResponse.image != null){
				if(cbResponse.image.available_sizes.length > 0){
					logo = CB_URLBASE + "/" + cbResponse.image.available_sizes[1][1];
					
					var jsonLogo = CB_URLBASE + "/" + cbResponse.image.available_sizes[0][1];
					cbJsonData += generateJsonString("Company.Logo", jsonLogo);
				}
			}
			else{
				logo = "{!URLFOR($Resource.CrunchbaseResources,'images/NoLogo_250x70.png')}";
			}
			setHeaderDataItem("Logo", "", generateImageHtml(logo));
			
			cbJsonData += generateJsonString("Company.Category", cbResponse.category_code);
			setHeaderDataItem("Category", "{!$Label.RKCB_Header_Category}", cbResponse.category_code);
			
			cbJsonData += generateJsonString("Company.Website", cbResponse.homepage_url);
			setHeaderDataItem("Website", 
						  "{!$Label.RKCB_Header_Website}", 
						  generateHyperlinkHtml(cbResponse.homepage_url, 
									  			cbResponse.homepage_url, 
									  			"_blank", ""));
			
			var foundedDate = "";
			//Fetch the Founded Date details if it exists on Crunchbase
			if(cbResponse.founded_year != null || cbResponse.founded_month != null || cbResponse.founded_day != null){
				foundedDate = (cbResponse.founded_month != null) ? getMonthName(cbResponse.founded_month)+" " : "";
				foundedDate += (cbResponse.founded_day != null) ? cbResponse.founded_day+" " : "";
				foundedDate += (cbResponse.founded_year != null) ? cbResponse.founded_year : "";
				foundedDate = foundedDate.trim();
			}
			
			cbJsonData += generateJsonString("Company.Founded", foundedDate);
			setHeaderDataItem("Founded", "{!$Label.RKCB_Header_Founded}", foundedDate);
			
			cbJsonData += generateJsonString("Company.Blog", cbResponse.blog_url);
			setHeaderDataItem("Blog", 
						  "{!$Label.RKCB_Header_Blog}", 
						  generateHyperlinkHtml(cbResponse.blog_url, 
						  						cbResponse.blog_url, 
						  						"_blank", ""));
			
			cbJsonData += generateJsonString("Company.Employees", cbResponse.number_of_employees);
			setHeaderDataItem("EmployeeCount", "{!$Label.RKCB_Header_Employees}", cbResponse.number_of_employees);
			
		   	cbJsonData += generateJsonString("Company.Email", cbResponse.email_address);
			setHeaderDataItem("Email", "{!$Label.RKCB_Header_Email}", cbResponse.email_address);
			
			cbJsonData += generateJsonString("Company.Description", cbResponse.description);
			setHeaderDataItem("Description", "{!$Label.RKCB_Header_Description}", cbResponse.description);
			
			cbJsonData += generateJsonString("Company.Phone", cbResponse.phone_number);
			setHeaderDataItem("Phone", "{!$Label.RKCB_Header_Phone}", cbResponse.phone_number);
			
			// get Twitter url in an sfdc friendly form
			var twitterURL = "";
			if (cbResponse.twitter_username!=null && cbResponse.twitter_username!="") twitterURL = TWITTER_URLBASE+ cbResponse.twitter_username;  
			
			cbJsonData += generateJsonString("Company.Twitter", twitterURL);
			setHeaderDataItem("Twitter", "{!$Label.RKCB_Header_Twitter}", generateHyperlinkHtml(twitterURL, cbResponse.twitter_username, "_blank", ""));
			
			// get Ticker in a SFDC friend form.
			var ipoSymbol = (cbResponse.ipo != null && cbResponse.ipo != "") ? cbResponse.ipo.stock_symbol : "";
			// symbol is sometimes of the form (exchange:symbol).  This doesn't work well with sfdc
			var jsonTicker = ipoSymbol;
			var TickerColonIndex = ipoSymbol.indexOf(':');
			if (TickerColonIndex>=0){
				jsonTicker = ipoSymbol.substring(TickerColonIndex+1);
			}
			
			cbJsonData += generateJsonString("Company.Ticker", jsonTicker);
			setHeaderDataItem("IPO", "{!$Label.RKCB_Header_Ticker}", ipoSymbol);
			
			/* Fetch the Company Overview if it exists on Crunchbase */
		   	/*	Make the partial url's as Absolute	*/
			var overview = (cbResponse.overview != null) ? completeRelativeUrl(cbResponse.overview) : null;
			setOverviewData(overview);
			
			//Display the View On Crunchbase and Save to Salesforce buttons	on the header
			
			setHeaderDataItem("HeadViewOnCB", "", 
						  generateHyperlinkHtml(cbResponse.crunchbase_url, 
						  						"{!$Label.RKCB_Header_Button_View}", 
						  						"_blank", ""));
						  						
			/*	Remove last comma and append closing brace to make the json a valid one	*/
			cbJsonData = cbJsonData.slice(0, -1) + "}";
			
			setHeaderDataItem("HeadSave", "", 
						  generateHyperlinkHtml("", 
						  						"{!$Label.RKCB_Header_Button_Save}", 
						  						"_self", 
						  						"getMapToSf('"+encodedJsonString(cbJsonData)+"');"));
			
			// UI Cleanup ------------------
			// center those header buttons
			var leftVal = j$('.sideheader-cell').width() - 236; //j$('#sideheader-buttons').width();
			if (leftVal <= 0) leftVal = 0;
			leftVal = leftVal / 2;
			j$('#sideheader-buttons-area').css('left',leftVal);
			
			// check if any data in header - if not, hide section
			var headerDataArea = j$(".headerData-area");
			var headerDataArea_JustText = headerDataArea.children().text();
			if (headerDataArea_JustText.trim()=="") headerDataArea.css('visibility','hidden');
		}
		
		/*	Create a JSON object with the Crunchbase header section data	*/
		function generateJsonString(pKey, pValue){
			if(pValue != null && pValue != "")
			{
				if(typeof(pValue) == "string") 
					pValue = '"' + pValue + '"';
				return "\"" + pKey + "\" : " + pValue + ",";
			}
			return "";
		}
		
		/*	Convert json String to a url encoded string as we are passing it through param	*/
		function encodedJsonString(pJsonString){
			var outString = encodeURIComponent(pJsonString);
			outString = outString.replace(/\'/g, "\\'");
			outString = outString.replace(/\"/g, '\\"');
			return outString;
		}
		
		//Sets the content for the Overview Tab
		function setOverviewData(cbResponse_overview){
			appendHtmlOnPage("Overview", "{!$Label.RKCB_Tab_Overview}", cbResponse_overview );
			if(cbResponse_overview != null)
				cbJsonData += generateJsonString("Company.Overview", encodeURI(j$("#valueOverview").text())); 
		}
		
		//Sets the content for the Office Details Tab
		function setOfficeData(cbResponse_offices){
			var cbOfficeList = "";
			
			for(cnt = 0; cbResponse_offices!=null && cnt < cbResponse_offices.length; cnt++){
				var offices = "";
				var cbOfficeJsonData = "{";
				
				//Office Description
				if(cbResponse_offices[cnt].description != null && cbResponse_offices[cnt].description != ""){
					offices += OFFICE_DESC_BEGIN + cbResponse_offices[cnt].description + OFFICE_DESC_END;
					cbOfficeJsonData += generateJsonString("Office.Description", cbResponse_offices[cnt].description);
				} 
				
				var officeAddress = "";
				//Office Address1 and Address2
				if(cbResponse_offices[cnt].address1 != null && cbResponse_offices[cnt].address1 != ""){
					officeAddress += cbResponse_offices[cnt].address1;
				}
				if(cbResponse_offices[cnt].address2 != null && cbResponse_offices[cnt].address2 != ""){ 
					officeAddress += LINE_BREAK + cbResponse_offices[cnt].address2;
				}
				cbOfficeJsonData += generateJsonString("Office.Address", officeAddress);
				offices += officeAddress + LINE_BREAK;
				
				//City
				if(cbResponse_offices[cnt].city != null && cbResponse_offices[cnt].city != ""){
					offices += cbResponse_offices[cnt].city + " ";
					cbOfficeJsonData += generateJsonString("Office.City", cbResponse_offices[cnt].city);
				}
				
				//State
				if(cbResponse_offices[cnt].state_code != null && cbResponse_offices[cnt].state_code != ""){
					offices += cbResponse_offices[cnt].state_code + " ";
					cbOfficeJsonData += generateJsonString("Office.State", cbResponse_offices[cnt].state_code);
				}
				
				//Zip Code
				if(cbResponse_offices[cnt].zip_code != null && cbResponse_offices[cnt].zip_code != ""){
					offices += cbResponse_offices[cnt].zip_code + LINE_BREAK;
					cbOfficeJsonData += generateJsonString("Office.ZipCode", cbResponse_offices[cnt].zip_code);
				}
				
				//Country Code
				if(cbResponse_offices[cnt].country_code != null && cbResponse_offices[cnt].country_code != ""){
					offices += cbResponse_offices[cnt].country_code + LINE_BREAK;
					cbOfficeJsonData += generateJsonString("Office.Country", cbResponse_offices[cnt].country_code);
				}
				
				cbOfficeJsonData = cbOfficeJsonData.slice(0, -1) + "}";
				cbOfficeJsonData = encodedJsonString(cbOfficeJsonData);
				
				cbOfficeList += LISTITEM_BEGIN + generateSaveOfficeButton(cbOfficeJsonData) + offices + LISTITEM_END;
			}
			appendHtmlOnPage("Offices", "{!$Label.RKCB_Tab_Offices}", cbOfficeList);
		}

		//Sets the content for the People Tab
		function setPeopleData(cbResponse_relationships){
			var cbPersonList=""; 
			var cbPeopleBaseUrl = CB_URLBASE + "/person/"; 
			
			for(cnt = 0; cbResponse_relationships!=null && cnt < cbResponse_relationships.length; cnt++){
				if(cbResponse_relationships[cnt].is_past) continue;

				cbPersonList += LISTITEM_BEGIN + generateSavePeopleButton(cbResponse_relationships[cnt].person.first_name + "#" + 
						cbResponse_relationships[cnt].person.last_name + "#" + 
						cbResponse_relationships[cnt].title + "#" + 
						cbResponse_relationships[cnt].person.permalink);

				var personName = String.format("{!$Label.RKCB_Content_PersonName}", cbResponse_relationships[cnt].person.first_name,
					cbResponse_relationships[cnt].person.last_name);
				var nameLink = generateHyperlinkHtml(cbPeopleBaseUrl + cbResponse_relationships[cnt].person.permalink, personName, "_blank", "");

				var title = '';
				if(cbResponse_relationships[cnt].title != null && cbResponse_relationships[cnt].title != ""){
					title = String.format("{!$Label.RKCB_Content_PersonTitle}",cbResponse_relationships[cnt].title);
				}

				cbPersonList += String.format("{!$Label.RKCB_Content_Person}", nameLink, title) + LISTITEM_END;
			}
			appendHtmlOnPage("People", "{!$Label.RKCB_Tab_People}", cbPersonList);
		}
		
		//Sets the content for the Product Tab
		function setProductData(cbResponse_products){
			var cbProductList="";
			var cbProductBaseUrl = CB_URLBASE + "/product/";
			for(cnt = 0; cbResponse_products!=null && cnt < cbResponse_products.length; cnt++){
				cbProductList = cbProductList + 
								LISTITEM_BEGIN + 
								generateHyperlinkHtml(cbProductBaseUrl + cbResponse_products[cnt].permalink, 
													  cbResponse_products[cnt].name, "_blank", "") + 
								LISTITEM_END;  
			}//for
			appendHtmlOnPage("Products", "{!$Label.RKCB_Tab_Products}", cbProductList);
		}
		
		//Sets the content for the Milestones Tab
		function setMilestoneData(cbResponse_milestones){
			var cbMilestoneList="";
			
			// sort the milestones by dates
			if (cbResponse_milestones!=null) cbResponse_milestones.sort(function(a,b){ 
				return compareDates(a.stoned_year, a.stoned_month, a.stoned_day, b.stoned_year, b.stoned_month, b.stoned_day); 
			});
			
			for(cnt = 0; cbResponse_milestones!=null && cnt < cbResponse_milestones.length; cnt++){
				cbMilestoneList += LISTITEM_BEGIN + 
								  generateShareChatterButton(cbResponse_milestones[cnt].description + "#" + 
									cbResponse_milestones[cnt].source_url);
				
				var description = cbResponse_milestones[cnt].description;

				var mileDate = '';
				if (cbResponse_milestones[cnt].stoned_month!=null) 
					mileDate += cbResponse_milestones[cnt].stoned_month + "/" ;
				if (cbResponse_milestones[cnt].stoned_day!=null)  
					mileDate += cbResponse_milestones[cnt].stoned_day + "/" ;
				mileDate+= cbResponse_milestones[cnt].stoned_year;

				var readMoreLink = '';
				if(cbResponse_milestones[cnt].source_url != null && cbResponse_milestones[cnt].source_url != ""){
					readMoreLink = generateHyperlinkHtml(cbResponse_milestones[cnt].source_url, "{!$Label.RKCB_Content_Link_ReadMore}", "_blank", "");
				}
				
				cbMilestoneList += String.format("{!$Label.RKCB_Content_Milestone}", description, mileDate, readMoreLink) + LISTITEM_END;
			}
			appendHtmlOnPage("Milestones", "{!$Label.RKCB_Tab_Milestones}", cbMilestoneList);
	   }
				
	   //Sets the content for the Investments Tab
	   function setInvestmentData(cbResponse_investments){
			var cbInvestmentList="";
			
			// sort the response by date
			if (cbResponse_investments!=null) cbResponse_investments.sort(function(a,b){ 
				return compareDates(a.funding_round.funded_year, a.funding_round.funded_month, a.funding_round.funded_day, 
									b.funding_round.funded_year, b.funding_round.funded_month, b.funding_round.funded_day); 
		   	});
			
			for(cnt = 0; cbResponse_investments!=null && cnt < cbResponse_investments.length; cnt++){

				if(cbResponse_investments[cnt].funding_round.raised_amount != null && 
					cbResponse_investments[cnt].funding_round.raised_amount != ""){
						
					var investmentDescription = "";
					/*	Collect the information needed to post the Description	*/
					investmentDescription = String.format("{!$Label.RKCB_Content_InvestmentDescription}",  
											addCommas(cbResponse_investments[cnt].funding_round.raised_amount),  
											cbResponse_investments[cnt].funding_round.raised_currency_code, 
											cbResponse_investments[cnt].funding_round.company.name );
					
					cbInvestmentList += LISTITEM_BEGIN + 
										generateShareChatterButton(String.format("{!$Label.RKCB_Content_InvestmentChatter}", AccountName, investmentDescription) + "#" +
																	cbResponse_investments[cnt].funding_round.source_url);
					
					var invDate = '';
					if (cbResponse_investments[cnt].funding_round.funded_month!=null) 
						invDate+=cbResponse_investments[cnt].funding_round.funded_month + "/" ;	
					if (cbResponse_investments[cnt].funding_round.funded_day!=null)  
						invDate+=cbResponse_investments[cnt].funding_round.funded_day + "/" ;
					invDate+=cbResponse_investments[cnt].funding_round.funded_year;
							
					var readMoreLink = '';							
					if(cbResponse_investments[cnt].funding_round.source_url != null && cbResponse_investments[cnt].funding_round.source_url != ''){
						readMoreLink = generateHyperlinkHtml(cbResponse_investments[cnt].funding_round.source_url, 
						   				   						 "{!$Label.RKCB_Content_Link_ReadMore}", "_blank", "");
					}
					
					cbInvestmentList += String.format("{!$Label.RKCB_Content_Investment}", investmentDescription, invDate, readMoreLink) + LISTITEM_END;
				}
			}
			appendHtmlOnPage("Investments", "{!$Label.RKCB_Tab_Investments}", cbInvestmentList);
		}
			   
		//Sets the content for the Acquisitions Tab
		function setAcquisitionsData(cbResponse_acquisitions){
			var cbAcquisitionsList="";

			// source by date
			if (cbResponse_acquisitions!=null) cbResponse_acquisitions.sort(function(a,b){ 
				return compareDates(a.acquired_year, a.acquired_month, a.acquired_day, 
									b.acquired_year, b.acquired_month, b.acquired_day); 
			});
			
			for(cnt = 0; cbResponse_acquisitions!=null && cnt < cbResponse_acquisitions.length; cnt++){
				var acqDescription = "";
				//Collect the information needed to post the Description
				if (cbResponse_acquisitions[cnt].price_amount!=null &&
					cbResponse_acquisitions[cnt].price_amount!=""){
					
					acqDescription += String.format("{!$Label.RKCB_Content_AcquisitionDesc_Amount}", 
						cbResponse_acquisitions[cnt].company.name, addCommas(cbResponse_acquisitions[cnt].price_amount),
						cbResponse_acquisitions[cnt].price_currency_code);
				}
				else{
					acqDescription += String.format("{!$Label.RKCB_Content_AcquisitionDesc_NoAmount}", 
						cbResponse_acquisitions[cnt].company.name);
				}
				
				
				cbAcquisitionsList += LISTITEM_BEGIN + 
									  generateShareChatterButton(String.format("{!$Label.RKCB_Content_AcquisitionChatter}", AccountName ,acqDescription) + "#" + 
									  							 cbResponse_acquisitions[cnt].source_url); 
				
				var acquDate = '';									  							  
				if (cbResponse_acquisitions[cnt].acquired_month!=null)
					acquDate+=cbResponse_acquisitions[cnt].acquired_month + "/" ;
				if (cbResponse_acquisitions[cnt].acquired_day!=null)
					acquDate+=cbResponse_acquisitions[cnt].acquired_day + "/" ;
				acquDate+=cbResponse_acquisitions[cnt].acquired_year;

				var readMoreLink = '';
				if(cbResponse_acquisitions[cnt].source_url != null && cbResponse_acquisitions[cnt].source_url != ''){
					readMoreLink += generateHyperlinkHtml(cbResponse_acquisitions[cnt].source_url, 
																"{!$Label.RKCB_Content_Link_ReadMore}", "_blank", ""); 
				}
				cbAcquisitionsList += String.format("{!$Label.RKCB_Content_Acquisition}", acqDescription, acquDate, readMoreLink) + LISTITEM_END;
			}
			appendHtmlOnPage("Acquisitions", "{!$Label.RKCB_Tab_Acquisitions}",cbAcquisitionsList);
		}

	   //Sets the content for the Fundings Tab
	   function setFundingData(cbResponse_funding_rounds){
			var cbFundingRoundList = "";
			
			// sort funding by date
			if (cbResponse_funding_rounds!=null) cbResponse_funding_rounds.sort(function(a,b){ 
				return compareDates(a.funded_year, a.funded_month, a.funded_day, b.funded_year, b.funded_month, b.funded_day); 
			});
			
			for(cnt = 0; cbResponse_funding_rounds!=null && cnt < cbResponse_funding_rounds.length; cnt++){
				var fundingDescription = "";
				if (cbResponse_funding_rounds[cnt].raised_amount!=null && cbResponse_funding_rounds[cnt].raised_amount!=''){
				
					// Translate series information 
					var roundDesc = '';
					var roundCode = cbResponse_funding_rounds[cnt].round_code;
					if (roundCode!=null && roundCode!='' && roundCode!=RESPONSEVALUE_FUNDING_UNATTRIBUTED){
					
						if (roundCode.length==1) roundDesc = String.format("{!$Label.RKCB_Content_Funding_Round}", roundCode.toUpperCase());
						else roundDesc = roundCode.toTitleCase();
						
						// if the reound Desc is anything, then we need a space after this
						roundDesc += ' ';
					}
					
					fundingDescription = String.format("{!$Label.RKCB_Content_FundingDescription}", 
						addCommas(cbResponse_funding_rounds[cnt].raised_amount),  
						cbResponse_funding_rounds[cnt].raised_currency_code, roundDesc);
				}
				else{
					fundingDescription = "{!$Label.RKCB_Content_FundingDescription_NoAmount}"; 					
				}
				
				cbFundingRoundList += LISTITEM_BEGIN + 
									  generateShareChatterButton(String.format("{!$Label.RKCB_Content_FundingChatter}",AccountName, fundingDescription) + "#" +
									  							 cbResponse_funding_rounds[cnt].source_url);
				var fundDate = '';
				if (cbResponse_funding_rounds[cnt].funded_month!=null) 
					fundDate+=cbResponse_funding_rounds[cnt].funded_month + "/" ;
				if (cbResponse_funding_rounds[cnt].funded_day!=null)  
					fundDate+=cbResponse_funding_rounds[cnt].funded_day + "/" ;
				fundDate+=cbResponse_funding_rounds[cnt].funded_year ;
						
				var readMoreLink = '';
				if(cbResponse_funding_rounds[cnt].source_url != null && cbResponse_funding_rounds[cnt].source_url != ''){
					readMoreLink += generateHyperlinkHtml(cbResponse_funding_rounds[cnt].source_url, 
																"{!$Label.RKCB_Content_Link_ReadMore}", "_blank", ""); 
				}
				cbFundingRoundList += String.format("{!$Label.RKCB_Content_Funding}", fundingDescription, fundDate, readMoreLink) + LISTITEM_END;
			}
			appendHtmlOnPage("FundingRounds", "{!$Label.RKCB_Tab_Funding}",cbFundingRoundList);
		}
				
		//Sets the content for the Competition Tab
		function setCompetitionData(cbResponse_competitions){			   
			var cbCompetitorList="";
			
			for(cnt = 0; cbResponse_competitions!=null && cnt < cbResponse_competitions.length; cnt++){
				if(cbResponse_competitions[cnt].competitor.name == null || 
					cbResponse_competitions[cnt].competitor.name == "") continue;
					
				if(cbResponse_competitions[cnt].competitor.permalink != null && 
					cbResponse_competitions[cnt].competitor.permalink != ""){
					
					cbCompetitorList += LISTITEM_BEGIN + 
						generateSaveCompetitionButton(cbResponse_competitions[cnt].competitor.name + "#" + 
							cbResponse_competitions[cnt].competitor.permalink) +

							// following line assumes all compeitors are companies.  this could be true.
							generateHyperlinkHtml(CB_URLBASE + "/company/" + cbResponse_competitions[cnt].competitor.permalink, 
								cbResponse_competitions[cnt].competitor.name, "_blank", "") +
						LISTITEM_END;
				}
				else{
					cbCompetitorList += LISTITEM_BEGIN + cbResponse_competitions[cnt].competitor.name + LISTITEM_END; 
				}//else
			}	
			appendHtmlOnPage("Competitors", "{!$Label.RKCB_Tab_Competitors}", cbCompetitorList);
		}
		
		

		// ---------------------------------------------------------------------------------------------
		// Generic Functions ---------------------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------

		/*  Provides data to functions setMilestoneData, setInvestmentData, setFundingData, setAcquisitionsData */
		function compareDates(firstYear, firstMonth, firstDay, secondYear, secondMonth, secondDay){
			// assume we at least have years
			if (secondYear>firstYear){ return 1 ;}
			if (secondYear<firstYear){ return -1 ;}

			if (secondMonth==null || secondMonth==""){ return 1 ;}
			if (firstMonth==null || firstMonth==""){ return -1 ;}
			if (secondMonth > firstMonth ){ return 1 ;}
			if (secondMonth < firstMonth ){ return -1 ;}
			
			if (secondDay==null || secondDay==""){ return 1 ;}
			if (firstDay==null || firstDay==""){ return -1 ;}
			if (secondDay > firstDay ){ return 1 ;}
			if (secondDay < firstDay ){ return -1 ;}

			return 0;		   
		}
		
		/* Retrieves the month name based on the equivalent month digit (Used in setHeaderData function) */
		function getMonthName(pMonthDigit){
			var monthTrans = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
			return monthTrans[pMonthDigit-1];
		}
		
		/* Formats numbers to include commas */	 
		function addCommas(nStr){
			nStr += "";
			x = nStr.split(".");
			x1 = x[0];
			x2 = x.length > 1 ? "." + x[1] : "";
			var rgx = /(\d+)(\d{3})/;
			while (rgx.test(x1)) {
				x1 = x1.replace(rgx, "$1" + "," + "$2");
			}
			return x1 + x2;
		}


		// ---------------------------------------------------------------------------------------------
		// Generate / Modify HTML Functions ------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------

		/* Appends the display content to the mentioned div on the page */ 
		function appendHtmlOnPage(pdivId, pLabel, pContentToAppend){
			var labelArea = j$("#label"+pdivId);
			if (labelArea!=null) 
			{	labelArea.append(pLabel);	}
							
			if (pContentToAppend==null || pContentToAppend=="")	
				j$("#value"+pdivId).append(SYSMSG_BEGIN + String.format("{!$label.RKCB_Content_None}", pLabel ,AccountName) + SYSMSG_END);	
			else 
				j$("#value"+pdivId).append(pContentToAppend); 
		}
		
		/*  Displays the fields in the Header section, if the fields have value in it   */
		function setHeaderDataItem(pdivId, pLabel, pContentToAppend){
			var labelArea = j$("#label"+pdivId);
			var valueArea = j$("#value"+pdivId);
			if (pContentToAppend!=null && pContentToAppend!= ""){
				if (labelArea!=null) labelArea.append(pLabel); 
				if (valueArea!=null) valueArea.append(pContentToAppend);
			}
			else{
				if (labelArea!=null) labelArea.css("display", "none");
				if (valueArea!=null) valueArea.css("display", "none");
			} 
		}
		
		/* Generated Permalink URL for savePeopleToSalesforce and saveCompetitorToSalesforce functions   */
		function generatePermalinkUrl(namespace, permalink){
			return CB_PERMALINKURLBASE + "/" + namespace + "/" + permalink + ".js";
		}
				
		/* Generates html to display a Save to salesforce button saving People to Contact */
		function generateSavePeopleButton(pButtonId){
			return "<span class=\"save-people-icon\">" + 
						"<a id=\"" + pButtonId + "\" " +
							"title=\"{!$Label.RKCB_Save_AddToolTip}\" " + 
							"href=\"#\" " + 
							"onclick=\"savePeopleToSalesforce(this.id);return false;\">"+
							"<img class=\"icon-area\" src=\"/s.gif\"/>" + 
						"</a>" + 
				   "</span>";
		}
		
		/* Generates html to display a Save to salesforce button saving Competition to Account */
		function generateSaveCompetitionButton(pButtonId){
			return "<span class=\"save-competitor-icon\">" + 
						"<a id=\"" + pButtonId + "\" " +
							"title=\"{!$Label.RKCB_Save_AddToolTip}\" " + 
							"href=\"#\" " + 
							"onclick=\"saveCompetitorToSalesforce(this.id);return false;\">"+
							"<img class=\"icon-area\" src=\"/s.gif\"/>" + 
						"</a>" + 
					"</span>";
		}
		
		/* Generates html to display a Save to salesforce button saving Competition to Account */
		function generateSaveOfficeButton(pButtonId){
			return "<span class=\"save-office-icon\">" + 
						"<a title=\"{!$Label.RKCB_Save_SaveToolTip}\" href=\"#\" onclick=\"getMapToSf('"+pButtonId+"');return false;\">"+
							"<img class=\"icon-area\" src=\"/s.gif\"/>" + 
						"</a>" + 
					"</span>";
		}
		
		/* Generates html to display a Share on Chatter button */
		function generateShareChatterButton(pButtonId){
			/*	Display Share on Chatter button only if chatter is enabled for the org	*/
			if ({! canPostToChatter==false }) return '';
			
			return "<span class=\"share-chatter-icon\">" +
						"<a id=\"" + pButtonId + "\" " +
							"title=\"{!$Label.RKCB_Chatter_ShareTooltip}\" " + 
							"href=\"#\" " + 
							"onclick=\"displayChatterDialog(this.id);return false;\">" +
							"<img class=\"icon-area\" src=\"/s.gif\"/>" +
						"</a>" + 
					"</span>";
		}
		

		// ---------------------------------------------------------------------------------------------
		// SFDC Connectivity Functions -----------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------

		/* Makes a call to the Controller's remoting method to update the permalink value on Account */
		function updatePermalink(pButtonId){
			openWait("{!$Label.RKCB_Wait_Saving}");
			
			/* Check if # exists in the id of the button clicked by user */
			if(pButtonId.indexOf("#",0) != -1){
				/* Split and fetch the namespace and permalink value from the button Id */
				var buttonIdList = pButtonId.split("#");	
				var permalinkUrl = CB_PERMALINKURLBASE + "/" + buttonIdList[0] + "/" + buttonIdList[1] + ".js";
				/* Assign the Id of the Account record to update */
				var cbAccountId = "{!Account.Id}";

				/* Update the permalink value on Account record when the user clicks an associated button */
				//updateAccount(cbAccountId,permalinkUrl);
				remotingController.updateAccount(cbAccountId, permalinkUrl, 
					function(result, event){
						if(event.status){
							/*  Hide the div displaying search results  */
							j$("#valueCBSearchResults").hide();
							j$("#verticalTabbedContent").hide();
							
							// parseCrunchbaseResponse(permalinkUrl);  -- instead of parsing the crunchbase results immediately, force the page to refresh
							//   -- previously, we'd update the record, but if inline editing was enabled, the data on the detail view would not have been 
							//   -- updated and performing any inline editing would blank out the permalink 
							top.location.href = '/{!Account.Id}';
						}
						else{
							/*	Stop Loading Message*/
							closeWait();
							showError("{!$Label.RKCB_Save_Error}", event.message);
						}
					},
					{escape:false}
				);
			}
		}
		
		/* Calls the Controller's remote function createPersonToContact 
		 * which saves People record as Contact record in salesforce   
		 */
		function savePeopleToSalesforce(personInfo){
			if(personInfo.indexOf("#",0) != -1){
				openWait("{!$Label.RKCB_Wait_Saving}");
				//Split and fetch the namespace and permalink value from the button Id
				var buttonIdList = personInfo.split("#");   
				
				//Create a record in Contact when the Save to Contacts button is clicked on People tab
				remotingController.savePeopleAsContact(
					buttonIdList[0], 
					buttonIdList[1], 
					buttonIdList[2], 
					generatePermalinkUrl("person", buttonIdList[3]),
					"{!Account.Id}",
					function(result, event){
						if(event.status){
							top.location.href = "/" + result;
						}
						else{
							closeWait();
							showError("{!$Label.RKCB_Save_Error}", event.message); 
						}
					},
					{escape:false}
				);
			}//if
		} 
		
		/* Calls the Controller's remote function saveCompetitorAsAccount which saves Competitor 
		 * record as Account record in salesforce   */
		function saveCompetitorToSalesforce(competitorInfo){ 
			if(competitorInfo.indexOf("#",0) != -1){
				openWait("{!$Label.RKCB_Wait_Saving}");
				var buttonIdList = competitorInfo.split("#");   
	
				//Create a record in Contact when the Save to Contacts button is clicked on People tab
				remotingController.saveCompetitorAsAccount(
					buttonIdList[0], 
					generatePermalinkUrl("company", buttonIdList[1]), 
					function(result, event){
						if(event.status)
							window.parent.location.href = "/" + result;
						else{
							closeWait();
							showError("{!$Label.RKCB_Save_Error}", event.message);
						}
					},
					{escape:false}
				);
			}//if
		}
		
		// ---------------------------------------------------------------------------------------------
		// Crunchbase API Connectivity Functions -------------------------------------------------------
		// ---------------------------------------------------------------------------------------------
		var global_waitingJSON_timeout;
		var global_successFunction;

		function getCrunchbaseJSON(url, successFunction){
			openWait("{!$Label.RKCB_Wait_Loading}");

			global_successFunction = successFunction;
			var timeout = {!JSENCODE(TEXT($Setup.RKCB__Cruncher_Public_Settings__c.RKCB__Loading_Timeout_Seconds__c))};
			timeout = timeout * 1000;
			global_waitingJSON_timeout = setTimeout("checkTimeout();", timeout);
			
			j$.getJSON(url,gotCrunchbaseJSON);//getJSON
		}
		function gotCrunchbaseJSON(response){
			clearTimeout(global_waitingJSON_timeout);
			global_successFunction(response);
		}
		function checkTimeout(){
			showTimeoutError('No Response from Crunchbase','{!$Label.RKCB_Wait_Timeout}');
		}

		// ---------------------------------------------------------------------------------------------
		// Dialog Functions ----------------------------------------------------------------------------
		// ---------------------------------------------------------------------------------------------
		
		/*	Displays the chatter dialog Box to user where the description can be shared	*/
		function displayChatterDialog(pButtonId){
			var splitId = pButtonId.split("#")
		
			var Description = (splitId[0] != null) ? splitId[0] : "" ;
			var Link = (splitId[1] != null) ? splitId[1] : "";

			if(Description != ""){
				j$("#chatterDescription").text(Description);
				j$("#hiddenChatterLink").html(Link);
				j$("#chatterLink").html(Link.length > 50 ? Link.substr(0,47) + " ..." : Link);
				/*	Display Post to Chatter Dialog	*/
				openDialog("#chatterDialog");
			}
		}
		
		/*	Initialize the chatter dialog	*/
		function initChatterDialog(){
			j$("#chatterDialog").dialog({ 
				autoOpen: false,
				show: {effect:'drop', direction:'down'},
				hide: {effect:'drop', direction:'down'},
				height: 193, 
				modal: true, 
				width: 400, 
				resizable: false, 
				title: "{!$Label.RKCB_Chatter_Title}", 
				buttons:{
					"{!$Label.RKCB_Chatter_PostButton}": function() {
						remotingController.postToChatter(
							"{!Account.Id}",
							j$("#chatterDescription").text(),
							j$("#hiddenChatterLink").html(),
							function(result, event){
								if(event.status){ 
									// should we do this?  comment out for now.
									// alert("{!$Label.RKCB_Chatter_Success}");
								}
								else{
									showError("{!$Label.RKCB_Chatter_Error}", event.message);
								}//else
							}, 
							{escape:false}
						);
						j$( "#chatterDialog" ).dialog( "option", "hide", {effect:'drop', direction:'up'} );
						j$(this).dialog("close"); 
						j$( "#chatterDialog" ).dialog( "option", "hide", {effect:'drop', direction:'down'} );
					},
					"{!$Label.RKCB_Chatter_CancelButton}": function() {
						j$(this).dialog("close"); 
					}
				}//buttons
			});
		}
		
		/*	Initilize Save to Salesforce dialog	*/
		function initSaveToSfDialog(){
			j$("#saveToSalesforce").dialog({
				autoOpen: false,
				modal: true, 
				show: {effect:'drop', direction:'down'},
				hide: {effect:'drop', direction:'down'},
				position: ['center', 20],
				height: 250, 
				width: 750, 
				resizable: false, 
				title: "{!$Label.RKCB_Save_Title}",
				buttons: {
					"{!$Label.RKCB_Save_SaveButton}": function() {
						saveCrunchbaseDataToSf();
					},
					"{!$Label.RKCB_Save_CancelButton}": function() {
						j$(this).dialog("close"); 
					}
				}
			});
		}
		
		/*	Display Save to Salesforce popup on complete of action function	*/		
		function displaySaveToSfPopup(){
			/*	Control visibility of Save button in Save to Salesforce screen	*/
			if(j$("#noRecords").length == 1){
				saveToSalesforceButton("disable");
			}
			openDialog("#saveToSalesforce");
		}
		
		/*	Disable/enable the Save button on import screen while there are no records in import screen or 
			if all checkboxes are unchecked	*/
		function saveToSalesforceButton(btnValue){
			j$(".ui-dialog-buttonpane button:contains('{!$Label.RKCB_Save_SaveButton}')").button(btnValue);
		}
				
		/*	if an update occurred, refresh the parent account view */
		function postSave(saveSuccessful,errorMessage){
			if(saveSuccessful){
				j$("#saveToSalesforce").dialog( "option", "hide", {effect:'drop', direction:'up'} );
				j$("#saveToSalesforce").dialog("close"); 
				j$("#saveToSalesforce").dialog( "option", "hide", {effect:'drop', direction:'down'} );
				window.parent.location.href = "/{!Account.Id}";
			}
			else{
				/*	Scroll to top to display Page Message to user	*/
				j$("#saveToSalesforce").dialog("close"); 
				showError("{!$Label.RKCB_Save_Error}", errorMessage)
			}
		}		
	</script>


<apex:outputPanel id="pageView" layout="block" styleClass="pageViewPanel">
	<!-- Start of Main display elements -->

	<!--	Holds and displays the detail of the search result	-->
	<div id="verticalTabbedContent" class="verticalslider" style="display:none">
		<table class="verticalslider-table" >
		<tr><td class="sideheader-cell">
			<div id="sideheader" class="sideheader-area">
				<div class="logo-area"><center><div id="valueLogo" ></div></center></div>
				<div class="headerData-area">
					<div class="headerData-item"><span id="labelCategory"		class="sideheaderLabel"></span> <span id="valueCategory"		  class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelDescription"	 class="sideheaderLabel"></span> <span id="valueDescription"	   class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelFounded"		 class="sideheaderLabel"></span> <span id="valueFounded"		   class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelEmployeeCount"   class="sideheaderLabel"></span> <span id="valueEmployeeCount"	 class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelIPO"			 class="sideheaderLabel"></span> <span id="valueIPO"			   class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelWebsite"		 class="sideheaderLabel"></span> <span id="valueWebsite"		   class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelPhone"		   class="sideheaderLabel"></span> <span id="valuePhone"			 class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelEmail"		   class="sideheaderLabel"></span> <span id="valueEmail"			 class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelBlog"			class="sideheaderLabel"></span> <span id="valueBlog"			  class="sideheaderValue"></span></div> 
					<div class="headerData-item"><span id="labelTwitter"		 class="sideheaderLabel"></span> <span id="valueTwitter"		   class="sideheaderValue"></span></div>
				</div>
				<div id="sideheader-buttons-area">
					<span id="valueHeadViewOnCB" class="sfButton"></span>
					<span id="valueHeadSave" class="sfButton"></span>
				</div> 
			</div>
		</td><td class="verticalslider_tabs-cell">
			<ul class="verticalslider_tabs">
				<li><a href="#">{!$Label.RKCB_Tab_Overview}</a></li>
				<li><a href="#">{!$Label.RKCB_Tab_People}</a></li>
				<li><a href="#">{!$Label.RKCB_Tab_Products}</a></li>
				<li><a href="#">{!$Label.RKCB_Tab_Milestones}</a></li>
				<li><a href="#">{!$Label.RKCB_Tab_Investments}</a></li>
				<li><a href="#">{!$Label.RKCB_Tab_Funding}</a></li>
				<li><a href="#">{!$Label.RKCB_Tab_Competitors}</a></li>
			</ul>
		</td><td class="verticalslider_contents-cell">
			<ul class="verticalslider_contents">
				<li>
					<h2><div id="nolabelOverview"></div></h2>
					<div class="contentDiv">
						<div id="valueOverview" ></div>
						<div id="labelOffices" class="mixedContentSection-Divider"></div>
						<div id="valueOffices" class="mixedContentSection-List"></div>
					</div> 
				</li>
				<li>
					<h2><div id="nolabelPeople"></div></h2>
					<div id="valuePeople" class="contentDiv"></div>
				</li>
				<li>
					<h2><div id="nolabelProducts"></div></h2>
					<div id="valueProducts" class="contentDiv"></div>
				</li>
				<li>
					<h2><div id="nolabelMilestones" ></div></h2>
					<div id="valueMilestones" class="contentDiv"></div>
				</li>
				<li>
					<div class="contentDiv">
						<div id="labelInvestments" class="multiSectionTopHeading"></div>
						<div id="valueInvestments"></div>
						<div id="labelAcquisitions" class="multiSectionDivider"></div>
						<div id="valueAcquisitions" ></div>
					</div>
				</li>
				<li>
					<h2><div id="nolabelFundingRounds"></div></h2>
					<div id="valueFundingRounds" class="contentDiv"></div>
				</li>
				<li>
					<h2><div id="nolabelCompetitors"></div></h2>
					<div id="valueCompetitors" class="contentDiv"></div>
				</li>
			</ul>
		</td></tr>
		</table>
	</div>
	<!--  Branding -->  
	<a class="vert-tab" href="http://www.redkitetechnologies.com" target="_blank">
		<img src="{!URLFOR($Resource.CrunchbaseVerticalTabs,'images/rk-tab-v02-vert.png')}"/>
	</a>

	<!--	Holds the search results after performing an API Search on Crunchbase	-->
	<div id="valueCBSearchResults" style="display:none" class="contentDiv">
		<div id="searchResults">
			<apex:form id="searchNameForm" target="_self">
				<div id="search-result-header" >
					{!$Label.RKCB_Search_HeaderMessage}
					<span id="search-control">
						<span class="display-name">{!strAccountName}.</span>
						<span class="change-link"><a href="#" onclick="showSearchTermChangeControl();return false;">{!$Label.RKCB_Search_Change_ShowControl}</a></span>
						<span class="change-control" style="display:none">
							<apex:inputText styleClass="account-name-text" value="{!strAccountName}" />
							<apex:commandButton value="{!$Label.rkcb__RKCB_Search_Change_SearchButton}" action="{!refreshController}" rerender="pageConfig, pageView"/>
						</span>
					</span>
				</div>
			</apex:form>
			<div Id="valueSearchResults"></div>
		</div>
		<table Id="valuePagingLink" class="search-result-table"></table>
	</div>

	<!-- End of Main display elements -->

	<!-- Dialog box elements -->

	<!-- Display a jquery dialog which allows the user to edit the content and post the same to 
		 Chatter -->
	<div id="chatterDialog" class="chatter-dialog" style="display:none;">
		<textarea id="chatterDescription" rows="3" Class="chatter-dialog-style"></textarea>
		<table border="0" cellpadding="0" cellspacing="0"><tr>
			<td>
				<img class="icon-area" src="{!URLFOR($Resource.CrunchbaseResources, 'images/link.png')}"/>
			</td>
			<td>
				<div id="chatterLink" class="chatter-dialog-link"></div>
				<div id="hiddenChatterLink" style="display:none"></div>
			</td>
		</tr></table>
	</div>
	
	
	<!-- Display a Crunchbase to Salesforce mapping table in a jquery dialog when the Save to 
		 Salesforce button is clicked -->
	<div id="saveToSalesforce" style="display:none;">
		<apex:outputPanel id="fieldMapper">
			<apex:form id="mapForm" style="margin:0;">
				<!--	Call apex function to generate data to be displayed on Save to Salesforce popup	-->
				<apex:actionFunction action="{!getMapToSf}"
					name="getMapToSf"
					oncomplete="displaySaveToSfPopup();return false;"
					rerender="fieldMapper">
					
					<apex:param name="crunchBaseJsonData" value="" />
				</apex:actionFunction>
				
				<!-- Call apex function to Save data displayed in Save to Salesforce popup	-->
				<apex:actionFunction action="{!saveCrunchbaseDataToSf}" 
					name="saveCrunchbaseDataToSf" 
					rerender="fieldMapper"
					oncomplete="postSave({!isSaveSuccessful},'{!saveErrorMessage}');return false;">
				</apex:actionFunction>

				<c:CrunchbaseFieldMapDialog mapItems="{!lstMapper}" />
			</apex:form>
		</apex:outputPanel> 
	</div>

	<c:CrunchbaseErrorDialog />
	<!-- End of Dialog box elements -->

</apex:outputPanel>

</apex:page>