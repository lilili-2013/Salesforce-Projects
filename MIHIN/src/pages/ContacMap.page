<!-- *Page: ContactMap -->
<!-- *Description: This inline vf page is used to show the location of Contact on map using MapQuest API. The location is shown by means of latitude and longitude values -->
<!-- *Copyright 2013 Michigan Health Information Network Shared Services MuffiN Confidential Proprietary Restricted -->
<apex:page standardcontroller="Contact" id="locations">
    
    <script src="https://open.mapquestapi.com/sdk/js/v7.0.s/mqa.toolkit.js?key=Fmjtd%7Cluubnuu7ng%2C2a%3Do5-9uy0hw"></script>
    <script src="../../soap/ajax/29.0/connection.js" type="text/javascript"></script>
    <script src="../../soap/ajax/29.0/apex.js" type="text/javascript"></script>
    <div id="map" style="width:600px; height:300px;margin-left: auto; margin-right: auto;"></div>
 
 <script type="text/javascript">
 
   /*An example of using the MQA.EventUtil to hook into the window load event and execute defined function
   passed in as the last parameter. You could alternatively create a plain function here and have it
   executed whenever you like (e.g. <body onload="yourfunction">).*/
   
    MQA.EventUtil.observe(window, 'load', function() 
    {   
       var con = '{!Contact.Id}';
       //Comment this line for inline component run - sforce.connection.sessionId = '{!$Api.Session_ID}';
       var loc = sforce.apex.execute("SL_Contact_to_Address","ConvertToAddress",{Cons:con,page:true});
       if(loc[0] == 'No practice address found')
       {
       //error?
       }
       else
       {
       		makeMap(loc[1], loc[0]);
       }
       
   });
    
    
    function makeMap(lat1, lng1)
    {	
     /*Create an object for options*/     
    
     var options={
       elt:document.getElementById('map'),       /*ID of element on the page where you want the map added*/
       zoom:10,                                  /*initial zoom level of the map*/
       latLng:{lat: parseFloat(lat1), lng: parseFloat(lng1)},  /*center of map in latitude/longitude */
       mtype:'map',                              /*map type (map)*/
       bestFitMargin:0,    /*margin offset from the map viewport when applying a bestfit on shapes*/
       zoomOnDoubleClick:true                    /*zoom in when double-clicking on map*/
     };
     window.map = new MQA.TileMap(options);
     
    
     var basic = new MQA.Poi( {lat: parseFloat(lat1), lng: parseFloat(lng1)} );
     var icon = new MQA.Icon("{!$Resource.SL_PinDropImageForContactMap}",18,30);
     //basic.setInfoTitleHTML('Provider Name');
	 basic.setInfoContentHTML('{!Contact.Name}');
     basic.setBias({x:-50,y:-50});
     basic.setIcon(icon);
     basic.setRolloverContent('{!Contact.Name}');
     //This will add the POI to the map in the maps default shape collection.
     map.addShape(basic);
     basic.toggleInfoWindow();
     MQA.withModule('largezoom', function() 
     {
    
   	 map.addControl(
     new MQA.LargeZoom(),
     new MQA.MapCornerPlacement(MQA.MapCorner.TOP_LEFT, new MQA.Size(5,5))
   );
 
 });
     }
 </script>

</apex:page>