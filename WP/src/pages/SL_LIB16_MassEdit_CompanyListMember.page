<apex:page controller="SL_LIB16_MassEdit_CompanyListMember" title="Company List Member Edit" action="{!loadColumnOrder}">
<apex:includeScript value="{!$Resource.SL_LIB16_getElementByClassName}"/>
<apex:stylesheet value="{!URLFOR($Resource.SL_LIB16_jQuerySFFiltres, 'css/redmond/jquery-ui-1.8.4.custom.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.SL_LIB16_jQuerySFFiltres, 'js/jquery-1.4.2.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SL_LIB16_jQuerySFFiltres, 'js/jquery-ui-1.8.4.custom.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SL_LIB16_jQuerySFFiltres, 'js/ui.timepicker.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.SL_LIB16_filtersDebug)}"/>
<apex:includeScript value="{!URLFOR($Resource.SL_LIB16_blockUI)}"/>
<script>
	function css_browser_selector(u){var ua=u.toLowerCase(),is=function(t){return ua.indexOf(t)>-1},g='gecko',w='webkit',s='safari',o='opera',m='mobile',h=document.documentElement,b=[(!(/opera|webtv/i.test(ua))&&/msie\s(\d)/.test(ua))?('ie ie'+RegExp.$1):is('firefox/2')?g+' ff2':is('firefox/3.5')?g+' ff3 ff3_5':is('firefox/3.6')?g+' ff3 ff3_6':is('firefox/3')?g+' ff3':is('gecko/')?g:is('opera')?o+(/version\/(\d+)/.test(ua)?' '+o+RegExp.$1:(/opera(\s|\/)(\d+)/.test(ua)?' '+o+RegExp.$2:'')):is('konqueror')?'konqueror':is('blackberry')?m+' blackberry':is('android')?m+' android':is('chrome')?w+' chrome':is('iron')?w+' iron':is('applewebkit/')?w+' '+s+(/version\/(\d+)/.test(ua)?' '+s+RegExp.$1:''):is('mozilla/')?g:'',is('j2me')?m+' j2me':is('iphone')?m+' iphone':is('ipod')?m+' ipod':is('ipad')?m+' ipad':is('mac')?'mac':is('darwin')?'mac':is('webtv')?'webtv':is('win')?'win'+(is('windows nt 6.0')?' vista':''):is('freebsd')?'freebsd':(is('x11')||is('linux'))?'linux':'','js']; c = b.join(' '); h.className += ' '+c; return c;}; css_browser_selector(navigator.userAgent);
</script>
<style>
.ui-widget {  font-size: 1.0em; }
.ui-widget-content { font-size:1.0em; padding: 2px; 2px; 2px; 2px;}
.ui-button { font-size:0.8em; }
.ui-advanced{ font-size: 0.9em; }


h3 {
    display:block !important;
    font-size:1.17em !important;
    font-weight:bold !important;
    margin-bottom:0 !important;
    margin-left:0 !important;
    margin-right:0 !important;
    margin-top:1em !important;
    text-align:left !important;
}

.ie .lookupInput.filter input
{
    top: 6px;
}
.ie8 .lookupInput.filter input
{
    top: -2px;
}
.win.gecko .lookupInput.filter input, .gecko .lookupInput.filter input, .linux.gecko .lookupInput.filter input
{
    -moz-border-radius:5px 5px 5px 5px;
    top: -11px;
}
.lookupInput.filter
{
    position: relative;
}
.lookupInput.filter input
{
    -moz-border-radius:5px 5px 5px 5px;
    -webkit-border-bottom-right-radius: 5px;
    -webkit-border-bottom-left-radius: 5px;
    -webkit-border-top-right-radius: 5px;
    -webkit-border-top-left-radius: 5px;
    background:url("images/ui-bg_inset-hard_100_fcfdfd_1x100.png") repeat-x scroll 50% bottom #FCFDFD;
    border:1px solid #A6C9E2;
    color:#222222;
    width:163px; 
    height:17px; 
    position: absolute;
    top: -4px;
}
.ie .lookupIcon.filter,.ie .lookupIconOn.filter
{
    top: 6px;
}
.ie8 .lookupIcon.filter,.ie8 .lookupIconOn.filter
{
    top: 0px;
}
.win.gecko .lookupIcon.filter, .gecko .lookupIcon.filter, .linux.gecko .lookupIcon.filter, .win.gecko .lookupIconOn.filter, .gecko .lookupIconOn.filter, .linux.gecko .lookupIconOn.filter
{
    top: -11px;
}
.lookupIcon.filter,.lookupIconOn.filter
{
    position: absolute;
    top: -4px;
    left: 167px;
}
</style>

<script>
function moveColumn(table, sIdx, fIdx) {
    var row;
    var i=table.rows.length;
    while (i--){
        row = table.rows[i];
        var x = row.removeChild(row.cells[sIdx]);
        if (fIdx < row.cells.length) {
            row.insertBefore(x, row.cells[fIdx]);
        } else {
            row.appendChild(x);
        }
    }
}

function moveColumn2(ind) {
    var table = document.getElementById('dtable'); 
    for (var i=0; i < table.rows.length; i++){
        //alert(i);
        var row = table.rows[i];
        var cell = row.removeChild(row.cells[ind]);
        row.appendChild(cell);
    }
}

function clearTable(table){
    var row;
    var i = table.rows.length;
    while (i--) {
        row = table.rows[i];
        var j = row.cells.length;
        while (j--) {
            if (row.cells[j].style.display == 'none'){
                row.removeChild(row.cells[j]);
            }
        }
    }
}

function onlyNumbers(evt)
{
                var e = evt; // for trans-browser compatibility
                var charCode = e.which || e.keyCode;
            
                if (charCode > 31 && (charCode < 48 || charCode > 57))
                    return false;
            
                return true;
            
}
</script>

<style>
span.asteric {
    font-weight: bold;
    font-size: 17px;
    display: inline;
    color: red;
} 
span.saveNoteSpan {
    font-weight: bold;
    display: none;
    color: red;
} 
</style>

<apex:sectionHeader title="Edit Company List Members" subtitle="{!ParentName}"/>
<apex:form id="f0">
<!--<apex:pageMessages id="errors"/>-->
<apex:pageBlock id="pb0" rendered="{!NOT(inEditColumns)}">
    <apex:actionFunction action="{!voidAction}" name="loadPage" rerender="pb0" oncomplete="stopFade();" status="MCSub">
        <apex:param name="pageNumber" assignTo="{!pageNumber}" value="{!pageNumber}"/>
    </apex:actionFunction>
    <apex:pageBlockButtons location="top">
        <table><tr><td>
            <apex:commandButton value="Save" action="{!save}" rerender="pb0" rendered="{!NOT(IsViewState)}" onclick="startSavingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Save & Close" action="{!saveClose}" rendered="{!NOT(IsViewState)}" onclick="startSavingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Cancel & Back to Company List" action="{!close}" immediate="true" rerender="pb0" rendered="{!NOT(IsViewState)}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub"/>
            
<!--            <apex:commandButton value="Add Multiple" action="{!doAddMany}" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();"/>-->
            <apex:commandButton value="Edit" action="{!startEdit}" rerender="pb0" immediate="true" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Delete" action="{!doDelete}" rerender="pb0" rendered="{!IsViewState}" onclick="startSavingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Cancel" action="{!close}" immediate="true" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub"/>
        </td><td style="text-align: right;">
            <apex:actionStatus id="pageSizeChangeStatus" stopText="">
                <apex:facet name="start">
                    <div style="height: 34px; display: inline;">
                        <img src="/img/loading.gif" width="16" height="16"/> Loading...
                    </div>
                </apex:facet>
            </apex:actionStatus>
            <apex:selectList value="{!pageSize}" multiselect="false" size="1" onchange="startLoadingFade(); savePageSize(this.value);">
                <apex:selectOptions value="{!pageSizeValues}"/>
            </apex:selectList>
            <apex:commandButton value="Columns/Filters" action="{!voidAction}" rerender="f0" title="Here you can setup columns shown, reorder them or create filters." onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
                <apex:param name="inEditColumns" assignTo="{!inEditColumns}" value="true"/>
            </apex:commandButton>
        </td></tr>
        <tr><td><span class="saveNoteSpan">Click Save to apply changes</span></td><td></td></tr></table>        
    </apex:pageBlockButtons>
    <apex:pageBlockButtons location="bottom" style="align: right;">
        <table><tr><td>
            <apex:commandButton value="Save" action="{!save}" rerender="pb0" rendered="{!NOT(IsViewState)}" onclick="startSavingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Save & Close" action="{!saveClose}" rendered="{!NOT(IsViewState)}" onclick="startSavingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Cancel & Back to Company List" action="{!close}" immediate="true" rerender="pb0" rendered="{!NOT(IsViewState)}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub"/>
        
<!--            <apex:commandButton value="Add Single Company" action="{!doAdd}" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();"/>-->
<!--            <apex:commandButton value="Add Multiple" action="{!doAddMany}" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();"/>-->
            <apex:commandButton value="Edit" action="{!startEdit}" rerender="pb0" immediate="true" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Delete" action="{!doDelete}" rerender="pb0" rendered="{!IsViewState}" onclick="startSavingFade();" oncomplete="stopFade();" status="MCSub"/>
            <apex:commandButton value="Cancel" action="{!close}" immediate="true" rendered="{!IsViewState}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub"/>
        </td></tr>
        <tr><td><span class="saveNoteSpan">Click Save to apply changes</span></td></tr></table>
    </apex:pageBlockButtons>
    
    {!FiltersString}
    <table id="dtable" class="list" border="0" cellpadding="0" cellspacing="0" style="visibility: hidden;">
        <thead class="rich-table-thead">
            <tr class="headerRow">
                <th class="headerRow" colspan="1">
                <input id="SelectAllCheckbox" onclick="jQuery('.selectionCheckbox').attr('checked', this.checked);" type="checkbox"/>
                </th>
                <apex:repeat value="{!columnsShown}" var="col">
                    <th class="headerRow" colspan="1">
                        <apex:outputPanel rendered="{!NOT(col.IsEmpty)}" style="white-space: nowrap;">
                            <apex:commandLink value="{!col.Label}" action="{!changeSorting}" rerender="pb0" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
                                <apex:param name="sortExpression" assignTo="{!sortExpression}" value="{!col.sortExpression}"/>
                                <apex:param name="sortDirection" assignTo="{!sortDirection}" value="{!IF(sortExpression==col.sortExpression, sortDirection, 'DESC')}"/>
                            </apex:commandLink>
                            <apex:outputPanel rendered="{!IF(sortExpression==col.sortExpression,IF(sortDirection='ASC','true','false'),'false')}">&uarr;</apex:outputPanel>
                            <apex:outputPanel rendered="{!IF(sortExpression==col.sortExpression,IF(sortDirection='ASC','false','true'),'false')}">&darr;</apex:outputPanel>
                        </apex:outputPanel>
                    </th>
                </apex:repeat>
            </tr>
        </thead>
        <tbody>
<!--            <apex:repeat value="{!ConvertedCallLogs}" var="item" first="{!pageNumber*pageSize}" rows="{!pageSize}">-->
            <apex:repeat value="{!ConvertedCallLogs}" var="item">
                <tr class="dataRow {!IF (MOD(item.member.index, 2)==0, 'even', 'odd')} {!IF (item.member.index==0, 'first', '')}" onmouseover="if (window.hiOn){hiOn(this);}" onmouseout="if (window.hiOff){hiOff(this);}" onblur="if (window.hiOff){hiOff(this);}" onfocus="if (window.hiOn){hiOn(this);}">
					<td class="dataCell" colspan="1">
						<apex:inputCheckbox value="{!item.member.isSelected}" styleClass="selectionCheckbox" onchange=""/>
						<input type="hidden" class="selectionId" value="{!item.CastedSObject.Id}"/>
					</td>
					<!-- You should add fields here in such order as in "Mass Edit Settings" -->
					<td class="dataCell" name="Name" colspan="1" style="white-space: nowrap; display: {!IF (showColumn_Name, 'table-cell', 'none')}">
						<apex:outputField value="{!item.CastedSObject.Name}" />
					</td>
					<td class="dataCell" name="Company__c" colspan="1" style="white-space: nowrap; display: {!IF (showColumn_Company, 'table-cell', 'none')}">
						
						<apex:inputField value="{!item.CastedSObject.Company__c}" rendered="{!NOT(IsViewState)}" onchange="changeSelected(this, 'Company__c'); setModified('{!item.member.index}', 'Company__c');"/>
						<span id="changed_{!item.member.index}_Company__c" class="asteric __ast_Company__c" style="visibility: hidden;">*</span>
						<apex:outputLink value="/{!item.CastedSObject.Company__c}"><apex:outputField value="{!item.CastedSObject.Company__c}" rendered="{!IsViewState}"/></apex:outputLink>						
						<!-- 
						<apex:outputLink value="/{!item.CastedSObject.Company__c}"><apex:outputField value="{!item.CastedSObject.Company__c}" /></apex:outputLink>-->
					</td>
					<td class="dataCell" name="Contact__c" colspan="1" style="white-space: nowrap; display: {!IF (showColumn_Contact, 'table-cell', 'none')}">
						<apex:inputField value="{!item.CastedSObject.Contact__c}" rendered="{!NOT(IsViewState)}" onchange="changeSelected(this, 'Contact__c'); setModified('{!item.member.index}', 'Contact__c');"/>
						<span id="changed_{!item.member.index}_Contact__c" class="asteric __ast_Contact__c" style="visibility: hidden;">*</span>
						<apex:outputField value="{!item.CastedSObject.Contact__c}" rendered="{!IsViewState}"/>						
					</td>
					
					<td class="dataCell" name="Company__r.Type" colspan="1" style="white-space: nowrap; display: {!IF (showColumn_CompanyType, 'table-cell', 'none')}">
						<apex:outputField value="{!item.CastedSObject.Company__r.Type}" />
					</td>
				</tr>
            </apex:repeat>
        </tbody>
    </table>
    
<script>
    jQuery('input, select').focus(function() {this.oldValue = this.value; })
    jQuery.each(jQuery('input, select'), function(i, el) {
        el.origValue = el.value;
    });
    
    var table = document.getElementById('dtable'); 
    clearTable(table);
    <apex:repeat value="{!ColumnPermutation}" var="perm">
        moveColumn(table, {!perm.iFrom+1}, {!perm.iTo+1});
    </apex:repeat>
    
    var els = getElementsByClassName('dateFormat');
    for (var i=0; i < els.length; i++)
    {
		els[i].style.display = "none";
    }
    
    table.style.visibility = 'visible';
</script>
    
    
    
    
    <span style="display: inline; width: 25px;">
        <apex:commandLink value="First" action="{!voidAction}" rerender="pb0" rendered="{!IF(pageNumber==0, false, true)}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
            <apex:param name="pageNumber" assignTo="{!pageNumber}" value="0"/>
        </apex:commandLink>
        <apex:outputLabel value="First" rendered="{!IF(pageNumber==0, true, false)}"/>
    </span>
    <span style="color: #999999;">&nbsp;|&nbsp;&nbsp;</span>
     
    <span style="display: inline; width: 25px;">
        <apex:commandLink value="Prev" action="{!voidAction}" rerender="pb0" rendered="{!IF(pageNumber==0, false, true)}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
            <apex:param name="pageNumber" assignTo="{!pageNumber}" value="{!pageNumber-1}"/>
        </apex:commandLink>
        <apex:outputLabel value="Prev" rendered="{!IF(pageNumber==0, true, false)}"/>
    </span>
    <span style="color: #999999;">&nbsp;|&nbsp;&nbsp;</span> 
    
    <span style="display: inline; width: 25px;">
        <input type="text" value="{!pageNumber+1}" styleClass="pageInput" size="2" onkeypress="return onlyNumbers(event);" onblur="if ((this.value-1)!=({!pageNumber})) { startLoadingFade(); loadPage(this.value-1);}"/>
        <apex:outputLabel value=" / {!pageCount+1}"/>
    </span>
    <span style="color: #999999;">&nbsp;|&nbsp;&nbsp;</span> 
    
    <span style="display: inline; width: 25px;">
        <apex:commandLink value="Next" action="{!voidAction}" rerender="pb0" rendered="{!IF(pageNumber==pageCount, false, true)}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
            <apex:param name="pageNumber" assignTo="{!pageNumber}" value="{!pageNumber+1}"/>
        </apex:commandLink>
        <apex:outputLabel value="Next" rendered="{!IF(pageNumber==pageCount, true, false)}"/>
    </span>
    <span style="color: #999999;">&nbsp;|&nbsp;&nbsp;</span>
    
    <span style="display: inline; width: 25px;">
        <apex:commandLink value="Last" action="{!voidAction}" rerender="pb0" rendered="{!IF(pageNumber==pageCount, false, true)}" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
            <apex:param name="pageNumber" assignTo="{!pageNumber}" value="{!pageCount}"/>
        </apex:commandLink>
        <apex:outputLabel value="Last" rendered="{!IF(pageNumber==pageCount, true, false)}"/>
    </span>
    
    <apex:actionFunction name="savePageSize" action="{!doSavePageSize}" rerender="pb0" oncomplete="stopFade();" status="MCSub">
        <apex:param name="pageSize" assignTo="{!pageSize}" value=""/>
        <apex:param name="pageNumber" assignTo="{!pageNumber}" value="0"/>
    </apex:actionFunction>
</apex:pageBlock>

<apex:pageBlock id="pb1" rendered="{!inEditColumns}">
    <apex:pageBlockButtons >
        <input type="button" value="Save" class="btn search_btn"/>
        <apex:commandButton value="Cancel" action="{!voidAction}" immediate="true" rerender="f0" onclick="startLoadingFade();" oncomplete="stopFade();" status="MCSub">
            <apex:param name="inEditColumns" assignTo="{!inEditColumns}" value="false"/>
        </apex:commandButton>
    </apex:pageBlockButtons>
    
    <apex:actionFunction name="saveSelectedColumns" action="{!saveSelectedColumns}" rerender="f0" oncomplete="stopFade();" status="MCSub">
        <apex:param name="selCols" assignTo="{!selectedColumnsCallback}" value=""/>
        <apex:param name="inEditColumns" assignTo="{!inEditColumns}" value="false"/>
    </apex:actionFunction>
    
    <apex:actionFunction name="saveColumnsFilters" action="{!saveColumnsFilters}" rerender="f0" oncomplete="stopFade();" status="MCSub">
        <apex:param name="selCols" assignTo="{!cb_columns}" value=""/>
        <apex:param name="filters" assignTo="{!cb_filters}" value=""/>
        <apex:param name="advFilters" assignTo="{!cb_advFilters}" value=""/>
        <apex:param name="inEditColumns" assignTo="{!inEditColumns}" value="false"/>
    </apex:actionFunction>
    
    <table class="multiSelectPicklistTable" border="0" cellspacing="0" cellpadding="0">
        <tbody>
            <tr class="multiSelectPicklistRow">
                <td style="border:none;">
                    <span>
                        <select id="__unselected" size="15" multiple="multiple" ondblclick="doSelect(document.getElementById('__unselected'), document.getElementById('__selected'));" style="width: 200px;">
                            <apex:repeat value="{!UnselectedColumns}" var="col">
                                <option value="{!col.Value}">{!col.Label}</option>
                            </apex:repeat>
                        </select>
                    </span>
                </td>
                <td class="multiSelectPicklistCell" style="border:none;">
                    <a onclick="doSelect(document.getElementById('__unselected'), document.getElementById('__selected')); return false;" title="Add">
                        <img src="/s.gif" alt="Add" class="picklistArrowRight" id="'+id+'_right_arrow" style="cursor:pointer;" title="Add"/>
                    </a>
                    <br/><br/>
                    <a onclick="doSelect(document.getElementById('__selected'), document.getElementById('__unselected')); return false;" title="Remove">
                        <img src="/s.gif" alt="Remove" class="picklistArrowLeft" id="'+id+'_left_arrow" style="cursor:pointer;" title="Remove"/>
                    </a>
                </td>
                <td style="border:none;">
                    <span>
                        <select id="__selected" size="15" multiple="multiple" ondblclick="doSelect(document.getElementById('__selected'), document.getElementById('__unselected'));" style="width: 200px;">
                            <apex:repeat value="{!SelectColumnsOrdered}" var="col">
                                <option value="{!col.Value}">{!col.Label}</option>
                            </apex:repeat>
                        </select>
                    </span>
                </td>
                <td class="multiSelectPicklistCell" style="border:none;">
                    <a onclick="moveUp(document.getElementById('__selected')); return false;" title="Up">
                        <img src="/s.gif" alt="Add" class="upArrowIcon" id="'+id+'_up_arrow" style="cursor:pointer;" title="Up"/>
                    </a>
                    <br/><br/>
                    <a onclick="moveDown(document.getElementById('__selected')); return false;" title="Down">
                        <img src="/s.gif" alt="Remove" class="downArrowIcon" id="'+id+'_down_arrow" style="cursor:pointer;" title="Down"/>
                    </a>
                </td>
            </tr>
        </tbody>
    </table>
    
<script>
function getColumnsList(sel){
    var res = '';
    for (var i=0; i < sel.options.length; i++){
        res += ';' + sel.options[i].value;
    }
    if (res.length > 0) res = res.substring(1);
    return res;
}

function doSelect(selFrom, selTo){
    //var selFrom = document.getElementById('__unselected');
    //var selTo = document.getElementById('__selected');
    for (var ind = 0; ind < selFrom.options.length; ind++){
        if (selFrom.options[ind].selected){
            selTo.options[selTo.options.length] = new Option(selFrom.options[ind].innerHTML, selFrom.options[ind].value);
        }
    }
    for (var ind = selFrom.options.length-1; ind >= 0; ind--){
        if (selFrom.options[ind].selected){
            for (var ind2 = ind; ind2 < selFrom.options.length-1; ind2++){
                selFrom.options[ind2] = new Option(selFrom.options[ind2+1].innerHTML, selFrom.options[ind2+1].value, selFrom.options[ind2+1].selected);
            }
            selFrom.options.length -= 1;
        }
    }
}

function moveUp(sel){
    var index = -1;
    for (var i = 0; i < sel.options.length; i++){
        if (sel.options[i].selected){
            if (index==-1) index = i;
            else {
                alert('Select only one field.');
                return false;
            }
        }
    }   
    if (index > 0){
        var t = sel.options[index-1];
        sel.options[index-1] = new Option(sel.options[index].innerHTML, sel.options[index].value, sel.options[index].selected);
        sel.options[index] = t;
        sel.selectedIndex = index-1;
    }
}

function moveDown(sel){
    var index = -1;
    for (var i = 0; i < sel.options.length; i++){
        if (sel.options[i].selected){
            if (index==-1) index = i;
            else {
                alert('Select only one field.');
                return false;
            }
        }
    }   
    if (index >= 0 && index < sel.options.length-1){
        var t = sel.options[index+1];
        sel.options[index+1] = new Option(sel.options[index].innerHTML, sel.options[index].value, sel.options[index].selected);
        sel.options[index] = t;
        sel.selectedIndex = index+1;
    }
}
</script>
    
    <br/>
    Filters: 
    <apex:pageMessage severity="error" summary="Error: invalid search filter values format or filter lookup value not found or invalid Advanced filter." rendered="{!hasQueryErrors}"/>
    <apex:outputPanel id="sfFiltersPanel" style="border: none; min-height: 30px; display: block" layout="block" rendered="true">
        <div id="sf_filters" style="width:685px; margin-top:10px;" class="ui-widget-content ui-corner-all">Component Place</div>
    </apex:outputPanel>
    <script>doInitFiltering({!FiltersJSON}, '{!cb_advFilters}');</script>
</apex:pageBlock>
</apex:form>

<script>

String.prototype.trim = function() {return (this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, ""))}
String.prototype.startsWith = function(str) {return (this.match("^"+str)==str)}
String.prototype.endsWith = function(str) {return (this.match(str+"$")==str)}

function noenter() {
    return !(window.event && window.event.keyCode == 13); 
}

var multieditDialog = document.getElementById('multieditDialog');
var overlayDiv = document.createElement('div');
overlayDiv.className = "overlayBackground";
overlayDiv.style.width = "100%"; 
overlayDiv.style.height = "100%"; 
overlayDiv.style.display = "none";
overlayDiv.style.position = "fixed";
//document.body.appendChild(overlayDiv);

function fadeBody(){
    try{
        DatePicker.datePicker.hide();
    } catch (e) {}
    overlayDiv.style.display = "block";
    var datePicker = document.getElementById('datePicker');
    datePicker.style["z-index"] = "110";
}
function showBody(){
    overlayDiv.style.display = "none";
}

function fadeMultieditDialog(){
    multieditDialog.style.display = "none";
}
function showMultieditDialog(){
    multieditDialog.style.display = "block";
}

function selectCheckbox(el){
    while (el.nodeName!='TR') el = el.parentNode;
    var checks = getElementsByClassName('selectionCheckbox', el);
    for (var i=0; i < checks.length; i++){
        checks[i].checked = true;
    }
}

function isRowChecked(row){
    var checks = getElementsByClassName('selectionCheckbox', row);
    if (checks.length > 0 && checks[0].checked) return true;
    return false;
}

function getRowId(el){
    while (el.nodeName!='TR') el = el.parentNode;
    var checks = getElementsByClassName('selectionId', el);
    for (var i=0; i < checks.length; i++){
        return checks[i].value;
    }
}

function tryDoMultiedit(action, field, id, allow){
    if (allow) doMultiEdit(action, field, id);
}

function doChangeRow(row, colName, value, skipSelectLookup){
    var cells = getElementsByClassName('dataCell', row);
    for (var i=0; i < cells.length; i++){
        if (cells[i].getAttribute('name')==colName){
            setValueRec(cells[i], value, skipSelectLookup);
        }
    }
}

function setValueRec(el, value, skipSelectLookup){
    if (el.nodeName=='SELECT'){
        if (!skipSelectLookup){
            el.value = value;
        }
    } else 
    if (el.nodeName=='INPUT'){
        var name = el.getAttribute('name');
        name = name.substr(name.lastIndexOf(':')+1);
        if (   !name.endsWith('_lkid') 
            && !name.endsWith('_lkold')
            && !name.endsWith('_lktp') 
            && !name.endsWith('_lspf') 
            && !name.endsWith('_lspfsub') 
            && !name.endsWith('_mod')) el.value = value;
    } else {
        var els = el.children;
        //alert(el.getAttribute('name') + ' :: ' + colName + ' :: ' + els.length);
        for (var j=0; j < els.length; j++){
            setValueRec(els[j], value, skipSelectLookup);
        }
    }
}

var element;
var columnName;
function changeSelected(el, colName){
    element = el;
    columnName = colName;
    var value = el.value;
    var table = el;
    while (table.nodeName!='TR') table = table.parentNode;
    if (!isRowChecked(table)) return;
    while (table.nodeName!='TABLE') table = table.parentNode;
    var rows = getElementsByClassName('dataRow', table);
    var countChecked = 0;
    for (var i=0; i < rows.length; i++){
        if (isRowChecked(rows[i])){
            countChecked++;
        }
    }
    if (countChecked>1) {
        $('#yes').click(function() { 
            doChangeOnSelected(element, columnName);
            $.unblockUI(); 
            return true;
        }); 
        $('#no').click(function() { 
            $.unblockUI(); 
            return true; 
        }); 
        $('#cancel').click(function() { 
            doCancelChanges(element, columnName);
            $.unblockUI(); 
            return true; 
        });
        
        $.blockUI({   message: $('#question')
                     ,css: {
                             'width': '350px',
                             'height': '90px',
                             'background-color': '#ffffff',
                             'border': 'none',
                             'padding-left': '25px',
                             'padding-right': '25px',
                             'padding-top': '20px',
                             'padding-bottom': '10px',
                             '-webkit-border-radius': '4px',
                             '-moz-border-radius': '4px',
                             'cursor': 'default'
                                                          
                           }
                  });
         
    }
}

function doCancelChanges(el, colName){
    el.value = el.oldValue;
    var row = el;
    while (row.nodeName!='TR') row = row.parentNode;
    doUnAstericColumn(el, row, colName);
}

function doChangeOnSelected(el, colName){
    var value = el.value;
    var table = el;
    while (table.nodeName!='TR') table = table.parentNode;
    if (!isRowChecked(table)) return;
    while (table.nodeName!='TABLE') table = table.parentNode;
    var rows = getElementsByClassName('dataRow', table);
    for (var i=0; i < rows.length; i++){
        if (isRowChecked(rows[i])){
            doChangeRow(rows[i], colName, value, false);
            doAstericColumn(rows[i], colName);
        }
    }
    if (el.nodeName=='SELECT' && el.getAttribute('name').endsWith('_lkid')) {
        value = el.options[el.selectedIndex].innerText;
        var table = el;
        while (table.nodeName!='TABLE') table = table.parentNode;
        var rows = getElementsByClassName('dataRow', table);
        for (var i=0; i < rows.length; i++){
            if (isRowChecked(rows[i])){
                doChangeRow(rows[i], colName, value, true);
            }
        }
    }
}

function setModified(nrow, col){
    //alert('changed_'+row+'_'+col);
    var row = document.getElementById('changed_'+nrow+'_'+col);
    while (row.nodeName != 'TR') row = row.parentNode;
    doAstericColumn(row, col);
    //span.style.visibility = 'visible';
}

function doAstericColumn(row, col){
    var span = getElementsByClassName('__ast_' + col, row)[0];
    span.style.visibility = 'visible';
    jQuery('.saveNoteSpan').css('display', 'inline');
}

function doUnAstericColumn(el, row, col){
    if (el.origValue==el.value){
        var span = getElementsByClassName('__ast_' + col, row)[0];
        span.style.visibility = 'hidden';
    }
}

function startLoadingFade(){
/*
    $.blockUI({   message: $('#fadeLoading')
                     ,css: {
                             'width': '350px',
                             'height': '90px',
                             'background-color': '#ffffff',
                             'border': 'none',
                             'padding-left': '25px',
                             'padding-right': '25px',
                             'padding-top': '20px',
                             'padding-bottom': '10px',
                             '-webkit-border-radius': '4px',
                             '-moz-border-radius': '4px',
                             'cursor': 'default'
                                                          
                           }
                  });
*/ 
}

function startSavingFade(){
/*
    $.blockUI({   message: $('#fadeSave')
                     ,css: {
                             'width': '350px',
                             'height': '90px',
                             'background-color': '#ffffff',
                             'border': 'none',
                             'padding-left': '25px',
                             'padding-right': '25px',
                             'padding-top': '20px',
                             'padding-bottom': '10px',
                             '-webkit-border-radius': '4px',
                             '-moz-border-radius': '4px',
                             'cursor': 'default'
                                                          
                           }
                  }); 
*/
}

function stopFade(){
    /*$.unblockUI();*/ 
}

function initFilterWidget(p_event, p_target, filters, advFilters) {
    var location = "/apex/SL_LIB16_MassEdit_JSON?event=" + p_event + "&target=" + p_target;
    $("#sf_filters").html("Loading. Please wait...");
    $("#sf_filters").sfFilters({
        debug : false,
        sourceFieldData: location,
        source : location,
        lookupURL : "/apex/SL_LIB16_MassEdit_FilterLookup",
        lookupAddClass : "filter",
        calcMargin : function(width) {
            var res = (width == 0)? 390 : width-160;
            if ($.browser.msie && $.browser.version=="7.0") res /= 2;
            return res;
        },
        goalTargetID: p_target,
        firstFilter : false,
        safeValue : true,
        change : function(event, widget) {},
        load : function(p_widget) {
            p_widget.Load();
            //p_widget.options.filterset = filters;
        },
        afterload : function(p_widget) {
            try {
                //
                //alert(123);
                p_widget.AdvancedFilter(advFilters);    
                p_widget.options.filterset = filters;           
            } catch(err) {}
        }
    });
}



function doInitFiltering(filters, advFilters){
    var target = 'Company_List_Member__c';
    var event = 'load';
    initFilterWidget(event, target, filters, advFilters);
        
    $('.search_btn').button();
    $('.search_btn').bind("click", function(event){
        startSavingFade(); 
            
        re = /\|/gi;
        var events = $("#sf_filters").sfFilters("Serialize").replace(re, "___");;
        var advanced = $("#sf_filters").sfFilters("AdvancedFilter");
        var columns = getColumnsList(document.getElementById('__selected'));
        saveColumnsFilters(columns, events, advanced);
        event.preventDefault();
        event.stopImmediatePropagation();
    });
}
  
(function($) {
    $(document).ready(function() {
        //doInitFiltering([{ name: "Company__c", operator: "equals", value: "Acxiom Corporation"}], '1');
    })
})(jQuery);
</script>

<div id="question" style="display:none; cursor: default; " > 
    <br/>
    <h1 style="font-size: 15px;">Apply changes to:</h1> 
    <br/><br/>
    <input type="button" id="yes" value="All selected records" class="btn" style="min-width: 50px;"/> 
    &nbsp;&nbsp;&nbsp;&nbsp;
    <input type="button" id="no" value="The record clicked" class="btn" style="min-width: 50px;"/>
    &nbsp;&nbsp;&nbsp;&nbsp;
    <input type="button" id="cancel" value="Cancel" class="btn" style="min-width: 50px;"/>
</div>

<div id="fadeLoading" style="display:none; cursor: default; " > 
    <br/>
    <img src="/img/loading.gif" width="20px;" height="20px;"/><h1 style="font-size: 30px;">&nbsp;Loading</h1> 
    <br/>
</div> 

<div id="fadeSave" style="display:none; cursor: default; " > 
    <br/>
    <img src="/img/loading.gif" width="20px;" height="20px;"/><h1 style="font-size: 30px;">&nbsp;Saving</h1> 
    <br/>
</div> 
  
<apex:actionstatus id="MCSub" startText="Processing......">
        <apex:facet name="start">
            <div id="salesforceSource_blurybackground" style="position:absolute; left:1px; top:1px; width:1600px; height:100%; text-align:center; vertical-align: middle; background-color: #dcdcdc; opacity:0.6;filter:alpha(opacity=60)"></div>
            <div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 80%; display: ''; ">
                <div style="width: 144px;vertical-align: middle;" class="waitingHolder">
                <table align="center" valign="top" style="width: 100%; height: 30%">
                <tr align="center" valign="top" style="width: 100%; height: 30%">
                    <td valign="top"><img class="waitingImage" src="/img/loading.gif"/><span class="waitingDescription">Processing......</span></td>
                </tr>
                </table>
                </div>
            </div>
            <div id="ManageMembersViewport_loading" class="waitingSearchDiv" style="width: 100%; height: 100%; display: ''; "/>
            <script>
                document.getElementById('salesforceSource_blurybackground').style.width = (document.body.clientWidth-2)+'px';
                document.getElementById('ManageMembersViewport_loading').height = window.innerHeight * (3/4);
            </script>
        </apex:facet>
        <apex:facet name="stop"></apex:facet>
</apex:actionstatus>
</apex:page>