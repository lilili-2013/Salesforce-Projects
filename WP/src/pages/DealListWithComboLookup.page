<apex:page sidebar="true"  showHeader="true" controller="DealListController" >
    <apex:stylesheet value="{!$Resource.wp_base_css}" />
    
<apex:includeScript value="{!URLFOR($Resource.JQuery_full, 'jquery-ui-1.9.2.custom/js/jquery-1.8.3.js')}"  />
<apex:includeScript value="{!URLFOR($Resource.JQuery_full, 'jquery-ui-1.9.2.custom/js/jquery-ui-1.9.2.custom.min.js')}"  />
<apex:stylesheet value="{!URLFOR($Resource.JQuery_full, 'jquery-ui-1.9.2.custom/css/smoothness/jquery-ui-1.9.2.custom.min.css')}"  />

<apex:includeScript value="{!URLFOR($Resource.Bootstrap, 'bootstrap/js/bootstrap.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.Bootstrap, 'bootstrap/js/bootstrap.min.js')}"/>
    
    
   
<apex:form >  
<script>
var dictMasterDeals = new Array();
var dictMasterCos = new Array();
var iCtrackerLinkNotes =0;
var iMaxC=512;
var bDealTeamBasedQuery= '{!SearchByDealNameText}'=='' ? true : false;
function say(s) {   var q = document.getElementById('sayText');q.value=s+'\r'+q.value;}function showlog() { var d = document.getElementById('logarea'); if (d.style.display=="inline") d.style.display="none";     else      d.style.display="inline";  }
function showCollapsedNote(elt){ var sId=elt.alt; elt.style.display="none"; var dN = ge('txtoeN_' + sId); dN.style.display="inline"; return false;}
function funcGoToHit(s) {

    var arHit=s.split(":");
    if (arHit.length==2) {
    var s1=arHit[0]; var s2=arHit[1];
    if (s1=="deallistbyemp") parent.document.location.href="/apex/DealList?emp="+s2;
    else if (s1=="gotocompany") parent.document.location.href="/"+s2;
    else if (s1=="gotodeal") parent.document.location.href="/"+s2;
    else if (s1=="searchalldealsbyname") parent.document.location.href="/apex/DealList?dealname="+s2;
    else if (s1=="searchall") parent.document.location.href="/_ui/common/search/client/ui/UnifiedSearchResults?searchType=2&sen=a0f&sen=a0e&sen=00O&sen=a0Q&sen=a06&sen=005&sen=001&sen=003&str=" + s2 + "&cache=hbw9ayv8";
    else if (s1=="createdeal") parent.document.location.href="/setup/ui/recordtypeselect.jsp?ent=01IE0000000B0eR&retURL=%2Fa06%2Fo&save_new_url=%2Fa06%2Fe%3FretURL%3D%252Fa06%252Fo";
    else if (s1=="createcompany") parent.document.location.href="/setup/ui/recordtypeselect.jsp?ent=Account&retURL=%2F001%2Fo&save_new_url=%2F001%2Fe%3FretURL%3D%252F001%252Fo";
    else if (s1=="createcontact") parent.document.location.href="/setup/ui/recordtypeselect.jsp?ent=Contact&retURL=%2Fsetup%2Fui%2Frecordtypeselect.jsp%3Fent%3DAccount%26retURL%3D%252F001%252Fo%26save_new_url%3D%252F001%252Fe%253FretURL%253D%25252F001%25252Fo&save_new_url=%2F003%2Fe%3FretURL%3D%252Fsetup%252Fui%252Frecordtypeselect.jsp%253Fent%253DAccount%2526retURL%253D%25252F001%25252Fo%2526save_new_url%253D%25252F001%25252Fe%25253FretURL%25253D%2525252F001%2525252Fo";
    
    }
}

function funcGoToSearch(sFilterText){
try {
var recordsX = new Object();
var iRx=5;
    recordsX[0]= { Id:"createdeal:",ShowName:"Create new Deal..."};
    recordsX[1]= { Id:"createcompany:",ShowName:"Create new Company..."};
    recordsX[2]= { Id:"createcontact:",ShowName:"Create new Contact..."};
    recordsX[3]=  { Id:"searchall:"+ sFilterText,ShowName:"Search all matching '" + sFilterText + "'"};
    recordsX[4]=  { Id:"searchalldealsbyname:" + sFilterText,ShowName:"Search all deals matching '" + sFilterText + "'"};
 
    // show all deals for emp
    var sQ = "Select c.Status__c, c.Id, c.WP_Group__c, c.Title, c.Name, c.LastName, c.Initials__c, c.FirstName From Contact c where c.Name like '%" + sFilterText + "%' and  c.RecordType.Name = 'Employee' order by status__c, c.EMG_Member__c desc,  lastname asc";
    var result = sforce.connection.query(sQ);
    var recordsO = result.getArray("records"); 
  
    if (recordsO.length!=0)     {
        recordsX[iRx]= { Id:'label:'+iRx,ShowName:"————————————————————————————————————————————————" }; iRx++;
    for(var iR =0; iR < recordsO.length; iR++,iRx++) {
        var rec = recordsO[iR]; var sTx=rec.Name + " ["  + rec.Status__c; if (rec.Title != null) sTx = sTx + ", " + rec.Title ;  if (rec.WP_Group__c != null) sTx = sTx + ", " + rec.WP_Group__c ;  sTx = sTx + "]";
        recordsX[iRx]= { Id:'deallistbyemp:'+recordsO[iR].Id,ShowName:"Deal list for " + sTx };
        }
    }
  
  // go-to-deal options
  sQ = "Select d.Date_Received__c, d.WP_Groups__c, d.Stage__c, d.Sector__c, d.RecordType.Name, d.Name, d.Id, d.Expense_Code__c, d.Dead_Deal_Reason__c, d.Company__r.Name, d.Company__r.Id, d.Company__c From Deal__c d where d.Name like '%" + sFilterText + "%' order by d.Name";
  result = sforce.connection.query(sQ);
  recordsO = result.getArray("records"); 
  if (recordsO.length!=0)     {
      recordsX[iRx]= { Id:'label:'+iRx,ShowName:"————————————————————————————————————————————————" }; iRx++;
  
      for(var iR =0; iR < recordsO.length; iR++,iRx++){ 
          var dq = recordsO[iR];
          
          var sT= dq.Name + " [" + dq.Expense_Code__c + ", " + (dq.Dead_Deal_Reason__c == null ? "" : "Dead, ")  + dq.Stage__c + ", " + dq.RecordType.Name + ", " 
              + autoTableFormatPerConfig(dq.Date_Received__c,'SHORTDATEFROMSTRING2') + "]";
          recordsX[iRx]= { Id:'gotodeal:'+recordsO[iR].Id,ShowName:"Deal " + sT};
      }
  }


  // go-to-company options
  sQ = "Select c.Id, c.Name, c.RecordType.Name from Account c where c.Name like '%" + sFilterText + "%' order by c.Name";
  result = sforce.connection.query(sQ);
  recordsO = result.getArray("records"); 
  if (recordsO.length!=0)     {
      recordsX[iRx]= { Id:'label:'+iRx,ShowName:"————————————————————————————————————————————————" }; iRx++;
  
      for(var iR =0; iR < recordsO.length; iR++,iRx++){ 
          var dq = recordsO[iR];
          
          var sT= dq.Name + " [" + dq.RecordType.Name + "]"; 
          recordsX[iRx]= { Id:'gotocompany:'+recordsO[iR].Id,ShowName:"Company " + sT};
      }
  }


    sQ = "Select c.Phone, c.Email, c.Status__c, c.Id, c.Title, c.Name, c.LastName, c.Account.Name, c.Initials__c, c.FirstName From Contact c where c.Name like '%" + sFilterText + "%' and  c.RecordType.Name != 'Employee' order by lastname asc";
   
    result = sforce.connection.query(sQ);
    recordsO = result.getArray("records"); 
  
    if (recordsO.length!=0)     {
        recordsX[iRx]= { Id:'label:'+iRx,ShowName:"————————————————————————————————————————————————" }; iRx++;
    for(var iR =0; iR < recordsO.length; iR++,iRx++) {
        
        
        var rec = recordsO[iR]; 
        var sTx = rec.Name + " [";
        if (rec.Title != null) sTx = sTx + rec.Title;
        
        if (rec.Account!=null) sTx=sTx+ ", " + rec.Account.Name ;
        if (rec.Phone!=null) sTx=sTx+ ", " + rec.Phone ;
        if (rec.Email!=null) sTx=sTx+ ", " + rec.Email ;
         sTx = sTx + "]";
        
        recordsX[iRx]= { Id:'gotocontact:'+rec.Id,ShowName:"Contact " + sTx };
        
        
        }
    }


  recordsX.length=iRx;
  return recordsX;
}
catch (err) {alert("Error with goto query:" + err); } return null;
}











function funcCell( AutoTableConfig, tblCell,fldCfgs,thisFieldID,rc) {
var dX = bDealTeamBasedQuery ? rc.Deal__r : rc;
//alert('cell' + dX);
tblCell.vAlign="top"; 
var fldCfg = fldCfgs[thisFieldID];

if (fldCfg.ColName == "Key Dates / Next Steps")  tblCell.innerHTML=dX.Key_Dates_Next_Steps__c != null ? dX.Key_Dates_Next_Steps__c : "&nbsp;";

if (fldCfg.ColName=="Status") {
    if (dictMasterDeals[dX.Id]!=null) {
        var dl = dictMasterDeals[dX.Id];
       var sC = "Unspecified";
       if (dl.Stage__c != null) sC = dl.Stage__c;
    var sDt=""; var recs = dl.Histories;
    if (recs!=null)  {
     for(var iC =0; iC < recs.size; iC ++) {
        var rec =  (recs.size == "1" ?  recs.records : recs.records[iC] );
        if (sDt=="" && rec!=null && rec.Field !=null && (rec.Field == "Stage__c" ||rec.Field == "created" )) sDt = rec.CreatedDate;                 
        }
    }
    if (sDt!="") { sDt = autoTableFormatPerConfig(sDt,'SHORTDATEFROMSTRING2');
    if (dl.Dead_Deal_Reason__c==null)
    sC = sC + "<br/>("+sDt + ")";
    var recsTeam = dl.Deal_Team__r;
    var sTeam="";
    if (recsTeam!=null)  {
        sTeam = "";
     for(var iC =0; iC < recsTeam.size; iC ++) {
        var rec =  (recsTeam.size == "1" ?  recsTeam.records : recsTeam.records[iC] );
        if (rec!=null && rec.Employee__r!=null && rec.Employee__r.Initials__c != null) 
        {
        if (sTeam != "") sTeam = sTeam + ", ";
        sTeam = sTeam + rec.Employee__r.Initials__c;
        }
        }
    if (sTeam != "") sC = sC + "<br/><br/>" + "(" + sTeam + ")";
    }
    }    
    tblCell.innerHTML= (sC == "" ? "&nbsp" : sC);
    }

}
/*
if (fldCfg.ColName=="EMG Comment") {
    if (dictMasterDeals[dX.Id]!=null) {
        var dl = dictMasterDeals[dX.Id];
        var sC = ""; var sCWhoAndWhen="";
        
        if (dl.EMG_Paragraphs__r!=null) {
        var recs = dl.EMG_Paragraphs__r;
        for(var iC =0; iC < recs.size; iC ++) {
            var rec =  (recs.size == "1" ?  recs.records : recs.records[iC] );
                    if (sC=="" && rec.EMG_Paragraph__c!=null) 
                    { 
                    sC = rec.EMG_Paragraph__c;                    
                    sCWhoAndWhen = autoTableFormatPerConfig(rec.EMG_Last_Updated_Date__c,'SHORTDATEFROMSTRING2'); 
                    sCWhoAndWhen = "<br/><br/>(<b>" + sCWhoAndWhen + "</b>";
                    if (rec.EMG_Updated_on_behalf_of__r !=null && rec.EMG_Updated_on_behalf_of__r.Name)
                        sCWhoAndWhen = sCWhoAndWhen + " - " + rec.EMG_Updated_on_behalf_of__r.Name + ")";
                    else if (rec.EMG_Last_Updated_By__r !=null && rec.EMG_Last_Updated_By__r.Name)                
                        sCWhoAndWhen = sCWhoAndWhen + " - " + rec.EMG_Last_Updated_By__r.Name + ")";
                    else  sCWhoAndWhen = sCWhoAndWhen+ ")"; 
                    }
                }
            if (sC.length>iMaxC) addElipse(tblCell,sC,iMaxC,iCtrackerLinkNotes++); else tblCell.innerHTML= sC;
            if (dl.Dead_Deal_Reason__c!=null)
            {
            var txtDd = document.createElement("text");txtDd.innerHTML="<br/><br/><b>Dead deal reason:</b> " + dl.Dead_Deal_Reason__c;
            if (dl.Dead_Deal_Notes__c!=null) txtDd.innerHTML += "; &nbsp;" + dl.Dead_Deal_Notes__c;
            tblCell.appendChild(txtDd);
            
            
            }
            
            var txtD = document.createElement("text");txtD.innerHTML=sCWhoAndWhen;
            tblCell.appendChild(txtD);
           }
           else tblCell.innerHTML="&nbsp;";
        }
    }
*/
if (fldCfg.ColName=="Deal Name") {
    if (dictMasterDeals[dX.Id]!=null) {
        var dl = dictMasterDeals[dX.Id];


    var arl = document.createElement("a"); var s = "unspecified";
    try { s=dl.Name; } catch (err) { s="unspecified"; } arl.innerHTML =s; arl.href= "/" + dl.Id;
    var sT = arl.outerHTML;
    if (dl.Description__c!=null )sT = sT + "<br/><br/>" + dl.Description__c;
    if (dl.Sector__c!=null )sT = sT + "<br/><br/>" + dl.Sector__c;
    tblCell.innerHTML = sT;
    }
     }
}



function addElipse(tblCell,sC,iMaxC,iCtrackerLinkNotes)
{
   tblCell.innerHTML=sC.substring(0,iMaxC);
    var lnk = document.createElement("span");
    lnk.innerHTML="&nbsp;<u>[...]</u>";
    lnk.id="lnknote_"+iCtrackerLinkNotes;
    lnk.alt=iCtrackerLinkNotes;
    lnk.onclick=function(e) { showCollapsedNote(this);}
    lnk.title = "[...]" + sC.substring(iMaxC-1);
    tblCell.appendChild(lnk);
    var txtN = document.createElement("text"); txtN.innerHTML = sC.substring(iMaxC);txtN.id="txtoeN_"+iCtrackerLinkNotes;
    txtN.style.display="none";
    tblCell.appendChild(txtN);     
}

function queryDealsForDictionaryWithIds(sChk) {
      // now query all deals in the chunk; have to do histories seperate - SOQL bug w/full query only returns deals that have histories
      //d.Remaining_WP_Commitment__c, 
//      var sDLQbase=" Select d.Year_Ended__c, d.WP_Ownership__c, d.WP_Investment__c, d.WP_Investment_MM__c, d.WP_Groups__c, d.Type__c, d.Stage__c, d.Sector__c, d.Records_Management_Date__c, d.RecordType.Name, d.RecordTypeId, d.Project_Name__c, d.Period_Type__c, d.Period_Ended__c, d.Name, d.Key_Dates_Next_Steps__c, d.Include_In_Group_Report__c, d.Id, d.Highlight_In_Group_Report__c, d.Geographies__c, d.GUID__c, d.Expense_Code__c, d.Description__c, d.Deal_Team_Initials__c, d.Deal_Source_Contact__r.Initials__c, d.Deal_Source_Contact__r.WP_Group__c, d.Deal_Source_Contact__r.User_ID__c, d.Deal_Source_Contact__r.Description, d.Deal_Source_Contact__r.Title, d.Deal_Source_Contact__r.Email, d.Deal_Source_Contact__r.MobilePhone, d.Deal_Source_Contact__r.RecordTypeId, d.Deal_Source_Contact__r.FirstName, d.Deal_Source_Contact__r.LastName, d.Deal_Source_Contact__r.Id, d.Deal_Source_Contact__c, d.Deal_Folder__c, d.Dead_Deal_Reason__c, d.Dead_Deal_Notes__c, d.Dead_Deal_Date__c, d.Date_Received__c, d.CreatedDate, d.Company__r.Name, d.Company__r.Id, d.Company__c, d.Circulate_to_EMG__c, (Select CreatedDate, LastModifiedDate, SystemModstamp, EMG_Paragraph__c, EMG_Last_Updated_By__r.Name, EMG_Category__c, EMG_Updated_on_behalf_of__r.Name, Last_Paragraph_History_Update__c, EMG_Last_Updated_Date__c, EMG_Paragraph_NEW__c From EMG_Paragraphs__r  order by EMG_Last_Updated_Date__c desc), (Select EMG_Paragraph__c, EMG_Last_Updated_By_Contact__r.Name,EMG_Last_Updated_By_Contact__r.Initials__c, EMG_Last_Updated_Date__c From EMG_Paragraph_History__r), (Select Employee__r.Initials__c, Employee__r.FirstName, Employee__r.LastName, Employee__r.Name, Role__c From Deal_Team__r) From Deal__c d";
////      var sDLQbase=" Select d.WP_Groups__c, d.Type__c, d.Stage__c, d.Sector__c, d.RecordType.Name, d.RecordTypeId, d.Project_Name__c, d.Period_Type__c, d.Period_Ended__c, d.Name, d.Key_Dates_Next_Steps__c, d.Include_In_Group_Report__c, d.Id, d.Highlight_In_Group_Report__c, d.Geographies__c, d.GUID__c, d.Expense_Code__c, d.Description__c, d.Deal_Team_Initials__c, d.Deal_Folder__c, d.Dead_Deal_Reason__c, d.Dead_Deal_Notes__c, d.Dead_Deal_Date__c, d.Date_Received__c, d.CreatedDate, d.Company__r.Name, d.Company__r.Id, d.Company__c, d.Circulate_to_EMG__c, (Select CreatedDate, LastModifiedDate, SystemModstamp, EMG_Paragraph__c, EMG_Last_Updated_By__r.Name, EMG_Category__c, EMG_Updated_on_behalf_of__r.Name, Last_Paragraph_History_Update__c, EMG_Last_Updated_Date__c, EMG_Paragraph_NEW__c From EMG_Paragraphs__r  order by EMG_Last_Updated_Date__c desc), (Select EMG_Paragraph__c, EMG_Last_Updated_By_Contact__r.Name,EMG_Last_Updated_By_Contact__r.Initials__c, EMG_Last_Updated_Date__c From EMG_Paragraph_History__r), (Select Employee__r.Initials__c, Employee__r.FirstName, Employee__r.LastName, Employee__r.Name, Role__c From Deal_Team__r) From Deal__c d";
      var sDLQbase=" Select d.WP_Groups__c, d.Type__c, d.Stage__c, d.Sector__c, d.RecordType.Name, d.RecordTypeId, d.Project_Name__c, d.Period_Type__c, d.Period_Ended__c, d.Name, d.Key_Dates_Next_Steps__c, d.Include_In_Group_Report__c, d.Id, d.Highlight_In_Group_Report__c, d.Geographies__c, d.GUID__c, d.Expense_Code__c, d.Description__c, d.Deal_Team_Initials__c, d.Deal_Folder__c, d.Dead_Deal_Reason__c, d.Dead_Deal_Notes__c, d.Dead_Deal_Date__c, d.Date_Received__c, d.CreatedDate, d.Company__r.Name, d.Company__r.Id, d.Company__c, (Select Employee__r.Initials__c, Employee__r.FirstName, Employee__r.LastName, Employee__r.Name, Role__c From Deal_Team__r) From Deal__c d";
      var sQ = sDLQbase + " where d.Id in (" + sChk + ")";//= '" + dId + "'";
      var result = sforce.connection.query(sQ);  var records = result.getArray("records");
      for (var iQ=0; iQ< records.length; iQ++)  { var dl = records[iQ];  dictMasterDeals[dl.Id]=dl; }       
      var sQHist=" Select d.Id, (Select Field, CreatedDate From Histories order by CreatedDate desc)  From Deal__c d where d.Id in (" + sChk + ")";
      result = sforce.connection.query(sQHist);  records = result.getArray("records"); 
      for (var iQ2=0; iQ2< records.length; iQ2++)  { var dl = records[iQ2]; if (dictMasterDeals[dl.Id]!=null && dl.Histories!=null  )  dictMasterDeals[dl.Id].Histories=dl.Histories; } 
}

function funcTStart( AutoTableConfig, htmlTable,fldCfgs,records){
    var sId="";
  // gather deal records into  master dictionaries
  var dictNewDeals = new Array(); var dictNewCos = new Array(); var listNewDeals = new Array(); var iNDx=0;
  if (records.length!=0) {  
  var dictDealChunks = new Array(); var iChunkDealCnt=0; var iChunkCnt=0; var sChunk="";
  for(var iR =0; iR < records.length; iR++) {
        var deal = bDealTeamBasedQuery ?  records[iR].Deal__r : records[iR];
        // initialize dictionary of deals
        if (deal.Id!=null && dictMasterDeals[deal.Id]==null && dictNewDeals[deal.Id]==null ) {
               dictNewDeals[deal.Id]=deal.Id; listNewDeals[iNDx]=deal.Id; var qx = listNewDeals[iNDx]; iNDx=iNDx+1;
             }
        if (deal.Company__r!=null && deal.Company__r.Id!=null && dictMasterCos[deal.Company__r.Id]==null && dictNewCos[deal.Company__r.Id]==null  ) { 
            dictNewCos[deal.Id]=deal.Company__r.Id;            
          }
        if (iChunkDealCnt<5) { if (sChunk != "") sChunk = sChunk + ",";  sChunk = sChunk + "'" + deal.Id + "'"; }
        else { iChunkDealCnt=0; dictDealChunks[iChunkCnt]=sChunk; iChunkCnt=iChunkCnt+1; sChunk = "'" + deal.Id + "'"; }
        iChunkDealCnt=iChunkDealCnt+1;
    }
  if (sChunk!="") { dictDealChunks[iChunkCnt]=sChunk;  iChunkCnt=iChunkCnt+1; }  
  for(var iCk =0; iCk < iChunkCnt; iCk++) {
      var sChk = dictDealChunks[iCk];
      queryDealsForDictionaryWithIds(sChk);
      }
    }
}  

function fBaseSOQL(sDealTypes, bIncludeExited,bIncludeDead)
    {     
    var sByDealName = '{!SearchByDealNameText}';
    var sEmp  = '{!EmpSearchId}';  if (sEmp!='') sEmp = " and d.Employee__r.Id = '" + sEmp + "'";
    var sQ = "";
    var sExited = bIncludeExited ? "" : " and d.Stage__c != 'Deal Exited Portfolio' ";
    var sDead= bIncludeDead ? "!=" : "=";
    if (sByDealName!='')
    {
        sQ = "Select d.Company__r.Id,  " + 
          " d.Dead_Deal_Reason__c, d.Stage__c, d.Description__c, d.Key_Dates_Next_Steps__c, d.RecordType.Name, d.Name, d.Id,  " + 
          " d.Sector__c, d.WP_Groups__c " + 
          " From Deal__c d  where d.Dead_Deal_Reason__c " + sDead + " '' and d.RecordType.Name in (" + sDealTypes + ") " + sExited + "  and d.Name like '%" + sByDealName + "%' order by d.Name" ;         
    }
    else // must be for user or for other employee
    {
    var sExited = bIncludeExited ? "" : " and d.Deal__r.Stage__c != 'Deal Exited Portfolio' ";
    sQ =  "Select d.Deal__r.Company__r.Id,  " + 
          " d.Deal__r.Dead_Deal_Reason__c, d.Deal__r.Stage__c, d.Deal__r.Description__c, d.Deal__r.Key_Dates_Next_Steps__c, d.Deal__r.RecordType.Name, d.Deal__r.Name, d.Deal__r.Id, d.Deal__c , " + 
          " Deal__r.Sector__c, Deal__r.WP_Groups__c " + 
          " From Deal_Team__c d  where d.Deal__r.Dead_Deal_Reason__c " + sDead + " '' and d.Deal__r.RecordType.Name in (" + sDealTypes + ") " + sExited + " " ;         
         var sUser = " and d.Employee__r.User_ID__c = '{!UserId}'";//005E0000001r27g'";
         if (sEmp != '')  sQ= sQ + sEmp; else  sQ = sQ + sUser;
         sQ += " order by d.Deal__r.Name";
    }
    
    return sQ;
 }

function fDeadDealsSOQL () { 
//return "Select d.Parent.Name, d.ParentId, d.OldValue, d.NewValue, d.Field, d.CreatedDate From Deal__History d where d.Field = 'Dead_Deal_Reason__c' and d.ParentId in (Select d.Deal__c From Deal_Team__c d where d.Deal__r.Dead_Deal_Reason__c != '' and d.Employee__r.Id = '003E000000TYzamIAD')";
return fBaseSOQL("'Portfolio Company','Platform Deal','Addon Deal'", false, true);  
}

function fPortfolioSOQL() { return fBaseSOQL("'Portfolio Company'", false, false);  }
function fActiveDealsSOQL () { return fBaseSOQL("'Platform Deal','Addon Deal'", false, false);  }
function funcColHeader(atCfg,tblCell,fldCfg,iC) { 
    if (iC==0) { tblCell.parentNode.className="headerRow"; tblCell.style.width="30%";  } else if (iC==1) tblCell.style.width="40%"; else if (iC==2) tblCell.style.width="20%"; else if (iC==3) tblCell.style.width="10%";
 }
function funcShowDead(cbX)
{
var s= parent.document.location.href;
s =s.replace('showdead=true','');
s = s.replace('showdead=false','');
s = s+'&showdead=' +( cbX.checked ? 'true' : 'false');
//alert(s);
parent.document.location.href=s;
}
   $j = jQuery.noConflict();
   $j(document).ready(function() {
   



        $j( document ).tooltip();


   
   $j("#txtProfessional").val( "{!DealListDescription}");
        
 $j("#txtProfessional").autocomplete({
 
    select: function(event, ui) { parent.document.location.href="/apex/DealList?emp="+ui.item.value;},
    focus: function(event, ui) { $("#txtProfessional").val(ui.item.label); return false; } ,
    source: function(request, response) {
            var sT = $j("#txtProfessional").val();
            var s = '{!$Page.DealListDropSearchResults}?dropsearch=' + sT;
                $j.ajax({
                    url: s,
                    data: { 'core.apexpages.devmode.url' : '1' },
                    dataType: "json",
                    success : function(data) {
                        response($j.map(data, function(item) { 
                        return { label : item.label, value : item.value} }));
                    } 
                });
            }       
       });
   });
  </script>
  
  <div id="logarea" style="display: none; border: 1px solid black;">
       <textarea id="sayText" rows="3" style="font-size: xx-small;" cols="90"></textarea>
       messages:<br />
       <apex:messages /> <br />
       <br />
       </div> 
       <div><br/>
       
       <br/><br/>
       
       <table width="100%" border="0">
       <tr><td>
              <h1>Professional:</h1>&nbsp;&nbsp;<input style="height:17px;width:200px;" type="text" id="txtProfessional" name="txtProfessional" class="blk" />
              
        <c:combolookup rendered="false" pasteSelectedToSearchText="false" defaultSelectedItem="6" minKeyStrokes="3" hotkey="q"
          PromptStyleText="font-weight:bold;" outputfields="ShowName" prompt="Go To:" promptwidth="45" textwidth="200"
          funcQuery="funcGoToSearch" cluID="zip" clearBoxAfterSelect="true" javascriptCallbackFunction="funcGoToHit" includeAddNewOption="false"
          promptTextAlign="right" />
          </td><td width="25%" align="right"><h1>Show Dead Deals?</h1>&nbsp;</td><td align="left"><input type="checkbox"  id="cbShowDead" onclick="funcShowDead(this)"   ></input>
            </td></tr></table>
      </div>
       <br/>
       
       <div class="bRelatedList">
       <div class="hotListElement">
      <div class="bPageBlock brandSecondaryBrd secondaryPalette"> 
      <div > <h1>Portfolio Deals</h1></div>
      <div id="dvPortfDeals" class="pbBody" ><i>working...</i>
<!--      
      <c:autotable BusyText="working..." TableClassName="list"  DefaultCellClass="dataCell" showColumnHeaders="true" TblID="atPrt" IncludeDeleteColumn="false"    funcDeleteRow="null"
                        funcNameCellComplete="funcCell"  funcNameColHeaderComplete="funcColHeader"   funcNameRowComplete="null"
                        funcNameTableComplete="null" funcNameTableStarting="funcTStart"   ContainingDiv="dvPortfDeals"
                        FieldConfig="Deal Name::::#EMG Comment::::#Key Dates / Next Steps::::#Status::::#"
                        FuncRetrieveSOQLQuery="fPortfolioSOQL"></c:autotable>
-->
</div>
</div>
</div>
</div>


       <br/><br/>

   
   
   
      
       <div class="bRelatedList">
       <div class="hotListElement">
      <div class="bPageBlock brandSecondaryBrd secondaryPalette"> 
      <div><h1>In Review</h1></div>                        
      <div id="dvNewDeals" class="pbBody" > <i>working...</i>
<!--
        <c:autotable BusyText="working..."  TableClassName="list" DefaultCellClass="dataCell" showColumnHeaders="true"    TblID="atNew" IncludeDeleteColumn="false"    funcDeleteRow="null"
                        funcNameCellComplete="funcCell"  funcNameColHeaderComplete="funcColHeader"   funcNameRowComplete="null"
                        funcNameTableComplete="null" funcNameTableStarting="funcTStart"   ContainingDiv="dvNewDeals"
                        FieldConfig="Deal Name::::#EMG Comment::::#Key Dates / Next Steps::::#Status::::#"
                        FuncRetrieveSOQLQuery="fActiveDealsSOQL"></c:autotable>
-->
      </div>
    </div>
    </div>
    </div>
   
   

  <br/><br/>
  
  
    <apex:outputPanel rendered="{!ShowDead}">
       <div class="bRelatedList">
       <div class="hotListElement">
      <div class="bPageBlock brandSecondaryBrd secondaryPalette"> 
      <div > <h1> Dead Deals for {!DealListDescription}</h1></div>                        
      <div id="dvDeadDeals" class="pbBody" > <i>working...</i>
        <c:autotable BusyText="working..."   TableClassName="list" DefaultCellClass="dataCell" showColumnHeaders="true"    TblID="atDead" IncludeDeleteColumn="false"    funcDeleteRow="null"
                        funcNameCellComplete="funcCell"  funcNameColHeaderComplete="funcColHeader"   funcNameRowComplete="null"
                        funcNameTableComplete="null" funcNameTableStarting="funcTStart"   ContainingDiv="dvDeadDeals"
                        FieldConfig="Deal Name::::#Comment::::#Action Items::::#Status::::#"
                        FuncRetrieveSOQLQuery="fDeadDealsSOQL"></c:autotable>
      </div>
    </div>
    </div>
    </div>
</apex:outputPanel>

    <script>
function setCBs()
{
ge("cbShowDead").checked={!ShowDead};
}
addWindowOnLoadEvent(setCBs);

</script>



</apex:form>        
</apex:page>