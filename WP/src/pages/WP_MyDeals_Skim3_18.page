<apex:page controller="kjoDealReportController" standardStylesheets="false" tabStyle="Deal__c">
<style type="text/css"> 

.btn:hover {
    background-position: 0px -30px !important;
}

.customBtnOverflowForSector{ 
width:725px  !important;
}


.customBtnOverflowForSectorEIR{
width:525px  !important;
}

.customBtnOverflow{
overflow:hidden !important;
font-size: 12px  !important;
font-weight: 600  !important;
text-align:left !important;
height:28px  !important;
white-space:normal !important;
padding-right: 12px !important;
padding-left: 2px !important;
margin-bottom:10px !important;
}

.customCaret {
float: right !important;
margin-right: -8px !important;
margin-top: 7px !important;
}

.customLabelClass {
padding-left: 1px !important;
margin-left: 2px !important;
}

.customEarMetric {
border-color:#cccccc !important; 
padding-bottom:7px !important;  
padding-right:5px !important;
white-space:pre-wrap !important;
}

.btn-mini {
  padding: 6px;
  font-size: 6px;
  width:6em !important;
  -webkit-border-radius: 3px;
     -moz-border-radius: 3px;
          border-radius: 3px;
}

input[readonly],select[readonly],textarea[readonly] { 
  cursor:default;
}

TABLE#deals,TABLE#financials,TABLE#EAR_NewMetricTable,TABLE#DCR_NewMetricTable,
TABLE#DCR_InvestmentThesis,TABLE#DCR_InvestmentRisks,
TABLE#DCR_KeyValueCreation,TABLE#DCR_KeyCompanyGoals,
TABLE#DCR_ManagementTeam,TABLE#DCR_WPTeamActionItems{
    border: 1px solid black;
    border-collapse:collapse;
    padding: .2em;
    margin: .2em;
    width:100%;
}
TABLE#deals TH,TABLE#financials TH,TABLE#EAR_NewMetricTable TH,TABLE#DCR_NewMetricTable TH,
TABLE#DCR_InvestmentThesis TH,TABLE#DCR_InvestmentRisks TH,
TABLE#DCR_KeyValueCreation TH,TABLE#DCR_KeyCompanyGoals TH,
TABLE#DCR_ManagementTeam TH,TABLE#DCR_WPTeamActionItems TH{
    border: 1px solid black;
    text-align: center;
    padding: .4em;
    color: #ffffff;
    background-color: #1797C0;
    font-weight: bold;
}
TABLE#deals TD,TABLE#financials TD,TABLE#EAR_NewMetricTable TD,TABLE#DCR_NewMetricTable TD,
TABLE#DCR_InvestmentThesis TD,TABLE#DCR_InvestmentRisks TD,
TABLE#DCR_KeyValueCreation TD,TABLE#DCR_KeyCompanyGoals TD,
TABLE#DCR_ManagementTeam TD,TABLE#DCR_WPTeamActionItems TD{
    border: 1px solid black;
    padding: .4em;
    color: black;
}
TABLE#deals TD.ind-icon {
    text-align:center;
}
TABLE#deals SPAN.ind-icon{
    display:inline-block;
}
TABLE#deals TD.created-date{
    white-space:nowrap;
}
TABLE#deals TD.date-received{
    white-space:nowrap;
}
TABLE#deals TD.amount {
    white-space:nowrap;
    text-align: right;
}
TABLE.deal-status-tooltip TD {
    padding-right:14px;
}
#edit-financials INPUT,SELECT {
    text-align:right;
}
#edit-deal-stage INPUT,SELECT {
    text-align:left;
}
.money, .date{
    text-align:right;
}
.dcr-fin-field{
text-align:left;
}
.ear-metric-field{
text-align:left;
}
.period-type, .currency {
    text-align:center;
}
.dropdown-menu LI {
    text-align:left;
}
div.deal-name-title {
    padding-left: 4px;
    padding-right: 4px;
    padding-top: 2px;
    padding-bottom: 2px;
    margin-bottom: 4px;
    font-size: larger;
    background-color: #ddd;
    color: #fff;
    border: 1px solid whitesmoke;
}
div.ui-tooltip {
    max-width: 600px;
    font-size: .9em;
}
div.dialog-update-status {
    margin-top: 6px;
}
TR.comment-hide {
    display:none;
}
#staff-initials span:not(:last-of-type)::after {
  content: ", "  
}
.deal-icon {
    width:16px;
    height:16px;
    background-size:16px 16px;
    display:inline-block;  
}
.custom-icon-info-square {
    position: relative !important;
    padding-right:2px !important;
    left:2px;
    top:3px;
}
.custom-bulb-icon-info {
    display:inline-block;
    position:relative;
    left:0px;
    bottom:1px;
}
.custom-mouse-info {
  cursor:pointer !important;
}
.box-style{
        padding-top:5px;
        padding-bottom:5px;
        padding-right:5px;
        padding-left:5px;
        border-width: 1px;
        border-style: solid ;    
}
.fieldContentColorPink {
   background-color:#f2dcdb
}
.fieldContentColorGreen {
   background-color:#ebf1de
}
.fieldContentColorWhite {
   background-color:#ffffff
}
.deal-review {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_green.small.png')}");
}
.deal-portfolio {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_blue.small.png')}");
}
.deal-dead {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_red.small.png')}");
}
.deal-exited {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_black.small.png')}");
}

.icon-square {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/icon_sqr.png')}");
    background-position: 0px 0px;
}
.icon-square-filled {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/icon_sqr_filled.png')}");
    background-position: 0px 0px;
}
.icon-grey-bulb {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/gray_qm.png')}");
    background-position: -2px -2px;
}
.icon-orng-bulb {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/orng_qm.png')}");
    background-position: -1px -1px;
}
.custom-tooltip {
  background: #FEFDBA;
  font-size:12px !important;
  border: solid #FFA603;
  text-align: left;
  white-space: normal;
  font-weight: normal;
}

#dealteam { list-style-type: none; margin: 2px; padding: 4px; width: 90%; }
#dealteam li div { background-color: #eeeeee; position: relative; padding: 4px; margin:2px; border:1px black solid;}
#dealteam li div span { position: absolute; right: 10px; display:inline-block;}
#dealteam li div.hilite { border:1px red solid;}

TABLE.dcr-view-template th {text-align: right;width:30%;padding-right:5px;}
TABLE.dcr-view-template td {text-align: left;width:70%}

.ui-tabs-vertical { width: 55em; }
.ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 12em; }
.ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important;}
.ui-tabs-vertical .ui-tabs-nav li a { display:block; }
.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }
.ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}
.vertical-tab-layout {position:absolute;top:0;left:180px;text-align:left;width:100%;}

.lineitem-for-followup-template-div {position:relative; left:-30px; top:-5px; border-color:#00ff00; border:none; width:900px; height:450px;}
.lineitem-for-followup-template-class {
    list-style:none; width:950px; 
    max-height:425px; overflow-y:auto; border:none; 
    position:relative; left:-2px; top:35px;
}
.lineitem-for-template-div {position:relative; left:0px; top:-5px; border-color:#00ff00; border:1px; width:700px; height:400px;}
.lineitem-for-template-class {
    list-style:none; width:675px; padding:1px;
    max-height:360px; overflow-y:auto; border:dotted thin; 
    position:relative; left:0px; top:35px;
}
.icon-green-container {position:absolute; right:1px; top:1px; border:none; background-color:white; height:16px; width:55px; text-align:center; display:table-cell; vertical-align:middle;}
.icon-green-plus {width:16px; height:16px; background-size:16px 16px; display:inline-block; border:none; }
.icon-green-plus:hover {cursor:pointer;}

.dcr-metric-input-style {vertical-align:middle; height:25px; width:260px;font-family: Arial;font-size:12px;color:black;text-align:left;padding-bottom:5px;}

.lineitem-for-template-class table:hover {color:red;}
.lineitem-for-template-class li {background-color:white; height:auto;margin:2px; color:white; border:dotted thin;}
.lineitem-for-template-class1 li:hover {text-decoration: none; color:black; border:solid thin; cursor:move; td.border-left:none; }
.lineitem-for-template-class li tr {padding:4px; background-color:white; border-color:ff0000;}
.lineitem-for-template-class li td {vertical-align: top; text-align: left;}
.lineitem-editable {padding-left:4px; width:100%;border-left:dotted thin; border-top:dotted thin;border-bottom:dotted thin}
.lineitem-editable:hover {border:solid thin;cursor:move;}
.lineitem-readable-followup {padding:1px;height:20px; width:400px;text-align:left;vertical-align:text-top;color:#000000; background-color:#EEEEEE; opacity:0.6;border:1px solid black;}
.lineitem-editable-followup {padding:1px;height:20px; width:400px;text-align:left;vertical-align:text-top;border:1px solid black;}
.lineitem-editable-followup:hover {cursor:pointer;}
.followupcolor {font-size: 1.2em; background:transparent; border:1px; width:100px;height:25px; text-align:left;vertical-align:top; padding:1px; border-radius:1px; margin-bottom:1px;}
option.color-option {font-size:1.2em; margin:5px; padding:5px; background:#ffffff; border-style:1px solid black; font-family:Arial;}
.lineitem-color-cell {height:20px; width:100px;text-align:left;vertical-align:top;border:1px solid black;}
.followupinput {border-radius:1px; margin-bottom:1px; padding:0px;width:99px; height:20px; text-align:right;vertical-align:top;}
.followupdate {padding-bottom:0px;width:99px; height:15px; text-align:right;vertical-align:text-bottom;}
.dcr-followup-financial-header {height:20px; padding:1px;background-color:#C0C0C0;color:#000000;}
.dcr-followup-financial-cell-read{height:20px;line-height:20px;border-radius:1px; margin-bottom:1px;padding:1px;font-family: Arial;font-size: 12px;color:black;vertical-align:top;text-align:right; background-color:#EEEEEE;opacity:0.6;}
.dcr-followup-financial-cell-edit{height:20px;line-height:20px;border-radius:1px; margin-bottom:1px;padding:1px;font-family: Arial;font-size: 12px;color:black;vertical-align:top;text-align:left;border-radius:1px; margin-bottom:1px;}

#tableFinancialMetrixImport td {text-align:right; vertical-align:middle; border:none; height:16px;padding:1px;}
#dcrImportFinFromCompnay button:hover {border:solid thin;}

@-ms-viewport {width:device-width; }
.bs a {color:#000000;}

[class^="icon-"], [class*=" icon-"] {
display: inline-block;
width: 14px;
height: 14px;
margin-top: 1px;
line-height: 14px;
vertical-align: text-top;
background-repeat: no-repeat;
}

textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
background-color: #fff;
border: 1px solid #ccc;
-webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
-moz-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
-webkit-transition: border linear .2s,box-shadow linear .2s;
-moz-transition: border linear .2s,box-shadow linear .2s;
-o-transition: border linear .2s,box-shadow linear .2s;
transition: border linear .2s,box-shadow linear .2s;
}
select, textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
display: inline-block;
padding: 1px 3px;
margin-bottom: 10px;
/*font-size: 14px;*/
line-height: 20px;
color: #555;
vertical-align: middle;
-webkit-border-radius: 4px;
-moz-border-radius: 4px;
border-radius: 4px;
}

td.mceToolbar {
    padding: 0px !important;
}
table.mceToolbar {
	margin-left: auto !important;
    margin-right: auto !important;
}
</style>
<apex:stylesheet value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/jquery-ui-1.10.0.custom.min.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.BootstrapSF, 'dist/css/bootstrap.min.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/js/jquery-1.9.0.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.BootstrapSF, 'dist/js/bootstrap.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/js/jquery-ui-1.10.0.custom.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery.formatcurrency/jquery.formatCurrency-1.4.0.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery.autonumeric/autoNumeric.js')}"/> 

<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/backbone/underscore-min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/backbone/backbone.js')}"/> 
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/handlebars/handlebars-1.0.rc.1.js')}"/>

<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/jquery.tinymce.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.custom_images, 'CustomImages/bootstrap-multiselect.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.custom_images, 'CustomImages/bootstrap-multiselect.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.autoNumeric, 'autoNumeric-master/autoNumeric.js')}"/>

<div class="bs">
	<div style="float:left; width: 99%">
	<div style="float:left;" id="curruserDiv"><input style="height: 25px" type="text" id="curruser" name="curruser" class="blk" /></div>
        <div style="float:left; display: none;" id="currgroupDiv"><input style="height: 25px" type="text" id="currgroup" name="currgroup" class="blk" /></div>
	<div style="float:right;"><select style="height: 25px" id="ddlGroups" name="ddlGroups"><option value="">My Deals</option><option value="1">My Group's Deals</option><option value="2">All EAR Deals</option></select></div>
	</div>
	<div style="clear:both;"></div>
<apex:pageBlock >
        <div style="font-size: 1.4em; font-weight: 600;">Active Deals</div>
        <div id='progressbar'></div>
        <div class='dealslist'></div>
</apex:pageBlock>

<div id="dialog-alert" title="Error Message for Deal -" style="display:none">
<span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>You do not have sufficient rights to edit or alter this field. Please contact your local IT representative if this message displays in error.
</div>

<div id="dialog-stm-not-allowed" style="display:none">
The Senior Deal Team Member must be a Managing Director or Principal.
</div>

<div id="dialog-edit-ear-rev-ebitda-info" style="display:none">
To edit the Company Revenue and EBITDA, select Edit>Financials>New Financial from the My Deals page. 
</div>

<div id="dialog-edit-deal-team-info" style="display:none">
To edit the Deal Team, select Edit>Deal Team from the My Deals page.
</div>

<div id="dialog-edit-preview-ear-report-info" style="display:none">
</div>

<div id="dialog-edit-preview-dcr-report-info" style="display:none" class="bs">
</div>

<div id="dialog-general-info" style="display:none">
</div>

<div style="display:none"  id="alert-dialog-for-ear-report-size" >
    <div style="display:none" id="params"></div>
    <div><span id="dialog-for-report-size-content"></span>
    </div>
    <div class='content-panel'>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="alert-dialog-for-stage-crossing-thresh-x" >
    <div style="display:none" id="params"></div>
    <div><span id="dialog-for-stage-content"></span>
    </div>
    <div class='content-panel'>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="alert-dialog-for-stage-crossing-thresh-x-2" >
    <div style="display:none" id="params"></div>
    <div><span id="dialog-for-stage-content-2"></span>
    </div>
    <div class='content-panel'>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="alert-dialog-for-senior-tm-2" >
    <div style="display:none" id="params"></div>
    <div><span id="dialog-for-senior-tm-2"></span>
    </div>
    <div class='content-panel'>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="alert-dialog-for-ear-report" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
    <div><span id="dialog-for-ear-content"></span>
    </div>  
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="alert-dialog-for-senior-tm" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
    <div><span id="dialog-senior-tm-content"></span>
    </div>  
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="edit-key-Dates-Dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div class='deal-name-title'><span id="dealname"></span></div>
        <div><textarea id="keyDates" style="width:740px; height:288px"></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="edit-deal-required-richText-fields-Dialog" class="bs">
    <div style="display:none" id="params"></div>
    <div class='content-panel' id="edit-deal-required-richText-fields-Dialog-tabs">
         <ul class='richText-fields-Dialog-tabs'>
            <li><a href="#EAR-Report-View" class='richText-fields-Dialog-tabs-anchor'>General Information
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb ear-report'/>
            </a></li>
            <li><a href="#EAR-Description" class='richText-fields-Dialog-tabs-anchor'>Deal Description
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb ear-desc'/>
            </a></li>
            <li><a href="#Capital-Market-Consideration" class='richText-fields-Dialog-tabs-anchor'>Capital Markets Considerations
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb cap-mark'/>
            </a></li>
            <li><a href="#Why-Interesting" class='richText-fields-Dialog-tabs-anchor'>Why is it Interesting?
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb why-int'/>
            </a></li>
            <li><a href="#Fit-with-Group" class='richText-fields-Dialog-tabs-anchor'>Fit with Group
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb fit-with'/>
            </a></li>
            <li><a href="#Area-of-Concern" class='richText-fields-Dialog-tabs-anchor'>Areas of Concern
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb area-concern'/>
            </a></li>            
            <li><a href="#WP-Human-Capital" class='richText-fields-Dialog-tabs-anchor'>WP Human Capital
            <span id="richText-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb wp-human'/>
            </a></li>            
        </ul>
            <div  id="EAR-Report-View">
            <div><span id="earReportViewContent"></span></div>
            </div>
            <div  id="EAR-Description"><textarea id="earDescription" style="width: 1120px; height: 258px;font-family: Arial;font-size: 12px;color:black" ></textarea>       
            </div>          
            <div  id="Area-of-Concern"><textarea id="areaOfConcern"  ></textarea>       
            </div>
        
            <div  id="Fit-with-Group"><textarea  id="fitWithGrp"></textarea>                
            </div>
            <div  id="WP-Human-Capital"><textarea id="humanCapitial"></textarea> 
            </div>
        <div  id="Why-Interesting"><textarea  id="whyInteresting"></textarea> 
        </div> 
        
        <div  id="Capital-Market-Consideration"><textarea  id="capitalMarketConsideration" ></textarea>  
        </div>

        
        
    </div>  
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
<!-- kckkck -->

<div style="display:none" id="edit-deal-required-richText-fields-Dialog-EIR" class="bs">
    <div style="display:none" id="params"></div>
    <div class='content-panel' id="edit-deal-required-richText-fields-Dialog-tabs-EIR">
         <ul class='richText-fields-Dialog-tabs'>
            <li><a href="#EAR-Report-View-EIR" class='richText-fields-Dialog-tabs-anchor'>General Information
            <span id="richText-fields-Dialog-tabs-Img-EIR" class='custom-bulb-icon-info icon-grey-bulb ear-report'/>
            </a></li>
            <li><a href="#EAR-Description-EIR" class='richText-fields-Dialog-tabs-anchor'>Description / Background
            <span id="richText-fields-Dialog-tabs-Img-EIR" class='custom-bulb-icon-info icon-grey-bulb ear-desc'/>
            </a></li>
           
            <li><a href="#Why-Interesting-EIR" class='richText-fields-Dialog-tabs-anchor'>Why is it Interesting?
            <span id="richText-fields-Dialog-tabs-Img-EIR" class='custom-bulb-icon-info icon-grey-bulb why-int'/>
            </a></li>
            <li><a href="#Tenure-Expectations-EIR" class='richText-fields-Dialog-tabs-anchor'>Expectations During EIR Tenure?
            <span id="richText-fields-Dialog-tabs-Img-EIR" class='custom-bulb-icon-info icon-grey-bulb eir-tenure-expect'/>
            </a></li>
        </ul>
            <div  id="EAR-Report-View-EIR">
            <div><span id="earReportViewContent-EIR"></span></div>
            </div>
            <div  id="EAR-Description-EIR"><textarea id="earDescription-EIR" style="width: 820px; height: 258px;font-family: Arial;font-size: 12px;color:black" ></textarea>       
            </div>          

        
            <div  id="Tenure-Expectations-EIR"><textarea  id="tenureExpectations-EIR"></textarea>                
            </div>
           
        <div  id="Why-Interesting-EIR"><textarea  id="whyInteresting-EIR"></textarea> 
        </div> 
        
        
    </div>  
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="edit-deal-closing-report-fields-Dialog" class="bs">
    <div style="display:none" id="params"></div>
    <div class='content-panel' id="edit-deal-closing-report-fields-tabs" style="width:100%;height:100%;">
         <ul class='deal-closing-report-fields-tabs' style="z-index:10;width:185px;height:280px;background-color:#CCCCCC;border:solid thin;" id="deal-closing-report-fields-tabs-id">
            <li style="text-align:left;" tabid='DCR-Report-View'>               
                <a href="#DCR-Report-View" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb dcr-report'></span>
                General Information
                </a>
            </li>
            <li style="text-align:left;" tabid='DCR_InvestmentThesis'>
                <a href="#Investment-Thesis" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;"> 
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb inv-thesis'></span>
                Investment Thesis
                </a>           
            </li>
            <li tabid='DCR_InvestmentRisks'>
                <a href="#Investment-Risks" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb inv-risks'></span>
                Investment Risks
                </a>
            </li>
            <li tabid='DCR_KeyValueCreation'>
                <a href="#Key-Value-Creation-Drivers" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb key-creat'></span>
                Value Creation Drivers
                </a>
            </li>
            <li tabid='DCR_KeyCompanyGoals'>
                <a href="#Key-Company-Goals-and-Milestones" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb key-goal'></span>
                Goals / Milestones
                </a>
            </li>
            <li tabid='DCR_ManagementTeam'>
                <a href="#Management-Team" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb mg-team'></span>
                Management Team / Board             
                </a>
            </li>           
            <li tabid="DCR_WPTeamActionItems">
                <a href="#WP-Team-Action-Items" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb wp-action'></span>
                Team Action Items
                </a>
            </li>      
            <li tabid="" ><a href="#DCR-Financial-Targets" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb dcr-fin-target'></span>
                Financial Targets
                </a>
            </li>           
            <li tabid="DCR-Other-Considerations" id="liDCR-Other-Considerations" style="display:none;"><a href="#DCR-Other-Considerations" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb dcr-sig-consider'></span>
                Other Considerations
                </a>
            </li>          
            <li tabid="DCR-Team-Recommendations" id="liDCR-Team-Recommendations" style="display:none;"><a href="#DCR-Team-Recommendations" class='deal-closing-fields-Dialog-tabs-anchor' style="outline:none;">
                <span id="deal-closing-fields-Dialog-tabs-Img" class='custom-bulb-icon-info icon-grey-bulb dcr-team-recommend'></span>
                Team Recommendations
                </a>
            </li>     
        </ul>
            <div id="DCR-Report-View" class="vertical-tab-layout">
                <div style="border:2px; position:absolute;left:50px;"><span id="dcrReportViewContent"></span></div>
            </div>                 
            <div id="Investment-Thesis" class="vertical-tab-layout">
                <div><span id="investmentThesisContent"></span></div>      
            </div>           
            <div id="Investment-Risks" class="vertical-tab-layout">
                <div><span id="investmentRisksContent"></span></div>      
            </div>       
            <div id="Key-Value-Creation-Drivers" class="vertical-tab-layout">
                <div><span id="keyValueCreationContent"></span></div>      
            </div>           
            <div id="Key-Company-Goals-and-Milestones" class="vertical-tab-layout">
                <div><span id="keyCompanyGoalsContent"></span></div>      
            </div>           
            <div id="Management-Team" class="vertical-tab-layout">
                <div><span id="managementTeamContent"></span></div>      
            </div>       
            <div id="WP-Team-Action-Items" class="vertical-tab-layout">
                <div><span id="wPTeamActionItemsContent"></span></div>      
            </div> 
            <div id="DCR-Financial-Targets" class="vertical-tab-layout">  
                <div id='dcrFinancialMetrixImport' style="position:relative;left:100px;top:0px;width:650px; border:none;">                                  
                 <table id="tableFinancialMetrixImport" border="0" width="645">      
                   <tr>        
                    <td style="vertical-align:top;text-align:left;"><button style="height:30px;width:175px;" id="dcrImportFinFromCompnay" onclick="doDcrImportFinFromCompnayAction();" class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only">Import from Company Page</button> OR <button style="width:150px;height:30px;" class='dcr-new-metric-financial ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' id="dcrAddNewTarget">Add New Target</button></td>                  
                    <td style="width:0px;visibility:hidden;" id="dcrImportCompLabel" ></td>
                    <td id="dcrTypeOfFinancial" style="visibility:hidden;">
                        <select id="dcrTypeOfFinancialSel" multiple="multiple">
                        </select>
                    </td>   
                  </tr>
                 </table>
                </div>                  
                <div id='dcrFinancialTablecontent' style="position:relative;left:10px;top:-5px;height:350px;width:800px; overflow-y:auto; overflow-x:hidden; border:2px;"></div>         
           </div>       
           <div id="DCR-Other-Considerations" class="vertical-tab-layout">
                <div id="wpDCR-Other-Considerations" style="position:relative;left:20px; top:20px;width:650px;display:none1;border:1px;">
                    <strong>Other Considerations:</strong>
                    <div style="border:1px solid black;padding:4px;width:800px;height:200px;overflow-y:auto;" id="richtextareaFollowup-Other-Considerations"></div>
                </div>    
           </div> 
           <div id="DCR-Team-Recommendations" class="vertical-tab-layout">
                <div id="wpDCR-Team-Recommendations" style="position:relative;left:20px; top:20px;width:650px;display:none;">
                    <strong>Team Recommendations:</strong>
                    <div style="border:1px solid black;padding:4px;width:800px;height:200px;overflow-y: auto;" id="richtextareaFollowup-Team-Recommendations"></div>
                </div>    
           </div>        
    </div> 
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="ear-metric-add-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
    <table>
      <tr>
      <td align="right" style="width:150px; padding-bottom:7px; padding-right:5px;"><strong>Custom Metric</strong></td>
      <td align="left"><input id='earMetricNameContent' class='' style="width: 260px;font-family: Arial;font-size: 12px;color:black" type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:150px; padding-bottom:7px; padding-right:5px;"><strong>Date</strong></td>
      <td align="left"><input id='earMetricPeriodEndedContentAdd' class='date'  style="width: 260px;font-family: Arial;font-size: 12px;color:black" type='text' value=""/></td>
      </tr>    
      <tr>
      <td align="right" style="width:150px; padding-bottom:7px; padding-right:5px;"><strong>Value</strong></td>
      <td align="left"><input id='earMetricValueContent' class=''  style="width: 260px;font-family: Arial;font-size: 12px;color:black" type='text' value=""/></td>
      </tr>
    </table>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="ear-metric-edit-dialog">
    <div style="display:none;" id="params"></div>
    <div class='content-panel'>
    <table>
      <tr>
      <td align="right" style="width:100px; padding-bottom:7px; padding-right:5px;"><strong>Custom metric</strong></td>
      <td align="left"><input id='earMetricNameContent' class='' style="width: 260px;font-family: Arial;font-size: 12px;color:black" type='text' value=""/></td>
      </tr>

      <tr>
      <td align="right" style="width:100px; padding-bottom:7px; padding-right:5px;"><strong>Date</strong></td>
      <td align="left"><input id='earMetricPeriodEndedContentEdit' class='date'  style="width: 260px;font-family: Arial;font-size: 12px;color:black" type='text' value=""/></td>
      </tr>
    
      <tr>
      <td align="right" style="width:100px; padding-bottom:7px; padding-right:5px;"><strong>Value</strong></td>
      <td align="left"><input id='earMetricValueContent' class=''  style="width: 260px;font-family: Arial;font-size: 12px;color:black" type='text' value=""/></td>
      </tr>
    </table>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="ear-metric-delete-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
      <div>
    <p>
    <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
    The record will be permanently deleted and cannot be recovered. Are you sure?
    </p>     
      </div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dcr-metric-add-dialog" class="bs">
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
    <table>
      <tr>
      <td align="right" style="width:150px; padding-bottom:2px; padding-right:5px;"><strong>Custom Metric</strong></td>
      <td align="left"><input id='dcrMetricNameContent' class='dcr-metric-input-style' type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:150px; padding-bottom:2px; padding-right:5px;"><strong>Date</strong></td>
      <td align="left"><input id='dcrMetricPeriodEndedContentAdd' class='date dcr-metric-input-style' type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:150px; padding-bottom:2px; padding-right:5px;"><strong>Value</strong></td>
      <td align="left"><input id='dcrMetricValueContent' class='dcr-metric-input-style' type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:150px; padding-bottom:2px; padding-right:5px;"><strong>Unit</strong></td>
      <td align="left"><input id='dcrMetricUnitContent' class='dcr-metric-input-style' type='text' value=""/></td>
      </tr>
    </table>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dcr-metric-edit-dialog" class="bs">
    <div style="display:none;" id="params"></div>
    <div class='content-panel'>
    <table>
      <tr>
      <td align="right" style="width:100px; padding-bottom:2px; padding-right:5px;"><strong>Custom metric</strong></td>
      <td align="left"><input id='dcrMetricNameContent' class='dcr-metric-input-style' type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:100px; padding-bottom:2px; padding-right:5px;"><strong>Date</strong></td>
      <td align="left"><input id='dcrMetricPeriodEndedContentEdit' class='date dcr-metric-input-style' type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:100px; padding-bottom:2px; padding-right:5px;"><strong>Value</strong></td>
      <td align="left" ><input id='dcrMetricValueContent' class='dcr-metric-input-style' type='text' value=""/></td>
      </tr>
      <tr>
      <td align="right" style="width:100px; padding-bottom:2px; padding-right:5px;"><strong>Unit</strong></td>
      <td align="left" ><input id='dcrMetricUnitContent' class='dcr-metric-input-style' type='text' value=""/></td>
      </tr>
    </table>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dcr-metric-delete-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
      <div>
    <p>
    <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
    This target will be deleted. Are you sure?
    </p>     
      </div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dcr-edit-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
    <div><textarea  id="dcrEditContent" style="width: 610px;font-family: Arial;font-size: 12px;color:black"></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dcr-add-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
    <div><textarea  id="dcrAddContent" style="width: 610px;font-family: Aria1;font-size: 12px;color:black" ></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dcr-changecolor-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
      <div align="center">
      <p>    
      <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
      Please set the status of the follow-up record.
      </p>    
      <select id="select-color">
        <option value="#ffffff">Neutral</option>
        <option value="#ebf1de">Favorable</option>
        <option value="#f2dcdb">Unfavorable</option>
      </select> 
      </div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
<div style="display:none" id="dcr-delete-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
      <div>
    <p>
    <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
    The record will be permanently deleted and cannot be recovered. Are you sure?
    </p>    
      </div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
<div style="display:none"  id="edit-deal-stage-dialog" class="bs">
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div id='edit-deal-stage-dialog-content'></div>
        <div id='display-deal-stage-message' style="display:none;"></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
    <input type='hidden' id='hEMGCommentFlag' value='false'></input>
<div style="display:none"  id="editcommentarydialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div class='deal-name-title'>
        	<span id="dealname"></span> 
        	<span style="display:none" id='wordcount'>
	        	<span id='wordcount-inner' style="color:black; font-weight: bold;position:absolute;right:25px;vertical-align:middle;">
	        	 	<span id="current-char-count"></span> of  <span id="total-char-count"> </span> characters 
	        	</span> 
			</span>     	
        </div>
        <div><textarea id="comment"></textarea></div>
        <div class='dialog-update-status' style='position:relative;height:26px;line-height:26px;'>
            <span id='user-onbehalf-sect'>
                <span style="position:absolute;left:8px;vertical-align:middle;">
                    Comment By:
                </span> 
                <input type="text" id="user-onbehalf" name="user-onbehalf" class="blk" 
                    style='position:absolute;left:15%;height:26px;padding:0px;margin:0px;' />
            </span>
            <span style="position:absolute;right:12px;vertical-align:middle;" class='comment-record'>
                Last updated by <span id="comment-user"></span> on <span id="comment-date"></span>
            </span>			
        </div>        
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
<div style="display:none"  id="dcr-edit-lineitem-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div class='deal-name-title'><span id="dealname"></span></div>
        <div><textarea id="line-edit-comment"></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="dcr-add-lineitem-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div class='deal-name-title'><span id="dealname"></span></div>
        <div><textarea id="line-add-comment"></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="followup-edit-otherconsider-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div class='deal-name-title'><span id="dealname"></span></div>
        <div><textarea id="followup-edit-otherconsider"></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none"  id="followup-edit-teamrecommend-dialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div class='deal-name-title'><span id="dealname"></span></div>
        <div><textarea id="followup-edit-teamrecommend"></textarea></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="financials-dialog" >
    <div class='content-panel'>
        <a style='float:right;padding-top:4px;padding-botton:4px;' id='new-financial' href='#'>New Financial</a>
        <div id='financials-dialog-content'></div>    
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="edit-financials-dialog" class="bs">
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div id='edit-financials-dialog-content'></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>

<div style="display:none" id="dialog-confirm" title="Delete the Record?">
    <p>
    <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
    The record will be permanently deleted and cannot be recovered. Are you sure?
    </p>
</div>

<div id="staffingdialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel'>
        <div id="staffing-dialog-content"></div>
    </div>
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
</div>

<script id="ear-report-view-template-EIR" type="text/x-handlebars-template"> <!-- KCKKCK -->   

<table cellpadding="1" cellspacing="1" id="table3ab" style="width:900px;">
       <tr><td align="right" style="width:150px; padding-bottom:7px;  padding-right:5px;"><div><strong>WP Group / Sector</strong></div></td>
           <td align="left" style="width:660px" >
           <select id="earReportSectorSel" multiple="multiple" style="width: 205px;" >
           </td>
       </tr>
        <tr><td align="right" ><b>WP Deal Team </b></td>
           <td align="left" id="earReportDealTeam" class='edit-ear-Deal-team-info'>{{deal.dealTeam}}</td>
             
         </tr>
       </table>

<table cellpadding="1" cellspacing="1" id="table3ab" style="width:900px;"> 
       <tr><td align="right" style="width:220px; padding-bottom:7px;  padding-right:5px;"><div><strong>Expected Annual EIR Budget</strong></div></td>
           <td align="left" ><input id='expectedAnnualBudget'  type='text' value='{{deal.expectedAnnualBudget}}' style="width:660px;font-family: Arial;font-size: 12px;color:black"/></td>
       </tr></table>
<table cellpadding="1" cellspacing="1" id="table3ab" style="width:900px;">
       <tr><td align="right" style="width:220px; padding-bottom:7px;  padding-right:5px;"><div><strong>Expected Timing/Duration</strong></div></td>
           <td align="left" ><input id='expectedTiming'   type='text' value='{{deal.expectedTiming}}' style="width:660px;font-family: Arial;font-size: 12px;color:black"/></td>
       </tr></table>       
<table cellpadding="1" cellspacing="1" id="table3ab" style="width:900px;">
       <tr><td align="right" style="width:220px; padding-bottom:7px;  padding-right:5px;"><div><strong>Expected WP Commitment/ Investment </br>(if consummated)</strong></div></td>
           <td align="left" ><input id='expectedWPCommitment' type='text' value='{{deal.expectedWPCommitment}}' style="width:660px;font-family: Arial;font-size: 12px;color:black"/></td>
       </tr></table> 
   <table cellpadding="1" cellspacing="1" id="table3e" style="width:900px;">
       <tr><td align="right" style="width:220px; padding-right:5px;"> <strong>Key Dates / Next Steps</strong></td>
           <td align="left"><textarea id="earReportDealKeyDates" style="width:660px; height:80px;font-family: Arial;font-size: 12px;color:black" >{{deal.dealKeyNextSteps}}</textarea>
           </td></tr></table>
</script>

<script id="ear-report-view-template" type="text/x-handlebars-template">
<!--- <table border="0" cellpadding="1" cellspacing="1" id="table0" width="930">
  <tr><td style="width:550px;"><b>
    {{deal.dealName}}
   </b></td >
      <td style="align:right"><b>Early Action Report</b></td>
  </tr></table>
    <hr style="width:100%" /> ---->
    
 <table border="0" cellpadding="1" cellspacing="1"  id="table1" width="900">
         <tr><td align="right" style="width:170px; padding-bottom:7px; padding-right:5px;"><b>WP Group / Sector </b></td>
             <td style="align:left;">                
                 <select id="earReportSectorSel" multiple="multiple" style="width: 255px;" >
                 </select>        
             </td></tr>
         <tr><td align="right" style="width:170px; padding-right:5px;"><b>WP Deal Team </b></td>
           <td align="left" id="earReportDealTeam" class='edit-ear-Deal-team-info'>{{deal.dealTeam}}</td>
             
         </tr>
         </table>
                    
 <table border="0" cellpadding="1" cellspacing="1"  id="table1g" width="900">
     <tr><td align="right" style="width:180px; padding-right:5px;"><b>Company Description</b><br/></td>
         <td align="left">
     <textarea id="earReportCompDesc"  style="width:710px; height:80px;font-family: Arial;font-size: 12px;color:black" >{{deal.compDesc}}</textarea>
         </td></tr>
 </table>
 
                
 <table cellpadding="1" cellspacing="1" id="table3" style="width:900px;">
     <tr><td align="right" style="width:185px; padding-right:5px; margin-bottom: 5px;">
              <div ><strong>Revenue ({{deal.CompCurrencyCode}} M)</strong></div></td>
         <td align="left" style="white-space:pre-wrap;width:290px; border: 1px solid gray; " 
            class='box-style edit-ear-rev-ebitda-info' >{{ getHtmlString deal.compRevenue_MM}}</td>
         <td align="right" style="width:185px; padding-right:5px;"><div><strong>EBITDA ({{deal.CompCurrencyCode}} M)</strong></div></td>
         <td align="left" style="white-space:pre-wrap; width:290px; border: 1px solid gray;" 
            class='box-style edit-ear-rev-ebitda-info'>{{ getHtmlString deal.compEBITDA_MM}}</td></tr>
    <tr><td style="margin:3px;"></td></tr>            
    <tr><td align="right" style="width:185px; padding-right:5px; margin-bottom: 5px;"></td>
    <td><a style="float:left;color:#000099; text-decoration:underline;" class='ear-new-metric-financial' href='#'><b>Add Custom Metric</b></a>
        </td></tr></table>   
        
<!---<table cellpadding="1" cellspacing="1" id="table31ab" style="width:450px;">
    <tr><td align="right" style="width:150px; padding-right:5px;"><strong>Custom Financial Metric</strong></td>
        <td align="left" style="width: 255px;" ><input id="earAddNewEarMetrics" type="button" value="Add Metric"   class='ear-new-metric-financial' />
        </td></tr></table><p/>--->
           
       <table cellpadding="0" cellspacing="0"  id="EAR_NewMetricTable" style="width:900px; border:none;">
     <tr></tr>
     </table></p>

<table cellpadding="1" cellspacing="1" id="table3ab" style="width:900px;">
       <tr><td align="right" style="width:170px; padding-bottom:7px;  padding-right:5px;"><div><strong> Transaction Value (USD M) (Approx.)</strong></div></td>
           <td align="left"><input id='earReportTrans' class='amount' type='text' value='{{deal.Transaction_Value_MM}}' style="width:260px; "/></td>
           <td align="right" style="width:170px; padding-bottom:7px; padding-right:5px;"><div><strong>Deal Source Type</strong></div></td>
           <td align="left">
              <select id="earReportDealOwnerSel" style="width: 275px;" >
              </select>      
          </td></tr></table>
  
<table cellpadding="1" cellspacing="1" id="table3ab" style="width:900px;">
       <tr><td align="right" style="width:170px; padding-bottom:7px;  padding-right:5px;"><div><strong>Investment Amount (USD M) (Approx.)</strong></div></td>
           <td align="left" ><input id='earReportWPInv' class='amount' type='text' value='{{deal.WP_Investment_MM}}' style="width:260px;"/></td>
           <td align="right" style="width:170px;  padding-bottom:7px; padding-right:5px;"><div><strong>Ownership (% Fully Diluted) (Approx.)</strong></div></td>
           <td align="left"><input id='earReportWPDiluted' class='amount' type='text' value='{{ deal.WP_Ownership_Fully_Diluted}}' style="width:260px;"/></td>
       </tr></table>

   <table cellpadding="1" cellspacing="1" id="table3e" style="width:900px;">
       <tr><td align="right" style="width:170px; padding-right:5px;"> <strong>Key Dates / Next Steps</strong></td>
           <td align="left"><textarea id="earReportDealKeyDates" style="width:710px; height:80px;font-family: Arial;font-size: 12px;color:black" >{{deal.dealKeyNextSteps}}</textarea>
           </td></tr></table>

</script>

<script id="dcr-report-view-template" type="text/x-handlebars-template">
 <table class="dcr-view-template bs" border="0" cellpadding="1" cellspacing="1" id="deals1" style="width:90%">
       <tr id="dcrReportSectorSelTR"><th>WP Group / Sector </th>
           <td>
                <div id="dcrReportSectorSelDiv"><select id="dcrReportSectorSel" multiple="multiple" style="width:510px;" ></div>
           </td>
       </tr>
        <tr><th>WP Deal Team </th>
            <td><div id='edit-dcr-Deal-team-info'><textarea disabled style="width:525px; height:30px;vertical-align:middle;padding-top:5px;">{{deal.dealTeam}}</textarea></div></td>
        </tr>  
        <tr id='dcrWPInvestmentTR'><th>Investment Amount (USD M) </th>
            <td style="padding-top:5px;">
                <input type='text' id='dcrWPInvestment' value="{{deal.wpInvestment}}"></input>
            </td>
        </tr> 
        <tr id='dcrLineOfEquityAmountTR'><th>Line of Equity (USD) </th>
            <td align="left">
                <input type='text' id='dcrLineOfEquityAmount' class='amount' value="{{deal.lineOfEquityAmount}}"></input>
            </td>
        </tr> 
        <tr id='dcrOwnershipTR'><th>Ownership (%) </th>
            <td>
                <input type='text' id='dcrOwnership' class='amount' value="{{deal.wpOwnership}}%"></input>
            </td>
        </tr> 
        <tr id='dcrBoardSeatsTR'><th width="50%"># WP Board Seats </th>
            <td width="50%">
                <input style="width:25px;" type='text' id='dcrBoardSeats' class='amount' value="{{deal.wpBoardSeats}}"></input> of 
                <input style="width:25px;" type='text' id='dcrBoardSeatsTotal' class='amount' value="{{deal.wpBoardSeatsTotal}}"></input>
            </td>
        </tr>    
        <tr style="display:none;"><th width="40%">Type of Report</th>
            <td width="40%">            
                <select disabled id="dcrTypeOfReportSel"></select>  
                <div id="dcrDatePickerLabel"><b>Date</b>
                    <input type='text' id='dcrDatePicker' class='date'/>
                    <input id="dcrAddHeader" type="button" value="Create Header" onclick="doDcrAddHeaderAction();"/>
                </div>            
            </td>  
         </tr>   
       </table>              
      <div style="visibility: hidden;">
      <input "type='text' id='dcrOtherConsider' value="{{deal.otherConsider}}"></input>
      <input "type='text' id='dcrTeamRecommend' value="{{deal.teamRecommend}}"></input>
      </div>
</script>

<script id="edit-deal-stage-template" type="text/x-handlebars-template">
    <table id="edit-deal-stage" class="edit-deal-stage">
    <tr colspan='2'>
    </tr>
    <tr>
    <td style="width:70px; padding-bottom:10px" >Deal Stage</td>
    <td>
        <select id='dealStage'>
        {{#each stageList}}
        <option value='{{this}}' {{selected this ../deal.Stage__c}}>{{this}}</option>
        {{/each}}
        </select>
    </td>
    </tr>
    </table>
</script>

<script id="staffing-dialog-template" type="text/x-handlebars-template">
<div>
    {{#if dealname}}
        <div style="display:none">{{dealname}}</div>
    {{/if}}
    <input type='text' id='staff-searcher'></input>
    <ul id='dealteam'>
    {{#each staff}}
        <li data-contact-id='{{this.contact_id}}' data-user-id='{{this.user_id}}'>
        <div>      
            {{#if isDealUpdatable }}
            <a href='#' class='change-role-status'>
              {{#if isSTM }} 
                <span id="tm-status-id" class='custom-icon-info-square icon-square-filled on-stm'></span>
              {{else}}  
               <span id="tm-status-id" class='custom-icon-info-square icon-square on-tm'></span>
              {{/if}}
            </a>            
            <a href='#' class='delete-user'>
                <span class='ui-icon ui-icon-circle-close'></span>
            </a>{{this.label}}
            {{else}}
              {{#if isSTM }} 
                <span id="tm-status-id" class='custom-icon-info-square icon-square-filled'></span>{{this.label}}
              {{else}}  
               <span id="tm-status-id" class='custom-icon-info-square icon-square'></span>{{this.label}}
              {{/if}}                     
            {{/if}}          
        </div>
        </li>
    {{/each}}
    </ul>
</div>
</script>

<script id="financials-template" type="text/x-handlebars-template">
    <table id="financials" class="financials">
    <tr>
    <th>Type</th>
    <th>Period Ended</th>
    <th>Revenue</th>
    <th>Net Income</th>
    <th>EBITDA</th>
    <th>Book Value</th>
    <th>Enterprise Value</th>
    <th>Market Cap.</th>
    <th>Currency</th>
    <th>Action</th>
    </tr>
    {{#each financials}}
    <tr>
    <td class='period-type'>{{Period_Type__c}}</td>
    <td class='date'>{{date Period_Ended__c}}</td>
    <td class='money'>{{money Revenues__c}}</td>
    <td class='money'>{{money Net_Income__c}}</td>
    <td class='money'>{{money EBITDA__c}}</td>
    <td class='money'>{{money Book_Value__c}}</td>
    <td class='money'>{{money Enterprise_Value__c}}</td>
    <td class='money'>{{money Market_Cap__c}}</td>
    <td class='currency'>{{CurrencyIsoCode}}</td>
   {{#if isDealUpdatable }}    
    <td align='center' style='text-align:center;vertical-align:top;'>
        <a href='#' data-financial-id='{{Id}}' data-company-id='{{Company__c}}' class='edit-financials'><span style='display:inline-block' class='ui-icon ui-icon-pencil'></span></a>
        <a href='#' data-financial-id='{{Id}}' data-company-id='{{Company__c}}' class='delete-financials'><span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span></a>
    </td>       
   {{else}}
    <td align='center' style='text-align:center'>   
    </td>   
    {{/if}}         
    </tr>
    {{/each}}
    </table>
</script>

<script id="earNewMetricTablecontent-template" type="text/x-handlebars-template">
    {{#each earMetrics}}
    <tr data-lineItem-id='{{lineItem_id}}'>
    <td align="right" style="width:175px; border-width: 0px 1px 0px 0px;" class='customEarMetric'><strong><span id='earMetricName'>{{ear_metric_name}}</span></strong></td>
    <td align="left" style="width:250px; border-width: 1px 0px 1px 0px; " 
    class='box-style customEarMetric' ><strong><span id='earMetricPeriodEnded'>{{date ear_metric_per_end}}</span></strong></td>
    <td align="left" style="width:250px; border-width: 1px 0px 1px 0px;" class='box-style customEarMetric' ><span id='earMetricValue' style="width:400px;white-space:pre-wrap;">{{ear_metric_value}}</span> </td>
    <td style="width:250px; border-width: 1px 1px 1px 0px;" class='box-style customEarMetric'><strong>Action:</strong>  {{#if isDealUpdatable }}<a href='#' data-deal-id='{{deal_id}}' data-scoreHeader-id='{{scHead_id}}' data-lineItem-id='{{lineItem_id}}' class='edit-earMetrics'><span style='display:inline-block' class='ui-icon ui-icon-pencil'></span></a><a href='#' data-deal-id='{{deal_id}}' data-scoreHeader-id='{{scHead_id}}'  data-lineItem-id='{{lineItem_id}}' class='delete-earMetrics'><span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span></a>{{else}}  {{/if}} </td></tr>
   <tr data-lineItem-id='{{lineItem_id}}'><td style="white-space:preserve; border-width: 0px 0px 0px 0px; border-collapse: separate; margin-bottom: 5px;"></td></tr>
    {{/each}}
</script>

<script id="dcr-followup-financialtarget-template" type="text/x-handlebars-template">
    <table border="1" id="DCR_NewMetricTable" data-table-id="DCR_Followup_FinancialTarget-Table" class="financials" style="margin-bottom:1px;border-radius:1px;height:20px;width:700px;border:outset 0px;border-collapse:separate;border-spacing:1px;padding:1px;">
    <tr><td style="text-align:right;vertical-align:bottom;" colspan="7">All financial values are in millions.</td></tr>    
    <tr>
         <th style="width:200px;background-color:#FFFFFF;color:#000000;" class="dcr-followup-financial-header"></th>
         <th style="width:100px;background-color:#FFFFFF;color:#000000;" class="dcr-followup-financial-header"></th>
         <th style="width:100px;background-color:#FFFFFF;color:#000000;" class="dcr-followup-financial-header">Target <br>at Deal Closing</th>
         <th style="width:100px;background-color:#FFFFFF;color:#000000;" class="dcr-followup-financial-header">Unit</th>
         <th style="padding:1px;width:1px;border:none;background-color:#FFFFFF;color:#000000;"></th>
         <th style="width:100px;background-color:#FFFFFF;color:#000000;" class="dcr-followup-financial-header">Current</th>
         <th style="width:100px;background-color:#FFFFFF;color:#000000;" class="dcr-followup-financial-header">Actions</th>
    </tr> 
    {{#each dcrMetrics}}
    <tr data-lineItem-id='{{lineItem_id}}' style="background-color:{{dcr_metric_followup_color}}">
    <td class='dcr-metric-field dcr-followup-financial-cell-read' style="padding:1px;text-align:left;width:200px;"><span id='dcrMetricName'>{{dcr_metric_name}}:</span></td>
    <td class='dcr-metric-field dcr-followup-financial-cell-read' style="padding:1px;text-align:center;width:100px;"><span id='dcrMetricPeriodEnded'>{{dcr_metric_per_end}}</span></td>
    <td class='dcr-metric-field dcr-followup-financial-cell-read' style="padding:1px;text-align:right;width:100px;"><span id='dcrMetricValue'>{{ dcr_metric_followup_value}}</span></td>
    <td class='dcr-metric-field dcr-followup-financial-cell-read' style="padding:1px;text-align:center;width:100px;"><span id='dcrMetricUnit'>{{dcr_metric_unit}}</span></td>
    <td class='dcr-metric-field' style="padding:1px;width:1px;background-color:#FFFFFF;border:none;font-family: Arial;font-size: 12px;color:black;text-align:center;"></td>
    <td class='dcr-metric-field' style="padding:1px;text-align:right;width:100px;">
    <input data-deal-id='{{deal_id}}' 
        data-scoreHeader-id='{{scHead_id}}' 
        data-lineItem-id='{{lineItem_id}}' 
        class="followupinput" 
        style="margin-bottom:1px;border-radius:1px;background-color:transparent;padding:0px;width:100px;text-align:right;vertical-align:top;font-family:Arial;font-size:12px;border-style:none;" 
        type="text" 
        value="{{dcr_metric_value}}" 
        name="{{lineItem_id}}"></input>
    </td>
   {{#if isDealUpdatable }}  
    <td data-table-id="DCR_Followup_FinancialTarget-Table" data-deal-id='{{deal_id}}'
        data-scoreHeader-id='{{scHead_id}}'
        data-lineItem-id='{{lineItem_id}}'
        style="margin-bottom:1px;border-radius:1px;padding:1px;width:100px;text-align:left;"
        class="action-fieldFinanceColor lineitem-color-cell dcr-followup-financial-cell-edit">
        {{{dcr_metric_followup_selectoption}}}
    </td>    
   {{else}}
    <td align='center' style='text-align:center'>   
    </td>   
    {{/if}}         
    </tr>
    {{/each}}
    </table>
</script>
<script id="dcrNewMetricTablecontent-template" type="text/x-handlebars-template">
    <table class="financials" border="0"><tr><td style="font-family: Arial;font-size: 12px;width:712px;border:none;text-align:right;vertical-align:bottom;">All financial values are in millions.</td></tr></table>
    <table id="DCR_NewMetricTable" class="financials" style="width:712px;border:none;">
        <tr style="background-color:#808080;">
         <th style="background-color:#C0C0C0;color:#000000;">Financial Target</th>
         <th style="background-color:#C0C0C0;color:#000000;">Date</th>
         <th style="background-color:#C0C0C0;color:#000000;">Value</th>
         <th style="background-color:#C0C0C0;color:#000000;">Unit</th>
         <th style="background-color:#C0C0C0;color:#000000;">Actions</th>
        </tr> 
    {{#each dcrMetrics}}
    <tr data-lineItem-id='{{lineItem_id}}'>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:left;"><span id='dcrMetricName'>{{dcr_metric_name}}</span></td>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:center;"><span id='dcrMetricPeriodEnded'>{{dcr_metric_per_end}}</span></td>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:right;"><span id='dcrMetricValue'>{{dcr_metric_value}}</span></td>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:left;"><span id='dcrMetricUnit'>{{dcr_metric_unit}}</span></td>
   {{#if isDealUpdatable }}  
    <td align='center' style='text-align:center'>
        <a href='#' data-deal-id='{{deal_id}}' data-scoreHeader-id='{{scHead_id}}' 
        data-lineItem-id='{{lineItem_id}}' class='edit-dcrMetrics'>
        <span style='display:inline-block' class='ui-icon ui-icon-pencil'></span></a>
        
        <a href='#' data-deal-id='{{deal_id}}' data-scoreHeader-id='{{scHead_id}}'
       data-lineItem-id='{{lineItem_id}}' class='delete-dcrMetrics'>
        <span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span></a>
    </td>       
   {{else}}
    <td align='center' style='text-align:center'>   
    </td>   
    {{/if}}         
    </tr>
    {{/each}}
    </table>
</script>

<script id="dcrNewMetricTablecontent-single-template" type="text/x-handlebars-template">
    {{#each dcrMetrics}}
    <tr data-lineItem-id='{{lineItem_id}}'>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:left;"><span id='dcrMetricName'>{{dcr_metric_name}}</span></td>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:center;"><span id='dcrMetricPeriodEnded'>{{dcr_metric_per_end}}</span></td>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:right;"><span id='dcrMetricValue'>{{dcr_metric_value}}</span></td>
    <td class='dcr-metric-field' style="font-family: Arial;font-size: 12px;color:black;text-align:left;"><span id='dcrMetricUnit'>{{dcr_metric_unit}}</span></td>
   {{#if isDealUpdatable }}  
    <td align='center' style='text-align:center'>
        <a href='#' data-deal-id='{{deal_id}}' data-scoreHeader-id='{{scHead_id}}' 
        data-lineItem-id='{{lineItem_id}}' class='edit-dcrMetrics'>
        <span style='display:inline-block' class='ui-icon ui-icon-pencil'></span></a>
        
        <a href='#' data-deal-id='{{deal_id}}' data-scoreHeader-id='{{scHead_id}}'
       data-lineItem-id='{{lineItem_id}}' class='delete-dcrMetrics'>
        <span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span></a>
    </td>       
   {{else}}
    <td align='center' style='text-align:center'>   
    </td>   
    {{/if}}         
    </tr>
    {{/each}}
</script>

<script id="edit-financials-template" type="text/x-handlebars-template">
    <table id="edit-financials" class="edit-financials" border="1">
    <tr colspan='2'>
    </tr>
    <tr>
    <td>Period Type</td>
    <td>
        <select id='period'>
        {{#each periods}}
        <option value='{{this}}' {{selected this ../fin.Period_Type__c}}>{{this}}</option>
        {{/each}}
        </select>
    </td>
    </tr>
    <tr>
    <td>Period Ended</td>
    <td><input type='text' value='{{date fin.Period_Ended__c}}' id='datepicker'/></td>
    </tr>
    <tr>
    <td>Revenues</td>
    <td><input id='revenues' class='amount' type='text' value='{{fin.Revenues__c}}'/></td>
    </tr>
    <tr>
    <td>Net Income</td>
    <td><input id='netincome' class='amount' type='text' value='{{fin.Net_Income__c}}' /></td>
    </tr>
    <tr>
    <td>EBITDA</td>
    <td><input id='ebitda' class='amount' type='text' value='{{fin.EBITDA__c}}' /></td>
    </tr>
    <tr>
    <td>Book Value</td>
    <td><input id='bookvalue' class='amount' type='text' value='{{fin.Book_Value__c}}' /></td>
    </tr>
    <tr>
    <td>Enterprise Value</td>
    <td><input id='enterprisevalue' class='amount'  type='text' value='{{fin.Enterprise_Value__c}}' /></td>
    </tr>
    <tr>
    <td>Market Cap.</td>
    <td><input id='marketcap' class='amount'  type='text' value='{{fin.Market_Cap__c}}' /></td>
    </tr>
    <tr>
    <td>Company Currency</td>
    <td>
        <select id='currency' disabled>
        {{#each currencies}}
        <option value='{{this}}' {{selected this ../fin.Company_Currency__c}}>{{this}}</option>
        {{/each}}
        </select>
    </td>
    </tr>
    <tr>
    <td>Currency Code</td>
    <td>
        <select id='isocode' disabled>
        {{#each currencies}}
        <option value='{{this}}' {{selected this ../fin.CurrencyIsoCode}}>{{this}}</option>
        {{/each}}
        </select>
    </td>
    </tr>
    </table>
</script>
<script id="dcr-lineitem-for-followup-template" type="text/x-handlebars-template">   
<div id='{{dealClosingTableId}}' class='{{dealClosingTableId}} lineitem-for-followup-template-div'>
      <div style="position:relative;left:50px;top:30px;font-weight:bold;font-size:110%">
        <table border="0"><tr><td width="410">{{firstColName}}:</td><td style="font-style:italic;width:400px;">Current View / Status:</td></tr>
      </table></div>
      <ul id="{{dealClosingTableId}}-id" class="lineitem-for-followup-template-class">
        {{#each dealClosingFields}}
        <li class="lineitem-for-template-li-class" data-dealClosingField-id='{{this.lineItem_id}}' data-scHead-id='{{this.scHead_id}}' data-deal-id='{{this.deal_id}}' data-table-id='{{this.tableId}}'>
            <table style="height:20px;width:100%;border: 1px solid #ccc;border:outset 0px;border-collapse:separate;border-spacing:1px;" data-table-id='{{this.tableId}}' data-dealClosingField-id='{{this.lineItem_id}}'> 
            <tr data-dealClosingField-id='{{this.lineItem_id}}' style="background-color:{{this.followup_color}}; height:20px;">
             <td class="lineitem-readable-followup" >{{{this.followup_value}}}</td>
             <td style="width:3px;background-color:#ffffff;border:none;"></td>
             <td class="lineitem-editable-followup"
                data-dealClosingField-id='{{this.lineItem_id}}'
                data-deal-id='{{this.deal_id}}' 
                data-table-id='{{this.tableId}}'  
                data-scHead-id='{{this.scHead_id}}'>
                <span class='textFieldContent' id='fieldContent'>{{ this.data.Line_Item_Value__c}}</span>
             </td>
             <td style="width:3px;background-color:#ffffff;border:none;"></td>
             <td style="height:25px;" data-dealClosingField-id='{{this.lineItem_id}}'
                 data-deal-id='{{this.deal_id}}'
                 data-table-id='{{this.tableId}}' 
                 data-scHead-id='{{this.scHead_id}}'
                 data-color-id='{{this.followup_color}}'
                 class="action-fieldContentColor lineitem-color-cell">
                 {{{this.followup_selectoption}}}
             </td>
            </tr>
            </table>        
        </li>
       {{/each}}
      </ul>
</div>
</script>
<script id="dcr-lineitem-for-all-template" type="text/x-handlebars-template">   
<div id='{{dealClosingTableId}}' class='{{dealClosingTableId}} lineitem-for-template-div bs'>
      <div class='icon-green-container'>
      <table style="height:15px; line-height:15px; text-align:center; display:table-cell; vertical-align:bottom;">
      <tr data-table-id='{{dealClosingTableId}}' 
          data-deal-id='{{deal.deal_id}}'
          data-scHead-id='{{deal.scHead_id}}'
          class='add-dealClosingField'>
        <td>
            <button style="width:90px;"><img src='{!$Resource.green_plus}'></img> Add Bullet</button></td>
      </tr>
      </table>
      </div>
      <ul id="{{dealClosingTableId}}-id" class="lineitem-for-template-class">
        {{#each dealClosingFields}}
        <li style="padding-left:2px;" class="lineitem-for-template-li-class" data-dealClosingField-id='{{this.lineItem_id}}' data-scHead-id='{{this.scHead_id}}' data-deal-id='{{this.deal_id}}' data-table-id='{{this.tableId}}'>
            <table height="100%" width="100%" data-table-id='{{this.tableId}}' data-dealClosingField-id='{{this.lineItem_id}}'> 
            <tr data-dealClosingField-id='{{this.lineItem_id}}'>
             <td style="padding:2px;text-align:left;">&#x25CF;</td>
             <td class="lineitem-editable"
                data-dealClosingField-id='{{this.lineItem_id}}'
                data-deal-id='{{this.deal_id}}' 
                data-table-id='{{this.tableId}}'  
                data-scHead-id='{{this.scHead_id}}'>
                <span class='textFieldContent' id='fieldContent' style="padding-left:2px;">{{ this.data.Line_Item_Value__c }}</span>
             </td>
             <td style="padding:1px; text-align:right;border-right:dotted thin;border-top:dotted thin;border-bottom:dotted thin;">
                <a href='#' data-dealClosingField-id='{{this.lineItem_id}}' 
                        data-deal-id='{{this.deal_id}}'
                        data-table-id='{{this.tableId}}' 
                        data-scHead-id='{{this.scHead_id}}' 
                    class='delete-dealClosingField'>
                    <span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span>
                </a>
             </td>
            </tr>
            </table>        
        </li>
       {{/each}}
      </ul>
</div>
</script>
<script id="deal-followup-field-content-template" type="text/x-handlebars-template">   
    Table Name : {{firstColName}}
    <table id='{{dealClosingTableId}}' class='{{dealClosingTableId}}' style="border-color:0000ff">
    <tr><td>
    <ul id="allDCRLineItems"> 
        {{#each dealClosingFields}}
        <li style="height:20px;background-color:blue1;">
            <span id='fieldContent' 
                data-dealClosingField-id='{{this.lineItem_id}}' 
                data-deal-id='{{this.deal_id}}' 
                data-table-id='{{this.tableId}}' 
                data-scHead-id='{{this.scHead_id}}' 
                class='edit-fieldContentField'>
                {{this.data.Line_Item_Value__c}}
            </span>  
        </li>
       {{/each}}
    </ul>
  </td></tr></table>
  <table>
  <tr><td>
  <a style='float:right;margin-bottom:5px;' href='#' data-table-id='{{dealClosingTableId}}' data-deal-id='{{deal.deal_id}}' data-scHead-id='{{deal.scHead_id}}' class='add-dealClosingField'><button class='ui-button-text'>NO Add</button></a>
  </td></tr>
  <table>
</script>
<script id="deal-closing-field-content-template" type="text/x-handlebars-template">   
    Table Name : {{firstColName}}
    <table id='{{dealClosingTableId}}' class='{{dealClosingTableId}}' style="border-color:0000ff">
    <tr><td>
    <ul id="allDCRLineItems"> 
        {{#each dealClosingFields}}
        <li style="height:20px;background-color:blue1;">
            <span id='fieldContent' 
                data-dealClosingField-id='{{this.lineItem_id}}' 
                data-deal-id='{{this.deal_id}}' 
                data-table-id='{{this.tableId}}' 
                data-scHead-id='{{this.scHead_id}}' 
                class='edit-fieldContentField'>
                {{this.data.Line_Item_Value__c}}
            </span>  
        </li>
       {{/each}}
    </ul>
  </td></tr></table>
  <table>
  <tr><td>
  <a style='float:right;margin-bottom:5px;' href='#' data-table-id='{{dealClosingTableId}}' data-deal-id='{{deal.deal_id}}' data-scHead-id='{{deal.scHead_id}}' class='add-dealClosingField'><button class='ui-button-text'>Add</button></a>
  </td></tr>
  <table>
</script>

<script id="deal-closing-field-content-single-template" type="text/x-handlebars-template">
    {{#each dealClosingFields}}
    <tr data-dealClosingField-id='{{this.lineItem_id}}'>
    <td bgColor='#ffffff'
   {{#if isHeaderClosing}}  
   {{else}}
    class='action-fieldContentColor fieldContentColorWhite' 
    {{/if}}
    data-dealClosingField-id='{{this.lineItem_id}}' 
      data-deal-id='{{this.deal_id}}' data-table-id='{{this.tableId}}' data-scHead-id='{{this.scHead_id}}'
      style="text-align:left;"><ul style="margin:5px;"><li style="margin-left:6px;"><span id='fieldContent'>{{this.data}}</span></li></ul></td>
   {{#if isDealUpdatable}}   
    <td align='center' style='text-align:center'>
        <a href='#' data-dealClosingField-id='{{this.lineItem_id}}' data-deal-id='{{this.deal_id}}' data-table-id='{{this.tableId}}'
           data-scHead-id='{{this.scHead_id}}' class='edit-dealClosingField'><span style='display:inline-block' class='ui-icon ui-icon-pencil'></span></a>
        <a href='#' data-dealClosingField-id='{{this.lineItem_id}}' data-deal-id='{{this.deal_id}}' data-table-id='{{this.tableId}}' 
           data-scHead-id='{{this.scHead_id}}' class='delete-dealClosingField'><span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span></a>
    </td>      
   {{else}}
    <td align='center' style='text-align:center'>  
    </td>  
    {{/if}}        
    </tr>
   {{/each}}
</script>
<script id="deal-lineitem-content-single-template" type="text/x-handlebars-template">
        {{#each dealClosingFields}}
        <li class="lineitem-for-template-li-class" data-dealClosingField-id='{{this.lineItem_id}}' data-scHead-id='{{this.scHead_id}}' data-deal-id='{{this.deal_id}}' data-table-id='{{this.tableId}}'>
            <table height="100%" width="100%" data-table-id='{{this.tableId}}' data-dealClosingField-id='{{this.lineItem_id}}'> 
            <tr data-dealClosingField-id='{{this.lineItem_id}}'>
             <td style="padding:2px;">&#x25CF;</td>
             <td class="lineitem-editable"
                data-dealClosingField-id='{{this.lineItem_id}}'
                data-deal-id='{{this.deal_id}}' 
                data-table-id='{{this.tableId}}'  
                data-scHead-id='{{this.scHead_id}}'>
                <span class='textFieldContent' id='fieldContent'>{{getHtmlString this.data}}</span>
             </td>
             <td style="padding:1px; text-align:right;border-right:dotted thin;border-top:dotted thin;border-bottom:dotted thin;">
                <a href='#' data-dealClosingField-id='{{this.lineItem_id}}' 
                        data-deal-id='{{this.deal_id}}'
                        data-table-id='{{this.tableId}}' 
                        data-scHead-id='{{this.scHead_id}}' 
                    class='delete-dealClosingField'>
                    <span style='display:inline-block' class='ui-icon ui-icon-circle-close'></span>
                </a>
             </td>
            </tr>
            </table>        
        </li>
       {{/each}}
</script>
<script id="deals-template" type="text/x-handlebars-template">
    <table id="deals" class="dealtable">
    <tr>
    <th>Deal</th>
    <th>Description</th>
    <th>Team</th>
    <th>Info</th>
    <th>EMG</th>
    <th>Group</th>
    <th>Highlight</th>
    <th>EMG Comment</th>
    <th>Actions</th>
    </tr>
    {{#each deals}}
    {{#unless this.dealisexited}}
    <tr class="dealdetail" data-deal-id="{{this.Id}}">
    <td>
        <div style="display:none">{{this.Id}}</div>
        <div style="display:inline;">
            {{{icon this.Stage__c dead=this.Dead_Deal_Reason__c}}}
            <a href="#" class='showdealdetail' title="Deal Details">
                <span class="ui-icon ui-icon-info" style="display:inline-block;float:right"></span>
            </a>

            <strong><a href='{{this._sf_e_url}}' label='Edit Deal'><span id='dealname'>{{this.Name}}</span></a></strong>

        </div>

        <div style="display:none">
            <div class='deal-details'>
                <table class='deal-status-tooltip'>
                <tr><td>Sector</td><td class='emg-deal-sector'>{{this.Sector__c}}</td></tr>
                <tr><td>Received</td><td>{{date this.Date_Received__c}}</td></tr>
                {{#if dealisdead }}
                    <tr><td>Dead Date</td><td><strong>{{date Dead_Deal_Date__c}}</strong></td></tr>
                    <tr><td>Dead Reason</td><td><strong>{{Dead_Deal_Reason__c}}</strong></td></tr>
                    <tr><td>Dead Note</td><td><strong>{{Dead_Deal_Notes__c}}</strong></td></tr>
                    <tr><td>Highest Stage</td><td class='deal-stage-1'><strong>{{Stage__c}}</strong></td></tr>
                {{else}}
                    <tr><td>Stage</td><td class='deal-stage-1'><strong>{{Stage__c}}</strong></td></tr>
                {{/if}}
                <tr><td>Code</td><td>{{Expense_Code__c}}</td></tr>
                <tr><td>Type</td><td>{{Type__c}}</td></tr>
                <tr><td><div style="display:none">{{WP_Ownership__c}}</td></tr>
                <tr><td><div style="display:none">{{WP_Ownership_Diluted__c}}</td></tr>
                <tr><td>Location(s)</td><td>{{Geographies__c}}</td></tr>
                <tr><td>Stage of Life</td><td>{{Stage_of_Life_Cycle__c}}</td></tr>
                <tr><td>Group(s)</td><td><strong>{{WP_Groups__c}}</strong></td></tr>
                </table>
            </div>
        </div>
    </td>
    <td>
         <div class="deal-description">{{this.Description__c}}</div>
    </td>
    <td>
        <div id='staff-initials'>
        {{#each this.Deal_Team__r}}
            <span><a href="#" title="{{this.Employee__r.Name}}">{{this.Employee__r.Initials__c}}</a></span> 
        {{/each}}
        </div>
    </td>
    <td class='ind-icon'>
            {{#if this.Valuation_Reporting__r}}
                <span class='ui-icon ui-icon-tag ind-icon showvaldetail'></span> 
            {{/if}}
            <div style="display:none">
                {{#if this.Valuation_Reporting__r}}
                <div class='deal-valuation'>
                {{#each this.Valuation_Reporting__r}}
                    <div class='fund-valuation'>
                    <table>
                    <tr><td colspan="2"><strong>{{this.Fund__r.Name}}</strong></td></tr>
                    <tr><td>Original Cost</td><td class='amount'>{{money this.Original_Cost__c millions=1}} MM</td></tr>
                    <tr><td>Realizations to Date</td><td class='amount'>{{money this.Realizations_to_Date__c millions=1}} MM</td></tr>
                    <tr><td>Current Cost</td><td class='amount'>{{money this.Cost__c millions=1}} MM</td> </tr>
                    <tr><td>Carrying Value</td><td class='amount'>{{money this.Carrying_Value__c millions=1}} MM</td> </tr>
                    <tr><td>Grills Rank</td><td class='amount'>{{this.Grills_Rank__c}}</td> </tr>
                    <tr><td>Grills Value</td><td class='amount'>{{money this.Grills_Value__c millions=1}} MM</td></tr>
                    <tr><td>Ownership (basic)</td><td class='amount'>{{this.WP_Ownership_Basic__c}} % </td></tr>
                    <tr><td>Ownership (diluted)</td><td class='amount'>{{this.WP_Ownership_Fully_Diluted__c}} % </td></tr>
                    </table>
                    <br/>
                    </div>
                {{/each}}
                </div>
                {{/if}}
            </div>              

            <span class='ui-icon ui-icon-document ind-icon showcommentdetail'></span> 
            <div style="display:none">
                <div class='deal-comments'>
                    <table>
                    <tr><td><strong>Key Dates / Next Steps</strong></td></tr>
                    <tr><td class='emg-nextsteps' style='padding-left:1em'>{{{this.Key_Dates_Next_Steps__c}}}</td></tr>
                    <tr><td><hr/></td></tr>
                    {{#if this.EMG_Comments__r}}
                        {{#each this.EMG_Comments__r}}
                            <tr><td><strong>EMG Comments</strong></td></tr>
                            <tr><td class='emg-comment' data-comment-id='{{this.Id}}' style='padding-left:1em'>{{{this.EMG_Comment__c}}}</td></tr>
                            <tr><td><small><strong><span class='update-info'>{{this.EMG_Last_Updated_By__r.Name}} {{date this.EMG_Last_Updated_Date__c}}</span></strong></small></td></tr>
                        {{/each}}
                    {{else}}
                        <tr class='comment-hide'><td><strong>EMG Comments</strong></td></tr>
                        <tr class='comment-hide'><td class='emg-comment' data-comment-id='' style='padding-left:1em'><emp>Nothing Entered</emp></td></tr>
                        <tr class='comment-hide'><td><small><strong><span class='update-info'></span></strong></small></td></tr>
                    {{/if}}
                    </table>
                </div>
            </div>              

    </td>
    <td class='ind-icon'>
        <span id="circulate_to_emg" value="{{this.Id}}"
        {{#if show_emg_para}} 
        {{#if this.Circulate_to_EMG__c}}  
            class='cir-to-emg ui-icon ui-icon-check ind-icon on-emg'</span>
        {{else}}
            class='cir-to-emg ui-icon ui-icon-radio-off ind-icon not-emg'</span>
        {{/if}}  
        {{/if}}     
    </td>

    <td class='ind-icon'>
        <span id="include_to_group" value="{{this.Id}}" 
        {{#if this.Include_In_Group_Report__c}}  
            class='inc-to-grp ui-icon ui-icon-check ind-icon on-group'/>
        {{else}}
            class='inc-to-grp ui-icon ui-icon-radio-off ind-icon not-group'/>
        {{/if}}         
    </td>

    <td class='ind-icon'>
        <span id="highlight_in_group" value="{{this.Id}}" 
        {{#if this.Highlight_In_Group_Report__c}}  
            class='high-in-grp ui-icon ui-icon-check ind-icon hilite-group'/>
        {{else}}
            class='high-in-grp ui-icon ui-icon-radio-off ind-icon not-hilite'/>
        {{/if}}     
    </td>

    <td>
        {{#if this.EMG_Comments__r}}
            {{#each this.EMG_Comments__r}}
                <div class="emg-comment emg-comment-trunc" data-comment-id='{{this.Id}}'>{{{this.EMG_Comment__c}}}</div>
                <small><strong><span class='update-info'>{{this.EMG_Last_Updated_By__r.Name}} {{date this.EMG_Last_Updated_Date__c}}</span></strong></small>
            {{/each}}
        {{else}}
            <div class="emg-comment emg-comment-trunc" data-comment-id=''></div>
            <small><strong><span class='update-info'></span></strong></small>
        {{/if}}
    </td>

    <td align='center' style='vertical-align: middle;'>
           {{#if isDealUpdatable }}    
        <div class="btn-group">
            <button class="btn-mini dropdown-toggle" id='action-button' data-deal-id="{{this.Id}}" data-toggle="dropdown">
           Edit     
           <span class="caret"></span>
            </button>
            <ul class="dropdown-menu pull-right" dropdown-menu-id="{{this.Id}}">
                <li><a data-deal-id="{{this.Id}}" class="edit-emgcomment" href='#'>EMG Comment</a></li>
                {{#if show_emg_para}} 
                  <li><a data-deal-id="{{this.Id}}" class="edit-emgparagraph" href='#'>EMG Agenda Paragraph</a></li>
                {{/if}}
                <li><a data-deal-id="{{this.Id}}" class="edit-staffing" href='#'>Deal Team</a></li>
                <li><a data-deal-id="{{this.Id}}" class="edit-keyDates" href='#'>Key Dates/Next Steps</a></li>
                <li><a data-deal-id="{{this.Id}}" class="edit-dealStage" href='#'>Deal Stage</a></li>
                <li><a data-deal-id="{{this.Id}}" class="edit-dealReqRichTextFields" href='#'>Early Action Report: Deal</a></li>
                <li><a data-deal-id="{{this.Id}}" class="edit-dealReqRichTextFieldsEIR" href='#'>Early Action Report: EIR</a></li>
              {{#if this.ISDCRENABLED__c }}                   
                <li><a data-deal-id="{{this.Id}}" class="edit-dealClosingReport" href='#'>Deal Closing Report</a></li>    
                {{#if this.ISSCORECARDENABLED__c }}    
                    <li><a data-deal-id="{{this.Id}}" class="edit-dealInvestmentScorecard" href='#'>One-Year Scorecard</a></li>  
                {{/if}}      
              {{/if}}               
                <li class='divider'></li>
                <li><a data-deal-id="{{this.Id}}" data-company-id="{{this.Company__c}}" class="edit-financials" href='#'>Financials</a></li>
            </ul>
        </div>
            {{else}}
         <a href="../{{this.Id}}" target="_blank">View</a>
   		 {{/if}}                         
   
    </td>
    </tr> 
    {{/unless}}
    {{/each}}
    </table>
</script>

<script>
    var inreview = new Array(
        {status:'Committed-Deal Closed', liveclass:'portfolio'}, 
        {status:'Committed-Deal Signed', liveclass:'review'}, 
        {status:'Committed-Binding Bid Submitted', liveclass:'review'},
        {status:'Serious-Exclusivity/Negotiations', liveclass:'review'}, 
        {status:'Active-Detailed Diligence/Advisor(s) Engaged', liveclass:'review'}, 
        {status:'Early-Indicative Bid Submitted', liveclass:'review'},
        {status:'Early-Initial Diligence/Management Meeting', liveclass:'review'}, 
        {status:'Early-Prospect', liveclass:'review'}, 
        {status:'Deal Exited Portfolio', liveclass:'exited'}
    );
    
    var deal_icon_styles = {};
    _.each(inreview, function(elem, index){ deal_icon_styles[elem.status] = 'deal-' + elem.liveclass; });
    
    var USER_CONTACT_INFO = null;
    
</script>

<script>
var validationERROR='';
var convertedDate ='';
var convertedMonth ='';
var convertedDay ='';
var convertedYear ='';

function checkAlphaCharRule(txtDate,dlg){
    var letters = /^[ABCDEFGHJLMNOPQRSTUVY 0-9\-\/]*$/;
    if (txtDate.match(letters)){  
    }else{
        validationERROR="Please enter a valid Date. The Date contains a character which is not allowed.";
        return false;
    }
    return true;
}
function checkSpecialCharRule(txtDate){
   var specialChars = "~`!#$%^+=[*]';,{.}|\":<>?\\";        
   for (var i = 0; i < txtDate.length; i++) {
    //alert("specialChars.charAt("+i+")=" + specialChars.charAt(i));
    if (txtDate.indexOf(specialChars.charAt(i)) != -1) {
        //alert("SPECIAL CHAR FOUND=" + specialChars.charAt(i));
        return false;
    }
   }
   return true;
} 
function checkSplitRule(txtDate){
   var specialChars = "/- ";
   var splits;
   var nSplitters=0;
   var foundChar='';
   var separator='';
   var months = ["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"];
   var monthsIndex =[31,28,31,30,31,30,31,31,30,31,30,31];
   
   //Check if date has any indicated delimiters
   //Space for Q1, otherwise for - or /
   for (var i = 0; i < specialChars.length; i++) {
        splits = txtDate.split(specialChars[i]);    
        if (splits.length > 3){
            validationERROR = "Please enter a valid Date.";
            return false;
        }       
        if (splits.length > 1 && splits.length <=3){
            foundChar = foundChar + specialChars[i];
        }       
   }//for loop      
   if ( foundChar.length > 1 ) {
          validationERROR = "Please enter a valid Date.";
          return false;
   } 
   separator = foundChar;
   //Now split the date into mm/dd/yyyy
   var aoDate = txtDate.split(foundChar);
   
   //Check if there are no delimiter or more than 2?
   if (aoDate.length < 2 || aoDate.length > 3){
       validationERROR = "Please enter a valid Date.";
       return false;
   }   
   
   if (aoDate.length == 2){
        var f1 = aoDate[0];
        if (f1.length==1 || f1.length==2){
          //IF f1 is a numeric value   
          if (IsNumeric(f1)==true){
             var digit2 = Number(f1);
             if (digit2 < 1 || digit2 > 12) {
                validationERROR = "Please enter a valid Date. The month is not in correct format.";
                return false;
             }else{
               convertedMonth = digit2;
               var getDay = digit2-1;
               convertedDay = monthsIndex[getDay];
             }
          }      
          //IF MONTH is in digits
          //FOR CHAR Q 
          if (f1[0]=='Q') {
            if (f1[1]=='1'||f1[1]=='2'||f1[1]=='3'||f1[1]=='4'){ 
                
                switch (f1[1]) {
                    case '1':
                        convertedMonth ='3';
                        convertedDay ='31';
                        break;
                    case '2':
                        convertedMonth ='6';
                        convertedDay ='30';
                        break;
                    case '3':
                        convertedMonth ='9';
                        convertedDay ='30';
                        break;
                    case '4':
                        convertedMonth ='12';
                        convertedDay ='31';
                        break;
                }
            }else{
                validationERROR = "Please enter a valid Date. Please use only Q1, Q2, Q3 or Q4";
                return false;
            }
          }
          //FOR CHAR H
          if (f1[0]=='H') {
            if (f1[1]=='1'||f1[1]=='2'){  
                switch (f1[1]) {
                    case '1':
                        convertedMonth ='6';
                        convertedDay ='30';
                        break;
                    case '2':
                        convertedMonth ='12';
                        convertedDay ='31';
                        break;
                }
            }else{
                validationERROR = "Please enter a valid Date. Please use only H1 or H2";
                return false;
            }
          }     
        }          
        //IF 3 CHAR FOUND
        var foundMonth = false;
        //CHECK FOR 3 CODES MONTH
        if (f1.length==3){
          for (var i = 0; i < 12; i++) {
            if (f1 == months[i]){
               foundMonth = true;
               convertedMonth =  Number(i + 1) ;
            }             
          }//for loop
          if (!foundMonth){
            validationERROR = "Please enter a valid Date. The month is not in correct format.";
            return false;
          }
        }               
        //Now look for the year component
        var f2 = aoDate[1];
        if (f2.length > 4 || f2.length < 2){
          validationERROR = "Please enter a valid Date. The year is not in the correct format (YY or YYYY).";
          return false;
        }else{
          var yearIndex = Number(f2);
          if(yearIndex < 100){
              yearIndex = 2000 +  yearIndex;
              convertedYear = yearIndex;
          }else{
            convertedYear = yearIndex;
          }
          if (yearIndex<1000 || yearIndex>3000){
                validationERROR = "Please enter a valid Date.";
                return false;
          }
          convertedDate =  convertedMonth + "/" + convertedDay + "/" + convertedYear ;
        }
   }//IF ENDS - FOR ONLY 2 SPLITS
   
   //NOW IF THE SPLITS LEN is THREE
   if(aoDate.length==3){
        var f1 = aoDate[0];
        var foundMonth = false;
        var monthIndex =-1;
        var yearIndex = -1;
        var dayIndex = -1;
        var conversionNeeed = false;
                  
        //CHECK FOR MMM CODES MONTH
        if (f1.length==3){
          for (var i = 0; i < 12; i++) {
            if (f1 == months[i]){
               foundMonth = true;
               monthIndex = Number(i);
               convertedMonth =  Number(i+1);
               conversionNeeded = true;
            }           
          }//for loop
          if (!foundMonth){
            validationERROR = "Please enter a valid Date. The month is not in correct format (MMM).";
            return false;
          }
        }//only if the month is in 3 digits code    
        else{
            //NOW Check for any other month formats
            var monthValue = Number(f1);
            convertedMonth = Number(f1);
            if (monthValue>12 || monthValue <1) {
                validationERROR = "Please enter a valid Date.";
                return false;
            }
        }           

        //convert the second DD text into number
        var f2 = aoDate[1];
        var i2 = Number(f2);
        //alert("DEBUG i2=" + i2+ "\nmonthIndex=" + monthIndex + "\nmonthsIndex[monthIndex]=" + monthsIndex[monthIndex]);
        if (i2 > monthsIndex[monthIndex]){
            validationERROR = "Please enter a valid Date.";
            return false;
        }
        convertedDay = Number(f2);
        
        var f3 = aoDate[2];
        //convert the text into integer
        
        if (f3.length > 4 || f3.length < 2){
          validationERROR = "Please enter a valid Date. The year is not in the correct format (YY or YYYY).";
          return false;
        }else{
          yearIndex = Number(f3);
          convertedYear = Number(f3);
          //alert("yearIndex="+ yearIndex);
          if (yearIndex<1000 || yearIndex>3000){
                validationERROR = "Please enter a valid Date.";
                return false;
          }
          if(yearIndex < 100){
              conversionNeeded = true;
              yearIndex = 2000 +  yearIndex;
              convertedYear = yearIndex;
              monthIndex = monthIndex + 1;
              dayIndex = i2;
              convertedDay = i2;
          }else{
            conversionNeeded = true;
            convertedYear = yearIndex;
            yearIndex = yearIndex;
            monthIndex = monthIndex + 1;
            dayIndex = i2;
          }
          convertedDate =  convertedMonth + "/" + convertedDay + "/" + convertedYear ;
          //alert("convertedDate=>" + convertedDate);
        }           
        if (conversionNeeded){
            //alert("convertedDate=>" + convertedDate);
            txtDate = convertedDate;
        }
        if (checkdate(txtDate,"/")==false){
            validationERROR = "Date is not in a valid range.";
            return false;
        }
   }
   //alert("FINAL Converted Date Format =" +convertedDate);
   return true;
}
function IsNumeric(sText){
   var ValidChars = "0123456789";
   var IsNumber=true;
   var Char; 
   for (i = 0; i < sText.length && IsNumber == true; i++){ 
      Char = sText.charAt(i); 
      if (ValidChars.indexOf(Char) == -1){
         IsNumber = false;
      }
   }
   return IsNumber;
}
function checkAllFinanceDateRules(txtDate,dlg) {
    //RULES:   
    //AlphaRules(); SpecialRules(); NumericRules();
    //1. MM/YYYY (where M can be 1-12 ONLY)
    //2. QN YYYY (where N can be 1-4 ONLY)
    //3. HN YYYY (N can be 1-2 ONLY)
    //4. All alpha values are converted to uppercases (such as q to Q, h to H, no other alpha characters are allowed)
    //5. MM/DD/YYYY - ( date is always in month/day/year format but delimiter can be dash,slash or a space)
    
    var dDateLen=0;
    var trimmedDate='';
    trimmedDate = txtDate.trim();
    trimmedDate = trimmedDate.toUpperCase(); 
    dDateLen = trimmedDate.length;
    //alert("Validating Alpha, Special and Numeric Finance Date Rules=" + trimmedDate + "\n dDateLen=" + dDateLen);
    //First trim the string and check the length
    if (trimmedDate==''|| dDateLen > 11){
      dlg.find('.content-panel').show();
      dlg.find('.wait-panel').hide();    
      openGeneralDialog("Please enter a valid Date. The Date cannot be blank or contain more than 11 characters.","Error");
      return false;
    }
    if (checkAlphaCharRule(trimmedDate,dlg)==false){
      dlg.find('.content-panel').show();
      dlg.find('.wait-panel').hide();      
      openGeneralDialog(validationERROR,"Error");
      return false;
    }     
    if (checkSplitRule(trimmedDate)==false){
      dlg.find('.content-panel').show();
      dlg.find('.wait-panel').hide();      
      openGeneralDialog(validationERROR,"Error");
      return false;
    }    
    //alert("FINAL convertedDate=" + convertedDate);
    return true;
}
function unescapeHtml(safe) {
    return safe.replace(/&amp;/g, '&')
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>')
        .replace(/&quot;/g, '"')
        .replace(/&#039;/g, "'");
}
function escapeHtml(unsafe) {
    return unsafe
         .replace(/&/g, "&amp;")
         .replace(/</g, "&lt;")
         .replace(/>/g, "&gt;")
         .replace(/"/g, "&quot;")
         .replace(/'/g, "&#039;");
 }
function checkdate(txtDate, separator) {
    var aoDate,           // needed for creating array and object
        ms,               // date in milliseconds
        month, day, year; // (integer) month, day and year
    // if separator is not defined then set '/'
    if (separator === undefined) {
        separator = '/';
    }
    // split input date to month, day and year
    aoDate = txtDate.split(separator);
    // array length should be exactly 3 (no more no less)
    if (aoDate.length !== 3) {
        return false;
    }
    // define month, day and year from array (expected format is m/d/yyyy)
    // subtraction will cast variables to integer implicitly
    month = aoDate[0] - 1; // because months in JS start from 0
    day = aoDate[1] - 0;
    year = aoDate[2] - 0;
    // test year range
    if (year < 1000 || year > 3000) {
        return false;
    }
    // convert input date to milliseconds
    ms = (new Date(year, month, day)).getTime();
    // initialize Date() object from milliseconds (reuse aoDate variable)
    aoDate = new Date();
    aoDate.setTime(ms);
    // compare input date and parts from Date() object
    // if difference exists then input date is not valid
    if (aoDate.getFullYear() !== year ||
        aoDate.getMonth() !== month ||
        aoDate.getDate() !== day) {
        return false;
    }
    // date is OK, return true
    return true;
}

    /* Template Helpers */
    
    Handlebars.registerHelper('date', function(context, block) {
        if (context) {
            var attrs = block.hash;
            var format = attrs.format || "mm/dd/yy";
            return jQuery.datepicker.formatDate(format, new Date(context));
        }
        return "";
    });
    
Handlebars.registerHelper('fulljson', function(context, block) {
        if (context) {
        	alert('helo ' + JSON.stringify(context));
            return context;
        }
        return "";
    });
    
    Handlebars.registerHelper('money', function(context, block) {
        if (context) {
            var attrs = block.hash;
            var millions = attrs.millions || false;
            var _value = millions ? (context / 1000000.0).toFixed(2) : context;
            return _value.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
        }
        return "";
    });
    
    Handlebars.registerHelper('getHtmlString', function(val) {
    	return new Handlebars.SafeString(val);
    });
    
    Handlebars.registerHelper('HtmlorPlainTextSafe', function(val) {
    	//if ($jq(this).html($jq(this).outerHTML).html().indexOf('&lt') >= 0 && $jq(this).html($jq(this).outerHTML).html().indexOf('&gt') >= 0)
    	if (typeof Handlebars.SafeString(val) !== "undefined")
    		return new Handlebars.SafeString(val);
    	else
    		return val;
    });
    
    Handlebars.registerHelper('selected', function(val1, val2) {
        return val1 == val2 ? ' selected' : '';
    });    
    
    Handlebars.registerHelper('icon', function(context, block) {
        var _r = "";
        if (context) {
            var deal_status = context || 'none';
            var attrs = block.hash
            var dead = attrs.dead || false;
            var _s;            
            
            if ( dead ) {
                _r = "<span style='float:left' class='deal-icon deal-dead'></span>";
            } else {
                if ( deal_status in deal_icon_styles) {
                    _s = deal_icon_styles[deal_status];
                } else {
                    _s = 'deal-icon';
                }
                _r = "<span style='float:left' class='deal-icon " + _s + "'></span>";
            }
        }
        return _r;
    });
    /* End of Template Helpers */

   var dealidtype = "{!$ObjectType.Deal__c}";
   var dealidlen = {!LEN($ObjectType.Deal__c)};
   var editactionlink =  "{!URLFOR($Action.Deal__c.view, $ObjectType.Deal__c + RIGHT('000000000000000', 15 - LEN($ObjectType.Deal__c)))}";
   var deal_id_to_status_list= new Object();

   var $jq = jQuery.noConflict();
   var dcrReportTypeStatusList = new Object();
   var TZ_offset = (60000 * (new Date()).getTimezoneOffset());
   
   var globalCurrentTab='';
   //AR:Followup Report Type
   var globalDCRState='Closing';
   var globalFollowupLabel='';
   var globalFollowupId='';
   var globalInputValIn='';
   var globalDealName ='';
   var globalDealId='';
   var globalScorecardEnabled=false;
   var globalEMGCommentOkCancel = false;
        
   function openGeneralDialog(dialog_content,dialog_title){ 
         
         $jq( "#dialog-general-info" ).dialog({
            resizable: false,
            open: function(event, ui) {
              $jq(this).html(dialog_content);
            },          
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',     
            title: dialog_title,       
            buttons: {
               "OK": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });
         
   }
   
	function openGeneralDialogOkCancel(dialog_content, curr_dialog, dialog_title){          
         $jq( "#dialog-general-info" ).dialog({
            resizable: false,
            open: function(event, ui) {
              $jq(this).html(dialog_content);
            },          
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',     
            title: dialog_title,       
            buttons: {
               "OK": function() {  
               
		            //REALLY UGLY BUT I"M COPYING THE updateDealCommentary code here
		            var dlg = $jq("#editcommentarydialog");
		            var dealId = dlg.find("#params").attr('data-deal-id');
		            var commentId = dlg.find("#params").attr('data-comment-id');
		            var commentType = dlg.find("#params").attr('data-comment-type');
		            
		            var onBehalfOf = dlg.find("#user-onbehalf").val();
		            var names = dlg.find("#user-onbehalf").autocomplete( "option", "source" );
		            var onBehalfOfObj = _.find(names, function(obj){ return obj.value == onBehalfOf; });
		            
		            if ( !USER_CONTACT_INFO.deal_professional ) {
		                if ( !onBehalfOfObj ) {
		                    alert('You must select a deal professional on whose behalf you wish to submit the update');
		                    return false;
		                }
		            }
		            
		            var firstComment = commentId == '' ? true : false;
		            
		            var onBehalfOfId = null;
		            if ( onBehalfOfObj ) {
		                onBehalfOfId = onBehalfOfObj.contact_id;
		            }
		            
		            var dc = {
		                Id : commentId,
		                DealId : dealId,
		                /*Name : */
		                Comment : dlg.find("#comment").html(),                
		                /*UpdatedBy : */
		                /*UpdatedById : */
		                UpdatedOnBehalfOf : onBehalfOfId ? onBehalfOf : null,
		                UpdatedOnBehalfOfId : onBehalfOfId
		                /*UpdatedOn : */
		            };
		            
		            var end_point;
		            if (commentType == 'comment') {
		                end_point = '{!$RemoteAction.kjoDealReportController.updateEMGComment}';
		            } else if (commentType == 'paragraph') {
		                end_point = '{!$RemoteAction.kjoDealReportController.updateEMGParagraph}';
		            } else {
		                alert('Invalid comment type encountered - ' + commentType);
		            }
		
		            Visualforce.remoting.Manager.invokeAction(
		                end_point,
		                dc,
		                function(result, event) {
		                    if ( event.status ) {
		                        var elem;
		                        if ( commentType == 'comment' ) {
		                            if ( firstComment ) {
		                                elem = $jq("TR[data-deal-id=" + dealId + "] .emg-comment[data-comment-id='']");
		                                elem.attr('data-comment-id', result.Id);
		                            }
		                            
		                            elem = $jq("TR[data-deal-id=" + dealId + "] .emg-comment[data-comment-id=" + result.Id + "]");
		                            if ( elem.length > 0 ) {
		                                elem.html(result.Comment);
		                                $jq("TR[data-deal-id=" + dealId + "] .emg-comment-trunc").truncate({max_length:40});
		                                elem.parent('.comment-hide').removeClass('comment-hide').siblings('.comment-hide').removeClass('comment-hide');
		                            }
		                            
		                            elem = $jq("TR[data-deal-id=" + dealId + "] .update-info");
		                            if ( elem.length > 0 ) {
		                                elem.html((result.UpdatedOnBehalfOfId ? result.UpdatedOnBehalfOf : result.UpdatedBy) + ' ' + result.UpdatedOn);
		                            }
		                        }
		                        
		                        return true;
		                    } else {
		                        
		                        var matchString = "\'syntax error\'.  Logged in?";
		                        matchString = matchString.toLowerCase();
		                        if (event.message.toLowerCase().indexOf(matchString) == -1)
		                        {
		                         alert('Error encountered while updating commentary.\n' + event.message);
		                        }
		                        else
		                        {
		                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
		                          top.location.href='/apex/wp_mydeals';
		                        }                       
		                    }
		                },
		                {escape:false}
		            );
               
               $jq(this).dialog("close");
               dlg.dialog("close");               
        
               },
			   "Cancel": function() {                                                                                             
                   $jq(this).dialog("close"); 
               }			  
            }
         });         
	}   

    function openDcrDeleteMetricDialog() {
        $jq("#dcr-metric-delete-dialog").dialog({
            autoOpen: true,
            modal: true,
            position: 'center',
            width: 300,
            buttons: {
                "OK": function() {
                    var dlg =$jq(this);
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();
                   

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var deal_sc_hdr_id=dlg.find("#params").attr('data-scoreHeader-id');
                    var deal_line_item_id=dlg.find("#params").attr('data-lineItem-id');

    if(deal_id == ''){
    openGeneralDialog("Deal Id is null","Error");
    return;
    }
    
    if((deal_sc_hdr_id == '') || (deal_sc_hdr_id == null)){
    openGeneralDialog("DCR header id is null","Error");
    return;
    }

    if((deal_line_item_id == '') || (deal_line_item_id == null)){
    openGeneralDialog("DCR line Item id is null","Error");
    return;
    }
    
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.deleteDCR_Metric_Field}',
                deal_id,
                deal_sc_hdr_id,
                deal_line_item_id,
                function(result, event) {
                    if ( (result!= null) && (event.status) && ((result=='true') || (result=='SHOW LIST')) ) {
                    $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "]").remove();
                    
                    if(result=='SHOW LIST') {
                        var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog"); 
                        var isDealReadOnly;
  
                        if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
                         isDealReadOnly = true;
                        }
                        else {
                         isDealReadOnly = false;
                        }   
        
                        dlg_1.find("#dcrImportCompLabel").show();
                        dlg_1.find("#dcrTypeOfFinancial").show();
                        dlg_1.find("#dcrImportFinFromCompnay").show();
                        var temp_fin_list = new Array();
                        temp_fin_list.push('Revenue');
                        temp_fin_list.push('EBITDA');                        
                        populateDcrTypeOfFinancialList(dlg_1,temp_fin_list,deal_id,isDealReadOnly);
                        dlg_1.find("#dcrTypeOfFinancialSel").multiselect('rebuild');                                        
                    }
                    
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();                
                    dlg.dialog("close");                   
                    } else {
                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while processing deleteDCR_Metric_Field\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
            );

            },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }             
        }); 
    }

    function openDcrAddMetricDialog() {
        $jq("#dcr-metric-add-dialog").dialog({
            autoOpen: true,
            modal: true,
            position: 'center',
            width: 250,
            width: 450,
            buttons: {
                "Add": function() {
                    var dlg =$jq(this);           
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();               
                    var dcr_metric_field_template = Handlebars.compile($jq("#dcrNewMetricTablecontent-single-template").html());
                    var temp_list = new Array();
                    var dealUpdatable;

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var deal_line_item_id='';
                    var dcr_metric_name=dlg.find("#dcrMetricNameContent").val();
                    var dcr_metric_date=dlg.find("#dcrMetricPeriodEndedContentAdd").val();
                    var dcr_metric_value=dlg.find("#dcrMetricValueContent").val();
                    var dcr_metric_unit=dlg.find("#dcrMetricUnitContent").val();
                    var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
                    var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
                    var deal_sc_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];
  
            var  entered_date_val=null;
            var  sorted_date_val=null;
            
            if(checkAllFinanceDateRules(dcr_metric_date,dlg)==false ) {
              return false;
            }else{
                entered_date_val = dcr_metric_date;       
                sorted_date_val = new Date(convertedDate);   
                sorted_date_val = sorted_date_val.toUTCString();
            } 
            if(dcr_metric_name == '' || dcr_metric_name.length > 14){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
                    if (dcr_metric_name.length > 14){
                        openGeneralDialog("The Custom Metric cannot be more than 14 characters.","Error");
                    }else{
                        openGeneralDialog("Please enter a name for the Custom Metric.","Error");
                    }
              return false;
            }       
            if(dcr_metric_date == ''){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter a valid Date. The Date cannot be blank.","Error");
              return false;
            }                   
            if(dcr_metric_value == ''){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter a Value for the Custom Metric. Value can contain 9 characters.","Error");
              return false;
            }
            if (dcr_metric_unit.length > 10 ){
              dlg.find('.content-panel').show();
              dlg.find('.wait-panel').hide();      
              openGeneralDialog("Please enter a valid Unit. Units can contain 10 characters.","Error"); 
              return false;
            }
            if(deal_id == ''){
            openGeneralDialog("Deal Id is null","Error");
            return;
            }
            if(dcr_reportType_local == ''){
            openGeneralDialog("Please specify Type Of Report first","Error");
            return;
            }
        
            if((deal_sc_hdr_id == '') || (deal_sc_hdr_id == null)){
            openGeneralDialog("Please create header first for the selected Type Of Report","Error");
            return;
            }
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateDCR_Metric_Field}',
                deal_id,
                deal_sc_hdr_id,
                deal_line_item_id,
                dcr_metric_name,
                entered_date_val,
                sorted_date_val,
                dcr_metric_value,
                dcr_metric_unit,
                function(result, event) {
                    if ( (result!= null) &&(result.status=='true') && (event.status) ) {
       
                    if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
                      dealUpdatable = false; }
                    else {
                      dealUpdatable = true;
                    }
                    if(entered_date_val == null) {
                      entered_date_val='';
                    }
                    temp_list.push({isDealUpdatable:dealUpdatable,deal_id:deal_id,scHead_id:result.dealScoreHeaderId,lineItem_id:result.dealLineItemId,
                     dcr_metric_name:dcr_metric_name,dcr_metric_per_end:dcr_metric_date,dcr_metric_value:dcr_metric_value,dcr_metric_unit:dcr_metric_unit});
                    $jq("TABLE#DCR_NewMetricTable > tbody:last").append(dcr_metric_field_template({dcrMetrics :temp_list}));
                    dlg.find("#dcrMetricNameContent").val('');
                    dlg.find("#dcrMetricPeriodEndedContentAdd").val('');
                    dlg.find("#dcrMetricValueContent").val('');
                    dlg.find("#dcrMetricUnitContent").val('');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();               
                    dlg.dialog("close");
                  
                    } else if(result.status=='false') {
                      alert('Adding/Updating Dcr Metric Failed');
                     }                 
                     else {
                      
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while addUpdateDCR_Metric_Field\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                     
                    }
                },
                {escape:false}
            );
    
                },
                "Cancel": function() {
                    var dlg=$jq(this);
                    dlg.find("#dcrMetricNameContent").val('');
                    dlg.find("#dcrMetricPeriodEndedContentAdd").val('');
                    dlg.find("#dcrMetricValueContent").val(''); 
                    dlg.find("#dcrMetricUnitContent").val('');                  
                    dlg.dialog("close");
                }
            }             
        });
    
    
    }
    
  function strip_tags (str, allowed_tags){
        var key = '', allowed = false;
        var matches = [];    var allowed_array = [];
        var allowed_tag = '';
        var i = 0;
        var k = '';
        var html = ''; 
        var replacer = function (search, replace, str) {
            return str.split(search).join(replace);
        };
        // Build allowes tags associative array
        if (allowed_tags) {
            allowed_array = allowed_tags.match(/([a-zA-Z0-9]+)/gi);
        }
        str += '';
    
        // Match tags
        matches = str.match(/(<\/?[\S][^>]*>)/gi);
        // Go through all HTML tags
        for (key in matches) {
            if (isNaN(key)) {
                    // IE7 Hack
                continue;
            }
    
            // Save HTML tag
            html = matches[key].toString();
            // Is tag not in allowed list? Remove from str!
            allowed = false;
    
            // Go through all allowed tags
            for (k in allowed_array) {            // Init
                allowed_tag = allowed_array[k];
                i = -1;
    
                if (i != 0) { i = html.toLowerCase().indexOf('<'+allowed_tag+'>');}
                if (i != 0) { i = html.toLowerCase().indexOf('<'+allowed_tag+' ');}
                if (i != 0) { i = html.toLowerCase().indexOf('</'+allowed_tag)   ;}
    
                // Determine
                if (i == 0) {                allowed = true;
                    break;
                }
            }
            if (!allowed) {
                str = replacer(html, "", str); // Custom replace. No regexing
            }
        }
        return str;
    }
        
    function openDcrEditMetricDialog() {
        $jq("#dcr-metric-edit-dialog").dialog({
            autoOpen: true,
            modal: true,
            position: 'center',
            height: 250,
            width: 450,
            buttons: {
                "Update": function() {
                    var dlg =$jq(this);           
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();               

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var deal_sc_hdr_id=dlg.find("#params").attr('data-scoreHeader-id');
                    var deal_line_item_id=dlg.find("#params").attr('data-lineItem-id');
                    var dcr_metric_name=dlg.find("#dcrMetricNameContent").val();
                    var dcr_metric_date=dlg.find("#dcrMetricPeriodEndedContentEdit").val();
                    var dcr_metric_value=dlg.find("#dcrMetricValueContent").val();
                    var dcr_metric_unit=dlg.find("#dcrMetricUnitContent").val();
                    
            var  entered_date_val=null;
            var sorted_date_val=null;
            
            if(checkAllFinanceDateRules(dcr_metric_date,dlg)==false ) {
              return false;
            }else{
                entered_date_val = dcr_metric_date;        
                sorted_date_val = new Date(convertedDate);   
                sorted_date_val = sorted_date_val.toUTCString();
            }          
            if(dcr_metric_name == '' || dcr_metric_name.length > 14){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
                    if (dcr_metric_name.length > 14){
                         openGeneralDialog("The Custom Metric cannot be more than 14 characters.","Error");
                    }else{
                         openGeneralDialog("Please enter a name for the Custom Metric.","Error");
                    }
              return false;
            }   
            if(dcr_metric_value == ''){
              dlg.find('.content-panel').show();
              dlg.find('.wait-panel').hide();      
              openGeneralDialog("Please enter a Value for the Custom Metric.","Error"); 
              return false;
            }
            if (dcr_metric_unit.length > 10 ){
              dlg.find('.content-panel').show();
              dlg.find('.wait-panel').hide();      
              openGeneralDialog("Please enter a valid Unit. Units can contain 10 characters.","Error"); 
              return false;
            }

    if(deal_id == ''){
    openGeneralDialog("Deal Id is null","Error");
    return;
    }
    
    if((deal_sc_hdr_id == '') || (deal_sc_hdr_id == null)){
    openGeneralDialog("DCR header id is null","Error");
    return;
    }

    if((deal_line_item_id == '') || (deal_line_item_id == null)){
    openGeneralDialog("DCR line Item id is null","Error");
    return;
    }
    
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateDCR_Metric_Field}',
                deal_id,
                deal_sc_hdr_id,
                deal_line_item_id,
                dcr_metric_name,
                entered_date_val,
                sorted_date_val,
                dcr_metric_value,
                dcr_metric_unit,
                function(result, event) {
                    if ( (result!= null) &&(result.status=='true') && (event.status) ) {
       
                    $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #dcrMetricName").text(dcr_metric_name);
                    $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #dcrMetricPeriodEnded").text(dcr_metric_date);
                    $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #dcrMetricValue").text(dcr_metric_value);
                    $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #dcrMetricUnit").text(dcr_metric_unit);
                    dlg.find("#dcrMetricNameContent").val('');
                    dlg.find("#dcrMetricPeriodEndedContentEdit").val('');
                    dlg.find("#dcrMetricValueContent").val('');
                    dlg.find("#dcrMetricUnitContent").val('');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();               
                    dlg.dialog("close");
                  
                    } else if(result.status=='false') {
                      alert('Adding/Updating Dcr Metric Failed');
                     }                 
                     else {
                      
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered addUpdateDCR_Metric_Field\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                     
                    }
                },
                {escape:false}
            );
    
                },
                "Cancel": function() {
                    var dlg=$jq(this);
                    dlg.find("#dcrMetricNameContent").val('');
                    dlg.find("#dcrMetricPeriodEndedContentEdit").val('');
                    dlg.find("#dcrMetricValueContent").val('');     
                    dlg.find("#dcrMetricUnitContent").val('');          
                    dlg.dialog("close");
                }
            }             
        }); 
    
    }
    
    function openEarDeleteMetricDialog() {
        $jq("#ear-metric-delete-dialog").dialog({
            autoOpen: true,
            modal: true,
            position: 'center',
            width: 300,
            buttons: {
                "OK": function() {
                    var dlg =$jq(this);
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();
                   

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var deal_sc_hdr_id=dlg.find("#params").attr('data-scoreHeader-id');
                    var deal_line_item_id=dlg.find("#params").attr('data-lineItem-id');

    if(deal_id == ''){
    openGeneralDialog("Deal Id is null","Error");
    return;
    }
    
    if((deal_sc_hdr_id == '') || (deal_sc_hdr_id == null)){
    openGeneralDialog("DCR header id is null","Error");
    return;
    }

    if((deal_line_item_id == '') || (deal_line_item_id == null)){
    openGeneralDialog("DCR line Item id is null","Error");
    return;
    }
    
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.deleteEAR_Metric_Field}',
                deal_id,
                deal_sc_hdr_id,
                deal_line_item_id,
                function(result, event) {
                    if ( (result!= null) && (event.status) && (result=='true')) {
                    $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "]").remove();
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();                
                    dlg.dialog("close");                   
                    } else {
                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while processing deleteEAR_Metric_Field\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
            );

            },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }             
        });

    }
            
    function openEarAddMetricDialog() {
        $jq("#ear-metric-add-dialog").dialog({
            autoOpen: true,
            modal: true,
            position: 'center',
            width: 400,
            buttons: {
                "Add": function() {
                    var dlg =$jq(this);           
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();               
                    var ear_metric_field_template = Handlebars.compile($jq("#earNewMetricTablecontent-template").html());
                    var temp_list = new Array();
                    var dealUpdatable;

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var deal_sc_hdr_id='';
                    var deal_line_item_id='';
                    var ear_metric_name=dlg.find("#earMetricNameContent").val();
                    var ear_metric_date=dlg.find("#earMetricPeriodEndedContentAdd").val();
                    var ear_metric_value=dlg.find("#earMetricValueContent").val();

            var  entered_date_val=null;
           
            if(ear_metric_date != ''){
            entered_date_val = new Date(ear_metric_date);
            var  compare_date_val = new Date(1980,0,1);
            if(checkdate(ear_metric_date,'/')== false) {
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();         
              openGeneralDialog("Please enter valid date:mm/dd/yyyy","Error");
              return false;
            } else if(entered_date_val < compare_date_val) {
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter date on or beyond Jan 01 1980","Error");
              return false;
            }
            entered_date_val = entered_date_val.toUTCString();
            }
            
            if(ear_metric_name == ''){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter EAR Metric Name","Error");
              return false;
            }

            if(ear_metric_value == ''){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter EAR Metric Value","Error");
              return false;
            }
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateEAR_Metric_Field}',
                deal_id,
                deal_sc_hdr_id,
                deal_line_item_id,
                ear_metric_name,
                entered_date_val,
                ear_metric_value,
                function(result, event) {
                    if ( (result!= null) &&(result.status=='true') && (event.status) ) {
       
                    if(deal_id_to_status_list[dlg.find("#params").attr('data-deal-id')].is_deal_readonly == true) {
                      dealUpdatable = false; }
                    else {
                      dealUpdatable = true;
                    }
                    if(entered_date_val == null) {
                      entered_date_val='';
                    }
                    temp_list.push({isDealUpdatable:dealUpdatable,deal_id:deal_id,scHead_id:result.dealScoreHeaderId,lineItem_id:result.dealLineItemId,
                     ear_metric_name:ear_metric_name,ear_metric_per_end:ear_metric_date,ear_metric_value:ear_metric_value});
                    $jq("TABLE#EAR_NewMetricTable > tbody:last").append(ear_metric_field_template({earMetrics :temp_list}));
                    dlg.find("#earMetricNameContent").val('');
                    dlg.find("#earMetricPeriodEndedContentAdd").val('');
                    dlg.find("#earMetricValueContent").val('');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();               
                    dlg.dialog("close");
                  
                    } else if(result.status=='false') {
                      alert('Adding/Updating Ear Metric Failed');
                     }                 
                     else {
                      
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                     
                    }
                },
                {escape:false}
            );
    
                },
                "Cancel": function() {
                    var dlg=$jq(this);
                    dlg.find("#earMetricNameContent").val('');
                    dlg.find("#earMetricPeriodEndedContentAdd").val('');
                    dlg.find("#earMetricValueContent").val('');             
                    dlg.dialog("close");
                }
            }             
        });

    }   
    
    function openEarEditMetricDialog() {
        $jq("#ear-metric-edit-dialog").dialog({
            autoOpen: true,
            modal: true,
            position: 'center',
            width: 400,
            buttons: {
                "Update": function() {
                    var dlg =$jq(this);           
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();               

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var deal_sc_hdr_id=dlg.find("#params").attr('data-scoreHeader-id');
                    var deal_line_item_id=dlg.find("#params").attr('data-lineItem-id');
                    var ear_metric_name=dlg.find("#earMetricNameContent").val();
                    var ear_metric_date=dlg.find("#earMetricPeriodEndedContentEdit").val();
                    var ear_metric_value=dlg.find("#earMetricValueContent").val();

            var  entered_date_val=null;
           
            if(ear_metric_date != ''){
            entered_date_val = new Date(ear_metric_date);
            var  compare_date_val = new Date(1980,0,1);
            if(checkdate(ear_metric_date,'/')== false) {
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();         
              openGeneralDialog("Please enter valid date:mm/dd/yyyy","Error");
              return false;
            } else if(entered_date_val < compare_date_val) {
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter date on or beyond Jan 01 1980","Error");
              return false;
            }
            entered_date_val = entered_date_val.toUTCString();
            }
            
            if(ear_metric_name == ''){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter EAR Metric Name","Error");
              return false;
            }

            if(ear_metric_value == ''){
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();             
              openGeneralDialog("Please enter EAR Metric Value","Error");
              return false;
            }
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateEAR_Metric_Field}',
                deal_id,
                deal_sc_hdr_id,
                deal_line_item_id,
                ear_metric_name,
                entered_date_val,
                ear_metric_value,
                function(result, event) {
                    if ( (result!= null) &&(result.status=='true') && (event.status) ) {
       
                    $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #earMetricName").text(ear_metric_name);
                    $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #earMetricPeriodEnded").text(ear_metric_date);
                    $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + deal_line_item_id + "] #earMetricValue").text(ear_metric_value);
                    dlg.find("#earMetricNameContent").val('');
                    dlg.find("#earMetricPeriodEndedContentEdit").val('');
                    dlg.find("#earMetricValueContent").val('');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();               
                    dlg.dialog("close");
                  
                    } else if(result.status=='false') {
                      alert('Adding/Updating Ear Metric Failed');
                     }                 
                     else {
                      
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                     
                    }
                },
                {escape:false}
            );
    
                },
                "Cancel": function() {
                    var dlg=$jq(this);
                    dlg.find("#earMetricNameContent").val('');
                    dlg.find("#earMetricPeriodEndedContentEdit").val('');
                    dlg.find("#earMetricValueContent").val('');             
                    dlg.dialog("close");
                }
            }             
        });

    }   
    
    function getColorClass(e) {
      var className='';
     
      if(e.data.Line_Item_Color__c == '#ebf1de') {
        className ='fieldContentColorGreen';
      } else if(e.data.Line_Item_Color__c == '#f2dcdb') {
       className ='fieldContentColorPink';
      } else if(e.data.Line_Item_Color__c == '#ffffff') {
       className ='fieldContentColorWhite';
      }
      return className;
    }  

    function callSelectAll() {
        alert("callSelectAll");
        var dlg = $jq("#edit-deal-closing-report-fields-Dialog");       
        var $el = dlg.find("#dcrReportViewContent").find("#dcrReportSectorSel");
        multiselect_selectAll($el);
    }   
    
    function saveAllFinancialFollowupInput(){
        //alert('Make sure not to update any Line Item values.\n Now all saving are done while creating headers ids');
        //return true;
        local_dlg = $jq("#edit-deal-closing-report-fields-Dialog");
        var deal_id= local_dlg.find("#params").attr('data-deal-id');  
        var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();  
        var dcr_reportType_local = local_dlg.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
        var header_id = dcrReportTypeStatusList[dcr_reportType_local];
        //alert("Step 4. dcr_reportType_local-->" + dcr_reportType_local + "\ndeal id-->" + deal_id + "\nfollowup_hdr_id-->" + header_id);
        var remoteCall = '{!$RemoteAction.kjoDealReportController.saveAll_Financial_FollowupInput}';
        Visualforce.remoting.Manager.invokeAction(
            remoteCall,
            deal_id,
            header_id,
            function(result, event) {
                if ( (result!= null) && (event.status) ) {
                    if(deal_id!=result){
                      alert('saveAll_Financial_FollowupInput failed. Please check.');
                      return;
                    }                           
                    local_dlg.find('.content-panel').show();
                    local_dlg.find('.wait-panel').hide();                
                    } else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
        );
        return true;
    }
    function showPreviewOfScorecardReport() {   
      local_dlg = $jq("#edit-deal-closing-report-fields-Dialog");
      var dealId = local_dlg.find("#params").attr('data-deal-id');  
      var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();  
      var dcr_reportType_local = local_dlg.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
      //alert("dcr_reportType_local="+dcr_reportType_local);
      var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];
      
      //alert("DEBUG REPORT PREVIEW 1. dealId =" + dealId + "\n2.deal_hdr_id=" + deal_hdr_id);
      
      if((dcr_reportType_local == '')||(dcr_reportType_local == null)){
            openGeneralDialog("Please specify Type Of Report first","Error");
            return;
      }
      if((deal_hdr_id == '') || (deal_hdr_id == null)){
        openGeneralDialog("The One-Year Scorecard for " + deal_name + " will be available tomorrow.","Alert");
        return;
      }  
      $jq( "#dialog-edit-preview-dcr-report-info" ).html(
              "<iframe src =\"/apex/dcr_scorecard_pdf_page_report?id="+
              dealId +"&sch_id="+deal_hdr_id+ "#view=FitH" +
              "\"  type=\"application/html\"  style=\"width:99%;height:99%;overflow:scroll;\" frameborder=\"1\" scrolling=\"auto\"></iframe> ");              
         $jq( "#dialog-edit-preview-dcr-report-info" ).dialog({
            resizable: true,
            autoOpen: true, 
            modal: true, 
            width: 1000,
            height: 500,             
            position: 'center',
            title: 'Previewing Scorecard for '+deal_name,             
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });      
    }    
    
    function showPreviewOfDcrReport() {   
      local_dlg = $jq("#edit-deal-closing-report-fields-Dialog");
      var dealId = local_dlg.find("#params").attr('data-deal-id');  
      var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();  
      var dcr_reportType_local = local_dlg.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
      //alert("dcr_reportType_local="+dcr_reportType_local);
      var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];
      
      //alert("DEBUG REPORT PREVIEW 1. dealId =" + dealId + "\n2.deal_hdr_id=" + deal_hdr_id);
      
      if((dcr_reportType_local == '')||(dcr_reportType_local == null)){
            openGeneralDialog("Please specify Type Of Report first","Error");
            return;
      }
      if((deal_hdr_id == '') || (deal_hdr_id == null)){
        openGeneralDialog("Please create header first for the selected Type Of Report","Error");
        return;
      }  
      $jq( "#dialog-edit-preview-dcr-report-info" ).html(
              "<iframe src =\"/apex/dcr_sample_pdf_page_report?id="+
              dealId +"&sch_id="+deal_hdr_id+
              "\"  type=\"application/html\"  style=\"width:97%; height:97%; overflow: scroll;\" frameborder=\"1\" scrolling=\"auto\"></iframe> ");              
         $jq( "#dialog-edit-preview-dcr-report-info" ).dialog({
            resizable: true,
            autoOpen: true, 
            modal: true, 
            width: 900,
            height: 550,             
            position: 'center',
            title: 'Previewing DCR report for - '+deal_name,             
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });      
    }
    
    function populateDcrTypeOfFinancialList(dlg,comp_type_list) {
               dlg.find("#dcrTypeOfFinancialSel").empty();
              
               for(var grp_index=0;grp_index <comp_type_list.length;grp_index++)
               {
                 dlg.find("#dcrTypeOfFinancialSel").append('<option value="' +
                   comp_type_list[grp_index] + '" selected>' + comp_type_list[grp_index] + '</option>');   
               }  
              
               dlg.find("#dcrTypeOfFinancialSel").multiselect({
                  maxHeight: 200,
                  includeSelectAllOption: false,
                  buttonWidth: '255px',
                  buttonClass: 'btn btn-default customBtnOverflow',
                  nonSelectedText: 'Select ...',
                  numberDisplayed: 6
              });                    
    }
    
    function populateSelectedFollowupDcrReportDetailFields(){
              //alert("populateSelectedFollowupDcrReportDetailFields");
              var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
              var deal_id_1 = dlg_1.find("#params").attr('data-deal-id');
              var deal_name = $jq("TR[data-deal-id=" + deal_id_1 + "] #dealname").text();
              var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();     
              var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local]; 
              
              //alert("DEBUG:AR>populateSelectedFollowupDcrReportDetailFields->" +"\n1. dcr_reportType_local=" + dcr_reportType_local + "\n2. deal id=" + deal_id_1 + "\n3. header id=" + deal_hdr_id );                 
              //AR:FOLLOW UP REPORT STARTS HERE     
              globalFollowupId = deal_hdr_id;
              //alert("globalFollowupId-->"+globalFollowupId + "\ndcr_reportType_local-->"+ dcr_reportType_local);
              //Now get the header id of the 'Closing' report instead of the the selected 'Follow Up' - Report Type
              var dispAll='';
              var temp_id='';
              var matchstr = '/' + dcr_reportType_local + '/ig';
              for (var i in dcrReportTypeStatusList){
                temp_id = i.toString().match(matchstr);
                if (temp_id !=null) {
                 deal_hdr_id = dcrReportTypeStatusList[i];
                }
                dispAll = dispAll + "\nR["+ i +"]-->" + dcrReportTypeStatusList[i] +"=>" + temp_id;
              }     
              //alert("deal_hdr_id=>>" + deal_hdr_id);
              //alert("DEBUG:AR>FollowupDcrReportDetailFields>" + "\n1. dcr_reportType_local=" + dcr_reportType_local + "\n2. deal id=" + deal_id_1 + "\n3. header id=" + deal_hdr_id + "\n4 All Reports ->" + dispAll);            
              //AR:FOLLOW UP REPORT ENDS
              var isDealReadOnly;
              var isHeaderClosing, isHeaderFound;
              if(deal_id_to_status_list[deal_id_1].is_deal_readonly == true) {
                      isDealReadOnly = true;
                    }
                    else {
                      isDealReadOnly = false;
              }   
              if(dcr_reportType_local == ''){
                openGeneralDialog("Please specify Type Of Report first","Error");
                return;
              }
              if((deal_hdr_id == '') || (deal_hdr_id == null)){
                    openGeneralDialog("The One-Year Scorecard for " + deal_name + " will be available tomorrow.","Alert");
                    return;
              }
              isHeaderFound = isHeaderClosing = false;
              for (var i in dcrReportTypeStatusList){
                if(dcrReportTypeStatusList[i] == deal_hdr_id){
                    var temp_list = i.toString().match(/Follow Up-1/ig);
                    if (temp_list != null){                                        
                        isHeaderFound=isHeaderClosing=true;
                    } else {
                        isHeaderFound=true;
                    }
                    break;         
                }
               }       
               if(isHeaderFound == false){
                openGeneralDialog("Selected Header not found.Please check","Error");
                return;
              }
              var dcr_fields;      
              if(isDealReadOnly == true){
                    dcr_fields={isDealUpdatable:false,deal_id:deal_id_1,scHead_id:deal_hdr_id};                             
              }
                 else{
                    dcr_fields={isDealUpdatable:true,deal_id:deal_id_1,scHead_id:deal_hdr_id};                          
              }
              //alert(".getDCR_Followup_Report_Detail_Fields-->1. deal_id_1=" + deal_id_1 + "\n2. deal_hdr_id=" + deal_hdr_id);
              
              Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getDCR_Followup_Report_Detail_Fields}',
                deal_id_1,
                deal_hdr_id,
                function(result2, event2) {
                    if ( (event2.status) && (result2 != null) ) {
                       $jq.map(result2.investmentThesis, function( e, i ) {
                             e.tableId='DCR_InvestmentThesis';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                             e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for Investment Thesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }
                        });
                        $jq.map(result2.investmentRisks, function( e, i ) {                             
                             e.tableId='DCR_InvestmentRisks';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                              
                         });
                         $jq.map(result2.keyValueCreation, function( e, i ) {
                             e.tableId='DCR_KeyValueCreation';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                           
                         });
                         $jq.map(result2.keyCompanyGoals, function( e, i ) {
                             e.tableId='DCR_KeyCompanyGoals';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                             
                         });
                         $jq.map(result2.managementTeam, function( e, i ) {
                             e.tableId='DCR_ManagementTeam';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                                   
                         });
                         $jq.map(result2.wPTeamActionItems, function( e, i ) {
                             e.tableId='DCR_WPTeamActionItems';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                            
                         });
                        var dcr_all_template = Handlebars.compile($jq("#dcr-lineitem-for-followup-template").html()); 
                        dlg_1.find("#investmentThesisContent").html(dcr_all_template({dealClosingTableId:'DCR_InvestmentThesis',
                                                                             firstColName:'Investment Thesis',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.investmentThesis}));                       
                        dlg_1.find("#investmentRisksContent").html(dcr_all_template({dealClosingTableId:'DCR_InvestmentRisks',
                                                                             firstColName:'Investment Risks',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.investmentRisks}));                                                                     
                        dlg_1.find("#keyValueCreationContent").html(dcr_all_template({dealClosingTableId:'DCR_KeyValueCreation',
                                                                             firstColName:'Key Value Creation Drivers',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.keyValueCreation}));
                        dlg_1.find("#keyCompanyGoalsContent").html(dcr_all_template({dealClosingTableId:'DCR_KeyCompanyGoals',
                                                                             firstColName:'Key Company Goals and Milestones',
                                                                             deal:dcr_fields,              
                                                                             dealClosingFields : result2.keyCompanyGoals}));
                                                                             
                        dlg_1.find("#managementTeamContent").html(dcr_all_template({dealClosingTableId:'DCR_ManagementTeam',
                                                                             firstColName:'Management Team and Board Additions/Development Goals',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.managementTeam}));
                        dlg_1.find("#wPTeamActionItemsContent").html(dcr_all_template({dealClosingTableId:'DCR_WPTeamActionItems',
                                                                             firstColName:'WP Team Action Items',  
                                                                             deal:dcr_fields,              
                                                                             dealClosingFields : result2.wPTeamActionItems}));                                                                                                                      
                        $jq.map(result2.finance_targets.dcrMetrics, function( e, i ) {
                                if(isDealReadOnly) {
                                    e.isDealUpdatable = false;
                                }else {
                                    e.isDealUpdatable = true;
                                }
                         });                         
                        $jq("#DCR_InvestmentThesis").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});
                        $jq("#DCR_InvestmentRisks").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());}); 
                        $jq("#DCR_KeyValueCreation").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                
                        $jq("#DCR_KeyCompanyGoals").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                
                        $jq("#DCR_ManagementTeam").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                
                        $jq("#DCR_WPTeamActionItems").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                

                        var InvestmentThesis = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid,disp='';
                           var num =1;
                           var ids ='';
                           var count = $jq(tabid).length;                           
                             if (count>1){                                                                   
                                $jq(tabid).each(function(){    
                                    dealid = $jq(this).attr('data-deal-id');
                                    headerid =  $jq(this).attr('data-scHead-id');    
                                    //disp = disp + num + ". " + $jq(this).attr('data-dealClosingField-id') + "\n";                              
                                    ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ' ;
                                    num = num + 1;
                                    tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert(disp);
                             updateLineItemsOrder(ids); 
                             return ui; 
                        };
                        $jq("#DCR_InvestmentThesis-id").sortable({                                              
                            out:InvestmentThesis
                        }).disableSelection();  
                                             
                        var InvestmentRisks = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;
                           var ids ='';
                           var count = $jq(tabid).length;                          
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("InvestmentRisks count=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui; 
                        };
                        $jq("#DCR_InvestmentRisks-id").sortable({                                              
                            out:InvestmentRisks
                        }).disableSelection();                      
                        
                        var KeyValueCreation = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;
                           var ids ='';
                           var count = $jq(tabid).length;   
                           //alert(" count for tabid" + tabid + " count=" + count);
                           //getTabbedLineItemsIds(count);
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("KeyValueCreation count=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };                        
                        $jq("#DCR_KeyValueCreation-id").sortable({
                            out:KeyValueCreation
                        }).disableSelection();     
                                                                     
                        var KeyCompanyGoals = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;   
                           var ids ='';                         
                           var count = $jq(tabid).length;
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("KeyCompanyGoals count=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };              
                        $jq("#DCR_KeyCompanyGoals-id").sortable({
                            out:KeyCompanyGoals
                        }).disableSelection();              
                              
                        var ManagementTeam = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;     
                           var ids ='';                       
                           var count = $jq(tabid).length;
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("ManagementTeamount=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };                                              
                        $jq("#DCR_ManagementTeam-id").sortable({
                            out:ManagementTeam
                        }).disableSelection(); 
                        
                        var WPTeamActionItems = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;        
                           var ids ='';                    
                           var count = $jq(tabid).length;
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("DCR_WPTeamActionItems=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };                                              
                        $jq("#DCR_WPTeamActionItems-id").sortable({
                            out:WPTeamActionItems
                        }).disableSelection();                                                         
                                                                                                    
                        var dcr_financials_template = Handlebars.compile($jq("#dcr-followup-financialtarget-template").html());                                              
                        dlg_1.find('#dcrFinancialTablecontent').html(
                                dcr_financials_template({dcrMetrics : result2.finance_targets.dcrMetrics }));       
                                        
                        populateDcrTypeOfFinancialList(dlg_1,result2.finance_targets.compFinNameList);
                        
                        dlg_1.find("#dcrTypeOfFinancialSel").multiselect('rebuild');                                        
                        if(result2.finance_targets.compFinNameList.length == 0) {
                           dlg_1.find("#dcrImportCompLabel").hide();
                           dlg_1.find("#dcrTypeOfFinancial").hide();
                           dlg_1.find("#dcrImportFinFromCompnay").hide();
                        } else {
                            dlg_1.find("#dcrImportCompLabel").show();
                            dlg_1.find("#dcrTypeOfFinancial").show();
                            dlg_1.find("#dcrImportFinFromCompnay").show();                                        
                        }                                                                      
                                    } else {
                                        var matchString = "\'syntax error\'.  Logged in?";
                                        matchString = matchString.toLowerCase();
                                        if (event2.message.toLowerCase().indexOf(matchString) == -1){
                                         alert('Problem Encountered\n' + event2.message);
                                        }
                                        else{
                                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                          top.location.href='/apex/wp_mydeals';
                                        }                      
                                    }
                                },
                                {escape:false}
                            );      
    }
    
    function populateSelectedDcrReportDetailFields(){
              var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
              var deal_id_1 = dlg_1.find("#params").attr('data-deal-id');
              var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
              //alert("populateSelectedDcrReportDetailFields-->1. dcr_reportType_local=" + dcr_reportType_local + "\n2. deal header id="+ deal_id_1);
              var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];
              var isDealReadOnly;
              var isHeaderClosing, isHeaderFound;
              //alert('populateSelectedDcrReportDetailFields:\ndcr_reportType_local->"+dcr_reportType_local+"\ndealid->'+deal_id_1 + "\ndeal header id->"+deal_hdr_id);
                    if(deal_id_to_status_list[deal_id_1].is_deal_readonly == true) {
                      isDealReadOnly = true;
                    }
                    else {
                      isDealReadOnly = false;
                    }   
            
                if(dcr_reportType_local == ''){
                    openGeneralDialog("The One-Year Scorecard for " + globalDealName + " will be available tomorrow.","Alert");
                    return;
              }

              if((deal_hdr_id == '') || (deal_hdr_id == null)){
                openGeneralDialog("The One-Year Scorecard for " + globalDealName + " will be available tomorrow.","Alert");
                return;
              }
  
                isHeaderFound = isHeaderClosing = false;
                for (var i in dcrReportTypeStatusList){
                     if(dcrReportTypeStatusList[i] == deal_hdr_id){
                       //alert("dcrReportTypeStatusList[i]-->" + i + "\n dcrReportTypeStatusList[i]-->" + dcrReportTypeStatusList[i]);
                       var temp_list = i.toString().match(/Closing/ig);
                       if (temp_list != null){                                        
                          isHeaderFound=isHeaderClosing=true;
                       } else {
                          isHeaderFound=true;
                       }
                        break;         
                     }
                }       
            
                if(isHeaderFound == false){
                openGeneralDialog("Selected Header not found.Please check","Error");
                return;
              }
  
              var dcr_fields;
      
              if(isDealReadOnly == true){
                    dcr_fields={isDealUpdatable:false,deal_id:deal_id_1,scHead_id:deal_hdr_id};                             
              }
                 else{
                    dcr_fields={isDealUpdatable:true,deal_id:deal_id_1,scHead_id:deal_hdr_id};                          
              }
              //alert(".getDCR_Report_Detail_Fields-->1. dcr_fields.deal_id=" + dcr_fields.deal_id + "\n2. dcr_fields.deal_hdr_id=" + dcr_fields.deal_hdr_id);
                
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.kjoDealReportController.getDCR_Report_Detail_Fields}',
                                deal_id_1,
                                deal_hdr_id,
                                function(result2, event2) {
                                    if ( (event2.status) && (result2 != null) ) {
                         
                         $jq.map(result2.investmentThesis, function( e, i ) {
                             e.tableId='DCR_InvestmentThesis';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                             e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for Investment Thesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }
                         });
                         $jq.map(result2.investmentRisks, function( e, i ) {                             
                             e.tableId='DCR_InvestmentRisks';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                              
                         });
                         $jq.map(result2.keyValueCreation, function( e, i ) {
                             e.tableId='DCR_KeyValueCreation';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                           
                         });
                         $jq.map(result2.keyCompanyGoals, function( e, i ) {
                             e.tableId='DCR_KeyCompanyGoals';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                             
                         });
                         $jq.map(result2.managementTeam, function( e, i ) {
                             e.tableId='DCR_ManagementTeam';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                                   
                         });
                         $jq.map(result2.wPTeamActionItems, function( e, i ) {
                             e.tableId='DCR_WPTeamActionItems';
                             if(isDealReadOnly == true)
                               e.isDealUpdatable = false;
                             else
                               e.isDealUpdatable = true;
                               e.colorClassName= getColorClass(e);
                             e.isHeaderClosing=isHeaderClosing;  
                             if( (isHeaderClosing == false) && ((e.data.Line_Item_Color__c == '') || (e.data.Line_Item_Color__c == null)) ) {
                                openGeneralDialog("Color class not found for investmentThesis.Please check:"+isHeaderClosing,"Error");
                                return;
                             }                            
                         });

                        var dcr_field_template = Handlebars.compile($jq("#deal-closing-field-content-template").html());
                        var dcr_thesis_template = Handlebars.compile($jq("#dcr-lineitem-for-investment-thesis-template").html());
                        var dcr_all_template = Handlebars.compile($jq("#dcr-lineitem-for-all-template").html());
                        var dcr_risk_template = Handlebars.compile($jq("#dcr-lineitem-for-investment-risk-template").html());
                        
                        dlg_1.find("#investmentThesisContent").html(dcr_all_template({dealClosingTableId:'DCR_InvestmentThesis',
                                                                             firstColName:'Investment Thesis',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.investmentThesis}));                       
                        dlg_1.find("#investmentRisksContent").html(dcr_all_template({dealClosingTableId:'DCR_InvestmentRisks',
                                                                             firstColName:'Investment Risks',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.investmentRisks}));                                                                     
                        dlg_1.find("#keyValueCreationContent").html(dcr_all_template({dealClosingTableId:'DCR_KeyValueCreation',
                                                                             firstColName:'Key Value Creation Drivers',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.keyValueCreation}));
                        dlg_1.find("#keyCompanyGoalsContent").html(dcr_all_template({dealClosingTableId:'DCR_KeyCompanyGoals',
                                                                             firstColName:'Key Company Goals and Milestones',
                                                                             deal:dcr_fields,              
                                                                             dealClosingFields : result2.keyCompanyGoals}));
                        dlg_1.find("#managementTeamContent").html(dcr_all_template({dealClosingTableId:'DCR_ManagementTeam',
                                                                             firstColName:'Management Team and Board Additions and/or Development Goals',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : result2.managementTeam}));
                        dlg_1.find("#wPTeamActionItemsContent").html(dcr_all_template({dealClosingTableId:'DCR_WPTeamActionItems',
                                                                             firstColName:'WP Team Action Items',  
                                                                             deal:dcr_fields,              
                                                                             dealClosingFields : result2.wPTeamActionItems}));                                                                                                                      

                        $jq.map(result2.finance_targets.dcrMetrics, function( e, i ) {
                                if(isDealReadOnly) {
                                    e.isDealUpdatable = false;
                                }else {
                                    e.isDealUpdatable = true;
                                }
                         });                         

                        $jq("#DCR_InvestmentThesis").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});
                        $jq("#DCR_InvestmentRisks").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());}); 
                        $jq("#DCR_KeyValueCreation").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                
                        $jq("#DCR_KeyCompanyGoals").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                
                        $jq("#DCR_ManagementTeam").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                
                        $jq("#DCR_WPTeamActionItems").find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).text());});                                                

                        var InvestmentThesis = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid,disp='';
                           var num =1;
                           var ids ='';
                           var count = $jq(tabid).length;                           
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                    dealid = $jq(this).attr('data-deal-id');
                                    headerid =  $jq(this).attr('data-scHead-id');    
                                    //disp = disp + num + ". " + $jq(this).attr('data-dealClosingField-id') + "\n";                              
                                    ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ' ;
                                    num = num + 1;
                                    tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert(disp);
                             updateLineItemsOrder(ids); 
                             return ui; 
                        };
                        $jq("#DCR_InvestmentThesis-id").sortable({                                              
                            out:InvestmentThesis
                        }).disableSelection();  
                                             
                        var InvestmentRisks = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;
                           var ids ='';
                           var count = $jq(tabid).length;                          
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("InvestmentRisks count=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui; 
                        };
                        $jq("#DCR_InvestmentRisks-id").sortable({                                              
                            out:InvestmentRisks
                        }).disableSelection();                      
                        
                        var KeyValueCreation = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;
                           var ids ='';
                           var count = $jq(tabid).length;   
                           //alert(" count for tabid" + tabid + " count=" + count);
                           //getTabbedLineItemsIds(count);
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("KeyValueCreation count=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };                        
                        $jq("#DCR_KeyValueCreation-id").sortable({
                            out:KeyValueCreation
                        }).disableSelection();     
                                                                     
                        var KeyCompanyGoals = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;   
                           var ids ='';                         
                           var count = $jq(tabid).length;
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("KeyCompanyGoals count=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };              
                        $jq("#DCR_KeyCompanyGoals-id").sortable({
                            out:KeyCompanyGoals
                        }).disableSelection();              
                              
                        var ManagementTeam = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;     
                           var ids ='';                       
                           var count = $jq(tabid).length;
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("ManagementTeamount=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };                                              
                        $jq("#DCR_ManagementTeam-id").sortable({
                            out:ManagementTeam
                        }).disableSelection(); 
                        
                        var WPTeamActionItems = function( event, ui ) {   
                           var tabid = '#' + globalCurrentTab + ' li';
                           var dealid, headerid, tableid='';
                           var num =1;        
                           var ids ='';                    
                           var count = $jq(tabid).length;
                             if (count>1){                                                                  
                                $jq(tabid).each(function(){    
                                dealid = $jq(this).attr('data-deal-id');
                                headerid =  $jq(this).attr('data-scHead-id');                                        
                                ids = ids + $jq(this).attr('data-dealClosingField-id') + ' ';
                                num = num + 1;
                                tableid = $jq(this).attr('data-table-id');      
                                });         
                             }
                             //alert("DCR_WPTeamActionItems=" + count + "\n tid=" + tableid + "\n ids=" + ids); 
                             updateLineItemsOrder(ids); 
                             return ui;               
                        };                                              
                        $jq("#DCR_WPTeamActionItems-id").sortable({
                            out:WPTeamActionItems
                        }).disableSelection();                                                         
                                                                                                    
                        var dcr_financials_template = Handlebars.compile($jq("#dcrNewMetricTablecontent-template").html());          
                        dlg_1.find('#dcrFinancialTablecontent').html(
                                dcr_financials_template({dcrMetrics : result2.finance_targets.dcrMetrics }));       
                                        
                        populateDcrTypeOfFinancialList(dlg_1,result2.finance_targets.compFinNameList);
                        
                        dlg_1.find("#dcrTypeOfFinancialSel").multiselect('rebuild');                                        
                        if(result2.finance_targets.compFinNameList.length == 0) {
                           dlg_1.find("#dcrImportCompLabel").hide();
                           dlg_1.find("#dcrTypeOfFinancial").hide();
                           dlg_1.find("#dcrImportFinFromCompnay").hide();
                        } else {
                            dlg_1.find("#dcrImportCompLabel").show();
                            dlg_1.find("#dcrTypeOfFinancial").show();
                            dlg_1.find("#dcrImportFinFromCompnay").show();                                        
                        }                                                                      
                                    } else {
                                        var matchString = "\'syntax error\'.  Logged in?";
                                        matchString = matchString.toLowerCase();
                                        if (event2.message.toLowerCase().indexOf(matchString) == -1){
                                         alert('Problem Encountered\n' + event2.message);
                                        }
                                        else{
                                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                          top.location.href='/apex/wp_mydeals';
                                        }                      
                                    }
                                },
                                {escape:false}
                            );                               
    }
    function getTabbedLineItemsIds(kount){
         var tabid = '#' + globalCurrentTab + ' li';
         var count = $jq( tabid ).length;   
         //alert('i am here @ getTabbedLineItemsIds' + count);
         if (count>1){                                                                  
            $jq(tabid).each(function(){    
            dealid = $jq(this).attr('data-deal-id');
            headerid =  $jq(this).attr('data-scHead-id');                                        
            ids = ids + $jq(this).attr('data-dealClosingField-id') + ',';
            num = num + 1;
            tableid = $jq(this).attr('data-table-id');      
            });         
         }                                              
         return;
    }
            
    function updateLineItemsOrder(lineIds){
        lineIds = lineIds.trim();
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.kjoDealReportController.updateDCR_LineItemsOrder}',
            lineIds,
            function(result, event) {            
                if ((event.status) && (result != null) ) {
                    if(result.status != 'true') {
                        //alert('updateLineItemsOrder:status='+result.status);
                    }else {      
                        //alert('updateLineItemsOrder:success='+result.status);                          
                    }                                                                         
                } else {
                       var matchString = "\'syntax error\'.  Logged in?";
                       matchString = matchString.toLowerCase();
                       if (event.message.toLowerCase().indexOf(matchString) == -1){
                            alert('Problem Encountered\n' + event2.message);
                       }
                       else{
                            alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                            top.location.href='/apex/wp_mydeals';
                       }                      
                 }
              },
              {escape:false}
        ); 
    }
    
    function populateInitialDcrReportDetailFields(){
        var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
        var deal_id_1 = dlg_1.find("#params").attr('data-deal-id');
        var isDealReadOnly;  
        if(deal_id_to_status_list[deal_id_1].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
          isDealReadOnly = false;
        }   
        var dcr_fields;
      
        if(isDealReadOnly == true){
          dcr_fields={isDealUpdatable:false,deal_id:deal_id_1,scHead_id:''};
        }
        else{
          dcr_fields={isDealUpdatable:true,deal_id:deal_id_1,scHead_id:''};                           
       }

                        var dcr_field_template = Handlebars.compile($jq("#deal-closing-field-content-template").html());    
                        var dcr_thesis_template = Handlebars.compile($jq("#dcr-lineitem-for-investment-thesis-template").html());   
                        var dcr_risk_template = Handlebars.compile($jq("#dcr-lineitem-for-investment-risk-template").html()); 
                        var dcr_all_template = Handlebars.compile($jq("#dcr-lineitem-for-all-template").html());
                                                        
                        dlg_1.find("#investmentThesisContent").html(dcr_all_template({dealClosingTableId:'DCR_InvestmentThesis',
                                                                             firstColName:'Investment Thesis',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : ''}));                           
                        dlg_1.find("#investmentRisksContent").html(dcr_all_template({dealClosingTableId:'DCR_InvestmentRisks',
                                                                             firstColName:'Investment Risks',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : ''}));
                        dlg_1.find("#keyValueCreationContent").html(dcr_all_template({dealClosingTableId:'DCR_KeyValueCreation',
                                                                             firstColName:'Key Value Creation Drivers',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : ''}));
                        dlg_1.find("#keyCompanyGoalsContent").html(dcr_all_template({dealClosingTableId:'DCR_KeyCompanyGoals',
                                                                             firstColName:'Key Company Goals and Milestones',
                                                                             deal:dcr_fields,              
                                                                             dealClosingFields : ''}));
                        dlg_1.find("#managementTeamContent").html(dcr_all_template({dealClosingTableId:'DCR_ManagementTeam',
                                                                             firstColName:'Management Team and Board Additions and/or Development Goals',
                                                                             deal:dcr_fields,
                                                                             dealClosingFields : ''}));
                        dlg_1.find("#wPTeamActionItemsContent").html(dcr_all_template({dealClosingTableId:'DCR_WPTeamActionItems',
                                                                             firstColName:'WP Team Action Items',  
                                                                             deal:dcr_fields,              
                                                                             dealClosingFields : ''}));
        dlg_1.find("#dcrImportCompLabel").show();
        dlg_1.find("#dcrTypeOfFinancial").show();
        dlg_1.find("#dcrImportFinFromCompnay").show();
        var temp_fin_list = new Array();
        temp_fin_list.push('Revenue');
        temp_fin_list.push('EBITDA');                        
        populateDcrTypeOfFinancialList(dlg_1,temp_fin_list,deal_id_1,isDealReadOnly);
        dlg_1.find("#dcrTypeOfFinancialSel").multiselect('rebuild');    
        var dcr_financials_template = Handlebars.compile($jq("#dcrNewMetricTablecontent-template").html());                                              
        dlg_1.find('#dcrFinancialTablecontent').html(
        dcr_financials_template({dcrMetrics : '' }));       
    }
    
    
    function populateDcrTypeOfReportList(comp_type_list,report_label) {
       //alert("DEBUG->8.6.2014->populateDcrTypeOfReportList - report label ->" + report_label);
       var temp_string;
       var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
       var dlg = dlg_1.find("#dcrReportViewContent")
       dlg.find("#dcrTypeOfReportSel").empty();     
       //alert("comp_type_list.length-->" + comp_type_list.length);
       for (var index = 0; index <comp_type_list.length; ++index)
       {  
         dlg.find("#dcrTypeOfReportSel").append('<option value="' +
           comp_type_list[index].report_label + '">' + comp_type_list[index].report_label + '</option>');    
       }                
        dlg.find("#dcrTypeOfReportSel").multiselect({
        maxHeight: 200,
        buttonWidth: '255px',
        buttonClass: 'btn btn-default customBtnOverflow',
        nonSelectedText: 'Select ...' ,
                          onChange: function(option, checked) {
                            if((checked == false) || (dcrReportTypeStatusList[option.val()] == '')) {
                             dlg.find("#dcrDatePicker").show();
                             dlg.find("#dcrAddHeader").show();
                             dlg.find("#dcrDatePickerLabel").show();    
                             //alert("calling ->populateInitialDcrReportDetailFields()");
                             populateInitialDcrReportDetailFields();                             
                            } else {                        
                             dlg.find("#dcrDatePicker").hide();
                             dlg.find("#dcrAddHeader").hide();
                             dlg.find("#dcrDatePickerLabel").hide();
                             //alert("calling->populateSelectedDcrReportDetailFields()");
                             populateSelectedDcrReportDetailFields();
                            }                       
                          }    
       });      
      if((report_label != null) &&(report_label != '')) {
        dlg.find("#dcrTypeOfReportSel").multiselect('rebuild');
        $jq('option', dlg.find("#dcrTypeOfReportSel")).each(function(element) {
           var temp_list = $jq(this).val().toString().match(/Closing/ig);
           if (temp_list != null){                                        
              dlg.find("#dcrTypeOfReportSel").multiselect('deselect', $jq(this).val());
           }
       });
       dlg.find("#dcrTypeOfReportSel").multiselect('select', report_label);
      } 
      else {
        $jq('option', dlg.find("#dcrTypeOfReportSel")).each(function(element) {
        var temp_list = $jq(this).val().toString().match(/Closing/ig);
        if (temp_list != null){                                        
            dlg.find("#dcrTypeOfReportSel").multiselect('select', $jq(this).val());
        }
       });
      }

  }
function doDcrAddFollowupHeaderAction(deal_id,stage) {
    var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");     
    var tDate = new Date();
    var dd = tDate.getDate();
    var mm = tDate.getMonth()+1; //January is 0!
    var yyyy = tDate.getFullYear();
    if(dd<10) dd='0'+dd;
    if(mm<10) mm='0'+mm;
    
    var date_pick_val = mm+'/'+dd+'/'+yyyy;
    var dcr_reportType_local = 'Add Follow Up';                           
    var  Date_rcvd = new Date(date_pick_val);
    var date_2 = new Date(1980,0,1);
    Date_rcvd = Date_rcvd.toUTCString();

    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.kjoDealReportController.createDCR_ReportTypeHeaderList}',
         deal_id,dcr_reportType_local,Date_rcvd,
         function(result2, event2) {
            if ( (event2.status) && (result2 != null) ) {
                if(result2.status != 'true') {
                    var dlg = $jq("#edit-deal-closing-report-fields-Dialog");
                    dlg.dialog("close"); 
                    openGeneralDialog(result2.status,'Alert');
                }else {
                    globalFollowupLabel = result2.created_label;
                    //alert("globalFollowupLabel-->" + globalFollowupLabel);
                    for (var i in dcrReportTypeStatusList)
                    {
                        //alert("delete dcrReportTypeStatusList["+i+"]" + dcrReportTypeStatusList[i]);
                        delete dcrReportTypeStatusList[i];
                    }
                    for(var index=0; index<result2.reportHeaderList.length;++index) 
                    {
                        //alert("adding result2.reportHeaderList[" + index + "].report_label->" + result2.reportHeaderList[index].report_label + "\nresult2.reportHeaderList[index].report_id" + result2.reportHeaderList[index].report_id);
                        dcrReportTypeStatusList[result2.reportHeaderList[index].report_label] = result2.reportHeaderList[index].report_id;
                    }                    
                    populateDcrTypeOfReportList(result2.reportHeaderList,globalFollowupLabel);                               
               }                                                                        
           }else{
                var matchString = "\'syntax error\'.  Logged in?";
                matchString = matchString.toLowerCase();
                if (event2.message.toLowerCase().indexOf(matchString) == -1){
                    alert('Problem Encountered\n' + event2.message);
                }
                else{
                    alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                    top.location.href='/apex/wp_mydeals';
                }                      
           }
       },
       {escape:false}
    );                           
}   
function doDcrAddHeaderAction(stage) {
  //alert("stage=>"+stage);
  var stage1=stage; 
  if (stage==undefined) stage1='closing';
  //alert("stage1->"+stage1);
  
  /*For browsers othan than IE.....*/
  var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
  var deal_id_1 = dlg_1.find("#params").attr('data-deal-id');
  var date_pick_val='';
  var dcr_reportType_local ='';
  
  //alert("DEAL ID->" + deal_id_1);   
  
  if (stage1=='followup'){
    //alert("YES stage = followup");
    var tDate = new Date();
    var dd = tDate.getDate();
    var mm = tDate.getMonth()+1; //January is 0!
    var yyyy = tDate.getFullYear();
    if(dd<10) dd='0'+dd;
    if(mm<10) mm='0'+mm;
    date_pick_val = mm+'/'+dd+'/'+yyyy;
    dcr_reportType_local = 'Add Follow Up';
  }else{
      //var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
      //var deal_id_1 = dlg_1.find("#params").attr('data-deal-id');
      dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
      date_pick_val = dlg_1.find("#dcrReportViewContent").find("#dcrDatePicker").val();
      //alert("STEP1->dcr_reportType_local->" + dcr_reportType_local + "\ndate_pick_val->" + date_pick_val);
      
      if(dcr_reportType_local == null) {
        dcr_reportType_local = '';
      }
      if(dcr_reportType_local == ''){
        openGeneralDialog('Please specify Type Of Report for creating Scorecard Header','Error');
        return;
      }
      if((date_pick_val == '') && (dcrReportTypeStatusList[dcr_reportType_local] == '')){
            openGeneralDialog('Please specify Date for creating Scorecard Header','Error');
            return;
      }
      var matchString = 'Closing - ';
      matchString = matchString.toLowerCase();
      if ((dcr_reportType_local.toLowerCase().indexOf(matchString) != -1) && (dcrReportTypeStatusList[dcr_reportType_local] != '')){
        openGeneralDialog('Closing Scorecard Header already exists. Please proceed','INFO');
        dlg_1.find("#dcrReportViewContent").find("#dcrDatePicker").hide();                                 
        dlg_1.find("#dcrReportViewContent").find("#dcrAddHeader").hide();
        dlg_1.find("#dcrReportViewContent").find("#dcrDatePickerLabel").hide();
        //alert("doDcrAddHeaderAction->dcr_reportType_local->" + dcr_reportType_local);
        dlg_1.find("#dcrTypeOfReportSel").multiselect('select', dcr_reportType_local);  
        return;    
      }
    }
                                       
          var  Date_rcvd = new Date(date_pick_val);
          var date_2 = new Date(1980,0,1);
          if(checkdate(date_pick_val,'/')== false) {
            openGeneralDialog("Please enter valid date:mm/dd/yyyy",'Error');
            return;
          }
          if(Date_rcvd < date_2) {
            alert("Please enter date on or beyod Jan 01 1980",'Error');
            return;
          }
          Date_rcvd = Date_rcvd.toUTCString();
          
                           Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.kjoDealReportController.createDCR_ReportTypeHeaderList}',
                                deal_id_1,dcr_reportType_local,Date_rcvd,
                                function(result2, event2) {
                                    if ( (event2.status) && (result2 != null) ) {
                                      if(result2.status != 'true') {
                                        alert('createDCR_ReportTypeHeaderList:'+result2.status);
                                      } else {
                                        //alert('createDCR_ReportTypeHeaderList:status->' + result2.status);
                                        if (stage1=='followup'){
                                            //return true;
                                        }
                                        for (var i in dcrReportTypeStatusList){
                                           delete dcrReportTypeStatusList[i];
                                        }
                                        for(var index=0; index<result2.reportHeaderList.length;++index) {
                                           dcrReportTypeStatusList[result2.reportHeaderList[index].report_label] =
                                            result2.reportHeaderList[index].report_id;
                                        }
                                                                        
                                        populateDcrTypeOfReportList(result2.reportHeaderList,result2.created_label);
                                        //alert("Debug 2. doDcrAddHeaderAction");
                                        dlg_1.find("#dcrReportViewContent").find("#dcrDatePicker").hide();
                                        dlg_1.find("#dcrReportViewContent").find("#dcrAddHeader").hide();
                                        dlg_1.find("#dcrReportViewContent").find("#dcrDatePickerLabel").hide();                                     
                                      }                                                                        
                                    } else {
                                        var matchString = "\'syntax error\'.  Logged in?";
                                        matchString = matchString.toLowerCase();
                                        if (event2.message.toLowerCase().indexOf(matchString) == -1)
                                        {
                                         alert('Problem Encountered\n' + event2.message);
                                        }
                                        else
                                        {
                                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                          top.location.href='/apex/wp_mydeals';
                                        }                      
                                    }
                                },
                                {escape:false}
                            );                           

}

function doDcrImportFinFromCompnayAction() {
  var local_dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
    var local_dcr_import_fin_list = local_dlg_1.find("#dcrTypeOfFinancialSel").val();
    //local_dcr_import_fin_list = 'Revenue,EBITDA';  
    //alert("local_dcr_import_fin_list=" + local_dcr_import_fin_list);
  populateDcrFinanceMetrics(local_dcr_import_fin_list,false);  
}

        
function populateDcrFinanceMetrics(dcr_import_fin_list,getMetricsFromDatabase) {  
  var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
  var deal_id_1 = dlg_1.find("#params").attr('data-deal-id');
  var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
  var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];
  var isDealReadOnly;
  
        if(deal_id_to_status_list[deal_id_1].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
          isDealReadOnly = false;
        } 

  if((getMetricsFromDatabase == true) &&((deal_hdr_id == '') || (deal_hdr_id == null))){
    dlg_1.find("#dcrImportCompLabel").show();
    dlg_1.find("#dcrTypeOfFinancial").show();
    dlg_1.find("#dcrImportFinFromCompnay").show();
    var temp_fin_list = new Array();
    temp_fin_list.push('Revenue');
    temp_fin_list.push('EBITDA');                        
    populateDcrTypeOfFinancialList(dlg_1,temp_fin_list,deal_id_1,isDealReadOnly);
    dlg_1.find("#dcrTypeOfFinancialSel").multiselect('rebuild');    
    var dcr_financials_template = Handlebars.compile($jq("#dcrNewMetricTablecontent-template").html());                                              
    dlg_1.find('#dcrFinancialTablecontent').html(
     dcr_financials_template({dcrMetrics : '' }));  
    return;
  }
  
  if((getMetricsFromDatabase == false) && (dcr_import_fin_list == null)){
    dcr_import_fin_list = '';
  }
  
  if(dcr_reportType_local == null) {
    dcr_reportType_local = '';
  }

  if((getMetricsFromDatabase == false) && (dcr_import_fin_list == '')){
    openGeneralDialog("Please select the desired metric(s) to be pulled in from the Company record.","Error");
    return;
  }
  
  if((getMetricsFromDatabase == false) &&(dcr_reportType_local == '')){
    openGeneralDialog("Please specify Type Of Report first","Error");
    return;
  }

  if((getMetricsFromDatabase == false) &&((deal_hdr_id == '') || (deal_hdr_id == null))){
    openGeneralDialog("Please create header first for the selected Type Of Report","Error");
    return;
  }
  //alert("getDCR_MtericsAndCompFinNameInfo-->\ndeal_id_1->" + deal_id_1 + "\ndeal_hdr_id->" + deal_hdr_id);

                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.kjoDealReportController.getDCR_MtericsAndCompFinNameInfo}',
                                deal_id_1,
                                deal_hdr_id,
                                dcr_import_fin_list,
                                function(result2, event2) {
                                    if ( (event2.status) && (result2 != null) ) {
                                      if(result2.status != 'true') {
                                        alert('getDCR_MtericsAndCompFinNameInfo:failed'+result2.status);
                                      } else if((getMetricsFromDatabase == false) && (result2.dcrMetrics.length == 0)) {
                                         openGeneralDialog("The Company record does not contain the financial metric(s) you have selected.","Info");
                                         return true;
                                      } else {
                                       
                                         $jq.map(result2.dcrMetrics, function( e, i ) {
                                             if(isDealReadOnly) {
                                             e.isDealUpdatable = false;
                                             } else {
                                             e.isDealUpdatable = true;
                                             }
                                         });
                                       
                                        var dcr_metric_field_template = Handlebars.compile($jq("#dcrNewMetricTablecontent-single-template").html());
                                        $jq("TABLE#DCR_NewMetricTable > tbody:last").append(dcr_metric_field_template({dcrMetrics :result2.dcrMetrics})); 
                                        
                                        populateDcrTypeOfFinancialList(dlg_1,result2.compFinNameList);
                                        dlg_1.find("#dcrTypeOfFinancialSel").multiselect('rebuild');                                        
                                        if(result2.compFinNameList.length == 0) {
                                          dlg_1.find("#dcrImportCompLabel").hide();
                                          dlg_1.find("#dcrTypeOfFinancial").hide();
                                          dlg_1.find("#dcrImportFinFromCompnay").hide();
                                        } else {
                                          dlg_1.find("#dcrImportCompLabel").show();
                                          dlg_1.find("#dcrTypeOfFinancial").show();
                                          dlg_1.find("#dcrImportFinFromCompnay").show();                                        
                                        }
                                      }                                                                        
                                    } else {
                                        var matchString = "\'syntax error\'.  Logged in?";
                                        matchString = matchString.toLowerCase();
                                        if (event2.message.toLowerCase().indexOf(matchString) == -1)
                                        {
                                         alert('Problem Encountered\n' + event2.message);
                                        }
                                        else
                                        {
                                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                          top.location.href='/apex/wp_mydeals';
                                        }                      
                                    }
                                },
                                {escape:false}
                            );            
}

function doDcrAddNewMetricAction(event) {
            event.preventDefault();

  var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
  var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
  var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];
  
  if(dcr_reportType_local == ''){
    openGeneralDialog("Please specify Type Of Report first","Error");
    return;
  }

  if((deal_hdr_id == '') || (deal_hdr_id == null)){
    openGeneralDialog("Please create header first for the selected Type Of Report","Error");
    return;
  }
  
            
            
            var deal_id = dlg_1.find("#params").attr('data-deal-id');
            var dlg = $jq("#dcr-metric-add-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
          
            dlg.find("#params").attr('data-deal-id', deal_id);
            //dlg.find("#dcrMetricPeriodEndedContentAdd").datepicker({ minDate: new Date(1980, 0, 1) });
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();
          
            openDcrAddMetricDialog();
            dlg.dialog("option" , "title" , "Adding DCR Custom Financial Metric for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');
            
            dlg.find("#dcrMetricValueContent").autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});

            return false;
}  

function doDcrEditMetricAction(event) {

            event.preventDefault();
           
            var deal_id = $jq(this).attr('data-deal-id');
            var sch_id = $jq(this).attr('data-scoreHeader-id');
            var line_item_id = $jq(this).attr('data-lineItem-id');
           
            var dlg = $jq("#dcr-metric-edit-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            //dlg.find("#dcrMetricPeriodEndedContentEdit").datepicker({ minDate: new Date(1980, 0, 1) });
            var dcr_metric_name = $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #dcrMetricName").text();
            var dcr_metric_date = $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #dcrMetricPeriodEnded").text();
            var dcr_metric_value = $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #dcrMetricValue").text();
            var dcr_metric_unit = $jq("TABLE#DCR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #dcrMetricUnit").text();
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-scoreHeader-id', sch_id);
            dlg.find("#params").attr('data-lineItem-id', line_item_id);
            
            dlg.find("#dcrMetricNameContent").val(dcr_metric_name);
            dlg.find("#dcrMetricPeriodEndedContentEdit").val(dcr_metric_date);
            dlg.find("#dcrMetricValueContent").val(dcr_metric_value);
            dlg.find("#dcrMetricUnitContent").val(dcr_metric_unit);
                        
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();

            openDcrEditMetricDialog();
            dlg.dialog("option" , "title" , "Editing DCR Custom Financial Metric for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');

            dlg.find("#dcrMetricValueContent").autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});
            
            return false;
}  

function doDcrDeleteNewMetricAction(event) {
            
            event.preventDefault();
           
            var deal_id = $jq(this).attr('data-deal-id');
            var sch_id = $jq(this).attr('data-scoreHeader-id');
            var line_item_id = $jq(this).attr('data-lineItem-id');
           
            var dlg = $jq("#dcr-metric-delete-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-scoreHeader-id', sch_id);
            dlg.find("#params").attr('data-lineItem-id', line_item_id);
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();

            openDcrDeleteMetricDialog();          
            dlg.dialog("option" , "title" , "Deleting DCR Metric for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');



            return false;
}  

function doEarAddNewMetricAction(event) {
            event.preventDefault();
            var deal_id = $jq("#edit-deal-required-richText-fields-Dialog").find("#params").attr('data-deal-id');
            var dlg = $jq("#ear-metric-add-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
          
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#earMetricPeriodEndedContentAdd").datepicker({ minDate: new Date(1980, 0, 1) });
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();
          
            openEarAddMetricDialog();
            dlg.dialog("option" , "title" , "Adding Custom Financial Metric for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');

            return false;
} 

function doEarEditMetricAction (event){

            event.preventDefault();
           
            var deal_id = $jq(this).attr('data-deal-id');
            var sch_id = $jq(this).attr('data-scoreHeader-id');
            var line_item_id = $jq(this).attr('data-lineItem-id');
           
            var dlg = $jq("#ear-metric-edit-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            dlg.find("#earMetricPeriodEndedContentEdit").datepicker({ minDate: new Date(1980, 0, 1) });
            var ear_metric_name = $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #earMetricName").text();
            var ear_metric_date = $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #earMetricPeriodEnded").text();
            var ear_metric_value = $jq("TABLE#EAR_NewMetricTable TR[data-lineItem-id=" + line_item_id + "] #earMetricValue").text();
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-scoreHeader-id', sch_id);
            dlg.find("#params").attr('data-lineItem-id', line_item_id);
            
            dlg.find("#earMetricNameContent").val(ear_metric_name);
            dlg.find("#earMetricPeriodEndedContentEdit").val(ear_metric_date);
            dlg.find("#earMetricValueContent").val(ear_metric_value);
            
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();

            openEarEditMetricDialog();
            dlg.dialog("option" , "title" , "Editing Custom Financial Metric for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');


            return false;
}

function doEarDeleteNewMetricAction(event){
            
            event.preventDefault();
           
            var deal_id = $jq(this).attr('data-deal-id');
            var sch_id = $jq(this).attr('data-scoreHeader-id');
            var line_item_id = $jq(this).attr('data-lineItem-id');
           
            var dlg = $jq("#ear-metric-delete-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-scoreHeader-id', sch_id);
            dlg.find("#params").attr('data-lineItem-id', line_item_id);
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();

            openEarDeleteMetricDialog();          
            dlg.dialog("option" , "title" , "Deleting EAR Metric for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');



            return false;
}       
/* Start of truncate function */
/*
 HTML Truncator for jQuery
 by Henrik Nyh (henrik.nyh.se) 2008-02-28.
 Free to modify and redistribute with credit.
*/

(function($jq) {

  var trailing_whitespace = true;

  $jq.fn.truncate = function(options) {

    var opts = $jq.extend({}, $jq.fn.truncate.defaults, options);
    
    $jq(this).each(function() {

      var content_length = $jq.trim(squeeze($jq(this).text())).length;
      if (content_length <= opts.max_length)
        return;  // bail early if not overlong

      var actual_max_length = opts.max_length - opts.more.length - 3;  // 3 for " ()"
      var truncated_node = recursivelyTruncate(this, actual_max_length);
      var full_node = $jq(this).hide();

      truncated_node.insertAfter(full_node);
      
      findNodeForMore(truncated_node).append(' (<a href="#show more content">'+opts.more+'</a>)');
      findNodeForLess(full_node).append(' (<a href="#show less content">'+opts.less+'</a>)');
      
      truncated_node.find('a:last').click(function() {
        truncated_node.hide(); full_node.show(); return false;
      });
      full_node.find('a:last').click(function() {
        truncated_node.show(); full_node.hide(); return false;
      });

    });
  }

  // Note that the " (�more)" bit counts towards the max length � so a max
  // length of 10 would truncate "1234567890" to "12 (�more)".
  $jq.fn.truncate.defaults = {
    max_length: 100,
    more: '...more',
    less: 'less'
  };

  function recursivelyTruncate(node, max_length) {
    return (node.nodeType == 3) ? truncateText(node, max_length) : truncateNode(node, max_length);
  }

  function truncateNode(node, max_length) {
    var node = $jq(node);
    var new_node = node.clone().empty();
    var truncatedChild;
    node.contents().each(function() {
      var remaining_length = max_length - new_node.text().length;
      if (remaining_length == 0) return;  // breaks the loop
      truncatedChild = recursivelyTruncate(this, remaining_length);
      if (truncatedChild) new_node.append(truncatedChild);
    });
    return new_node;
  }

  function truncateText(node, max_length) {
    var text = squeeze(node.data);
    if (trailing_whitespace)  // remove initial whitespace if last text
      text = text.replace(/^ /, '');  // node had trailing whitespace.
    trailing_whitespace = !!text.match(/ $/);
    var text = text.slice(0, max_length);
    // Ensure HTML entities are encoded
    // http://debuggable.com/posts/encode-html-entities-with-jquery:480f4dd6-13cc-4ce9-8071-4710cbdd56cb
    text = $jq('<div/>').text(text).html();
    return text;
  }

  // Collapses a sequence of whitespace into a single space.
  function squeeze(string) {
    return string.replace(/\s+/g, ' ');
  }
  
  // Finds the last, innermost block-level element
  function findNodeForMore(node) {
    var $node = $jq(node);
    var last_child = $node.children(":last");
    if (!last_child) return node;
    var display = last_child.css('display');
    if (!display || display=='inline') return $node;
    return findNodeForMore(last_child);
  };

  // Finds the last child if it's a p; otherwise the parent
  function findNodeForLess(node) {
    var $node = $jq(node);
    var last_child = $node.children(":last");
    if (last_child && last_child.is('p')) return last_child;
    return node;
  };

})(jQuery);
/* End of Truncate function */
   
   
    $jq(document).ready(function() {
        //alert('on document.ready');

        var emg_yes='Click the checkmark to <strong>remove</strong> this deal from the EMG New Deals report.';
        var emg_no='Click the circle to <strong>add</strong> this deal to the EMG New Deals report.';
        
        var grp_yes='Click the checkmark to <strong>remove</strong> this deal from the group report (if applicable to your group).';
        var grp_no='Click the circle to <strong>add</strong> this deal to the group report (if applicable to your group).';

        var high_yes='Click the checkmark to <strong>remove</strong> the highlighting from the deal on the group report (if applicable to your group).';
        var high_no='Click the circle to <strong>highlight</strong> this deal in the group report (if applicable to your group).';
        
        var deals_template = Handlebars.compile($jq("#deals-template").html());           

        var on_stm_text='Click to <strong>unset</strong> Senior Team Member status';
        var on_tm_text='Click to <strong>set</strong> Senior Team Member status';
        
        var ear_dlg_text='All Early Action Report information must be complete '+
            'before a deal can move past the \?Early - Indicative Bid Submitted\? stage.  '+
            'Select \?Early Action Report\? from the Edit menu for access.'
        var deal_closed_msg = "At the closing of a new investment, and in conjunction with the Investment Memo to the firm, a one page Deal Closing Report is to be submitted." +
             "<br>The Deal Closing Report and other investment tracking reports can be accessed from the My Deals page.";  
        // Will hold our converted Apex data structures
        var result_variable;
        var deal_stage_list=null;
        var deal_stage_name_to_id_list=new Array();
        var deal_sector_field_list;
        var deal_owner_source_field_list;

        function createSFLink(id) {
            if ( id.length == 18 ) {
                id = id.substring(0, 15);
            }
            var dealidre = new RegExp ( dealidtype + new Array( 15 - dealidlen + 1 ).join( '0' ) );        
            return editactionlink.replace(dealidre, id);
        }

        var inreview_sorter = {};
        _.each(inreview, function(elem, index){ inreview_sorter[elem.status] = index; });
        
        function sortByStage(deal1, deal2) {      
              
            var a = inreview_sorter[deal1.Stage__c];
            var b = inreview_sorter[deal2.Stage__c];
            var al = deal1.Dead_Deal_Reason__c != null;
            var bl = deal2.Dead_Deal_Reason__c != null;
            var an = deal1.Name;
            var bn = deal2.Name;
            
            var ascore = 0;
            var bscore = 0;
            
            /* Deadness */
            if ( al ) { ascore += 100; }
            if ( bl ) { bscore += 100; }
            
            /* Stage */
            if ( a < b ) {
                ascore += -10;
            } else if ( a > b ) {
                bscore += -10;
            }
            
            /* Name */
            if ( an < bn ) {
                ascore += -1;
            } else if ( an > bn ) {
                bscore += -1;
            }
             
            if ( ascore < bscore ) {
                return -1;
            } else if ( ascore > bscore ) {
                return 1;
            } else {
                return 0;
            };
        }
        
        if ( USER_CONTACT_INFO == null ) {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getContactInformation}',
                function(result, event) {
                    if ( event.status ) {
                        if ( result && result.Id ) {
                            USER_CONTACT_INFO = {
                                user_id : result.User_ID__c, 
                                name : result.Name, 
                                contact_id : result.Id, 
                                full_name : result.Full_Name__c,
                                emg : result.EMG_Member__c,
                                email : result.Email,
                                employee_level : result.Employee_Level__c, 
                                deal_professional : result.ISINVESTMENTPRO__c,
                                initials : result.Initials__c,
                                status : result.Status__c,
                                title : result.Title,
                                group : result.WP_Group__c                         
                            };
                        }
                    }
                }
            );
        }

        if ( deal_stage_list == null ) {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getDealStageList}',
                function(result, event) {
                    if ( (event.status) && (result) ) {
                       deal_stage_list = result;
               _.each(deal_stage_list, function(elem, index){ 
                deal_stage_name_to_id_list[deal_stage_list[index]] = index; 
                //alert(deal_stage_list[index]+':'+deal_stage_name_to_id_list[deal_stage_list[index]]);
               });
                    }
                    else {
                      alert('Falied to retrieve Deal Stage pick list from the salesfroce schema.\nPlease contact the Helpdesk.'+event.message);
                    }
                }
            );
        }
        
        function updateDealList(userId, grpName) {
            if (!userId) {
                alert("The selected contact doesn\'t appear to have an associated user record in the Salesforce system.\nPlease contact the Helpdesk.");
                return;
            }
            if (typeof grpName === 'undefined') {
                grpName = "";
            }
            else {
                // alert('the grp name is ' + grpName);
            }
            //alert('User id= ' + userId);
            $jq("#progressbar").show();
            $jq("TABLE#deals").hide();
            
            var remoteURL = '{!$RemoteAction.kjoDealReportController.getUsersDeals}';
            if ($jq('#ddlGroups').val() == 1) {
            	remoteURL = '{!$RemoteAction.kjoDealReportController.getUsersGroupDeals}';
                $jq('#curruserDiv').css('display', 'none');
                $jq('#currgroupDiv').css('display', 'block');
            } 
            else if ($jq('#ddlGroups').val() == 2) {
            	remoteURL = '{!$RemoteAction.kjoDealReportController.getEARDeals}';
                $jq('#curruserDiv').css('display', 'none');
                $jq('#currgroupDiv').css('display', 'none');
            } 
            else {
                $jq('#curruserDiv').css('display', 'block');
                $jq('#currgroupDiv').css('display', 'none');
            }
            Visualforce.remoting.Manager.invokeAction(
                remoteURL,
                userId, grpName,
                function(result, event) {
                    if ( event.status ) {
                        if ($jq('#ddlGroups').val() == 1 && result.user_deals.length > 0) {
                            if (grpName != '')
                            	$jq('#currgroup').val(grpName);
                            else  {
                                /*
                                var i = 0;
                            	while(result.user_deals[i].WP_Groups__c.indexOf(',') > -1 && i < result.user_deals.length) {
                                	i++;
                            	}
                            	$jq('#currgroup').val(result.user_deals[i].WP_Groups__c);
                                */
                                $jq('#currgroup').val(USER_CONTACT_INFO.group);
                            }
                        }
                        var deals = result.user_deals;
                        
                var temp_deals_status = result.deals_status;    
            _.each(temp_deals_status, function(elem, index){               
               deal_id_to_status_list[elem.deal_id]= {is_deal_readonly:elem.is_deal_readonly,is_ear_disabled:elem.is_ear_disabled,
               show_emg_para:elem.show_emg_para}; 
               //alert("1. elem=" + elem + "\n2. index=" + index  + "\n3. elem.deal_id="+ elem.deal_id +"\n4. deal_id_to_status_list[elem.deal_id]=" + deal_id_to_status_list[elem.deal_id]);
               //if(index%7==0)
               //deal_id_to_status_list[elem.deal_id].is_deal_readonly = true;
            });
                        
                        var exited_stati = _.filter(inreview, function(item) { return item.liveclass == 'exited'; });
                        $jq.map(deals, function( e, i ) {
                            e._sf_e_url = createSFLink(e.Id);
                if(deal_id_to_status_list[e.Id].is_deal_readonly == true) {
                e.isDealUpdatable = false; }
                    else { 
                    e.isDealUpdatable = true;
                    }

                            e.show_emg_para = deal_id_to_status_list[e.Id].show_emg_para; 
                            e.dealisdead = (e.Dead_Deal_Reason__c != null);
                            e.dealisexited = _.some( exited_stati, 
                                function(item) {
                                    return item.status == e.Stage__c;
                                }
                            );
                            return e;
                        });
                        deals.sort( sortByStage );
                        
                        _.each( deals, convertUTCToLocalDeal );
                        $jq('DIV.dealslist').html(deals_template({deals : deals}));
                        
                        $jq("TABLE#deals tr.dealdetail:odd").css("background-color", "#eeeeee");
                        $jq("TABLE#deals tr.dealdetail:even").css("background-color", "#ffffff");
                        
                        $jq("TABLE#deals .deal-description").truncate({max_length:40});
                        $jq("TABLE#deals .emg-comment-trunc").truncate({max_length:40});
                        
                        $jq("#progressbar").hide();
                        $jq("TABLE#deals").fadeIn('slow');
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating deal list.\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                    
                },
                {escape:false}
            );
        }
        
        function updateLineItemRichTextValue(dlg){
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            
            var deal_id = dlg.find("#params").attr('data-deal-id');
            var sch_id = dlg.find("#params").attr('data-scHead-id');
            var table_id = dlg.find("#params").attr('data-table-id');
            var field_id=dlg.find("#params").attr('data-dealClosingField-id');;
            var field_data=dlg.find("#line-edit-comment").html();
            var color_id = dlg.find("#params").attr('data-color-id');
                        
            //alert("deal_id=" + deal_id + "\nsch_id = " + sch_id + "\ntable_id=" + table_id + "\nfield_data=" + field_data + "\nfield_id=" + field_id);
                     
            if(field_data.toString().length > 2000) {
              alert('Length of data exceeds the limit of 2000 characters.');
              dlg.find('.content-panel').show();
              dlg.find('.wait-panel').hide();                      
            } else if((sch_id==null)||(sch_id=='')) {
                    openGeneralDialog('Deal Score Header is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            } else if((field_id==null)||(field_id=='')) {
                    openGeneralDialog('Deal Line item Id is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            } 
            else {           
             var remoteCall = '';
             
             if (globalDCRState == 'Follow Up'){
                remoteCall = '{!$RemoteAction.kjoDealReportController.addUpdateDCR_FollowupReport_Detail_Field}';
             }else{
                remoteCall = '{!$RemoteAction.kjoDealReportController.addUpdateDCR_Report_Detail_Field}';
             }                        
             //alert("sch_id->" + sch_id + "\ntable_id->" + table_id + "\nfield_data->" + field_data + "\nfield_id->" + field_id);
             
             Visualforce.remoting.Manager.invokeAction(
                remoteCall,
                deal_id,
                sch_id,
                table_id,
                field_data,
                field_id,
                '',
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                    if(field_id!=result){
                      alert('addUpdateDCR_Report_Detail_Field failed. Please check.');
                      return;
                    }
                    $jq("DIV#"+ table_id + " TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "] #fieldContent").html(field_data);         
                    dlg.find("#line-edit-comment").val('');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();                
                    dlg.dialog("close");
                    } else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
             );
           }
           return true;
        }
        
        function updateDealCommentary(dlg) {

            var dealId = dlg.find("#params").attr('data-deal-id');
            var commentId = dlg.find("#params").attr('data-comment-id');
            var commentType = dlg.find("#params").attr('data-comment-type');
            
            var onBehalfOf = dlg.find("#user-onbehalf").val();
            var names = dlg.find("#user-onbehalf").autocomplete( "option", "source" );
            var onBehalfOfObj = _.find(names, function(obj){ return obj.value == onBehalfOf; });
            
            if ( !USER_CONTACT_INFO.deal_professional ) {
                if ( !onBehalfOfObj ) {
                    alert('You must select a deal professional on whose behalf you wish to submit the update');
                    return false;
                }
            }
            
            var firstComment = commentId == '' ? true : false;
            
            var onBehalfOfId = null;
            if ( onBehalfOfObj ) {
                onBehalfOfId = onBehalfOfObj.contact_id;
            }
            
            var dc = {
                Id : commentId,
                DealId : dealId,
                /*Name : */
                Comment : dlg.find("#comment").html(),                
                /*UpdatedBy : */
                /*UpdatedById : */
                UpdatedOnBehalfOf : onBehalfOfId ? onBehalfOf : null,
                UpdatedOnBehalfOfId : onBehalfOfId
                /*UpdatedOn : */
            };
            
            var end_point;
            if (commentType == 'comment') {
                end_point = '{!$RemoteAction.kjoDealReportController.updateEMGComment}';
            } else if (commentType == 'paragraph') {
                end_point = '{!$RemoteAction.kjoDealReportController.updateEMGParagraph}';
            } else {
                alert('Invalid comment type encountered - ' + commentType);
            }

            Visualforce.remoting.Manager.invokeAction(
                end_point,
                dc,
                function(result, event) {
                    if ( event.status ) {
                        var elem;
                        if ( commentType == 'comment' ) {
                            if ( firstComment ) {
                                elem = $jq("TR[data-deal-id=" + dealId + "] .emg-comment[data-comment-id='']");
                                elem.attr('data-comment-id', result.Id);
                            }
                            
                            elem = $jq("TR[data-deal-id=" + dealId + "] .emg-comment[data-comment-id=" + result.Id + "]");
                            if ( elem.length > 0 ) {
                                elem.html(result.Comment);
                                $jq("TR[data-deal-id=" + dealId + "] .emg-comment-trunc").truncate({max_length:40});
                                elem.parent('.comment-hide').removeClass('comment-hide').siblings('.comment-hide').removeClass('comment-hide');
                            }
                            
                            elem = $jq("TR[data-deal-id=" + dealId + "] .update-info");
                            if ( elem.length > 0 ) {
                                elem.html((result.UpdatedOnBehalfOfId ? result.UpdatedOnBehalfOf : result.UpdatedBy) + ' ' + result.UpdatedOn);
                            }
                        }
                        
                        return true;
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating commentary.\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
            return true;
        }
//kckkck

 function updateDealRequiredRichTextFieldsEIR(dlg,show_prev_ear_report,closeFormIn) {
        var closeForm=true;    
        if (!(closeFormIn=== undefined || closeFormIn === null)) { closeForm = closeFormIn;}
        dlg.find('.content-panel').hide();
        dlg.find('.wait-panel').show(); 
            
        var dealId = dlg.find("#params").attr('data-deal-id');          
        var dealSectorOptions='',dealSectorOptionList;  
        dealSectorOptionList= dlg.find("#earReportViewContent-EIR").find("#earReportSectorSel").val();
        if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
           for(var index=0;index<dealSectorOptionList.length;++index){
             if(dealSectorOptionList[index] != 'multiselect-all') {                       
               dealSectorOptions += dealSectorOptionList[index];
               if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
             }
           }
         }
         var deal_fields= {
                dealId:dealId,             
                whyInterestingEIR:dlg.find("#whyInteresting-EIR").html().replace('<p>','').replace('</p>',''),         
                tenureExpectations:dlg.find("#tenureExpectations-EIR").html().replace('<p>','').replace('</p>',''),
                dealName:'',
                dealSector:dealSectorOptions,
                dealTeam:'',
                dealDesc:'',
                dealKeyNextSteps:dlg.find("#earReportViewContent-EIR").find("#earReportDealKeyDates").val(),
                EIR_Description:dlg.find("#earDescription-EIR").val(),//kck4
                CompCurrencyCode:'',
                expectedAnnualBudget:dlg.find("#earReportViewContent-EIR").find("#expectedAnnualBudget").val(),  
                expectedTiming:dlg.find("#earReportViewContent-EIR").find("#expectedTiming").val(),  
                expectedWPCommitment:dlg.find("#earReportViewContent-EIR").find("#expectedWPCommitment").val()                      
            };
           end_point = '{!$RemoteAction.kjoDealReportController.updateDealRequiredRichTextFieldsEIR}';
           Visualforce.remoting.Manager.invokeAction(
                end_point,
                deal_fields,
                function(result, event) {
                    if ( (result!=null) && (event.status) ) {  
                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       
                        var elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-nextsteps");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealKeyNextSteps);
                        }  

                        elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-deal-sector");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealSector);
                        }  
                        
                       if(show_prev_ear_report == true) {
                         showPreviewOfEIRReport();
                       } else {
                       if(closeForm)
                         dlg.dialog("close");          //kck7
                       }                        
                       return true;
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                             if (event.message.indexOf("insufficient access") > -1)
                                alert('The Early Action Report is read-only.  You cannot save changes.');
                            else
                            	alert('updateDealRequiredRichTextFieldsEIR:Error encountered\n' + event.message);
                         
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
            return true;
        }
        
        function updateDealRequiredRichTextFields(dlg,show_prev_ear_report,closeFormIn) {
            var closeForm=true;    
            if (!(closeFormIn=== undefined || closeFormIn === null)) { closeForm = closeFormIn;}
        
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show(); 
            
            var dealId = dlg.find("#params").attr('data-deal-id');          
            var dealSectorOptions='',dealSectorOptionList;  
            dealSectorOptionList= dlg.find("#earReportViewContent").find("#earReportSectorSel").val();
            
            if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
             for(var index=0;index<dealSectorOptionList.length;++index){
               if(dealSectorOptionList[index] != 'multiselect-all') {                       
                 dealSectorOptions += dealSectorOptionList[index];
                 if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
               }
             }
            }
    
            var deal_fields= {
                dealId:dealId,
                areaOfConcern:dlg.find("#areaOfConcern").html(),
                fitWithGrp:dlg.find("#fitWithGrp").html(),
                whyInteresting:dlg.find("#whyInteresting").html(),
                humanCapitial:dlg.find("#humanCapitial").html(),
                capitalMarketConsideration:dlg.find("#capitalMarketConsideration").html(),
                dealName:'',
                dealSector:dealSectorOptions,
                dealTeam:'',
                compDesc:dlg.find("#earReportViewContent").find("#earReportCompDesc").val(),
                compRevenue_MM:'',
                compEBITDA_MM:'',
                dealDesc:'',
                dealKeyNextSteps:dlg.find("#earReportViewContent").find("#earReportDealKeyDates").val(),
                WP_Investment_MM:dlg.find("#earReportViewContent").find("#earReportWPInv").val(),
                WP_Ownership_Fully_Diluted:dlg.find("#earReportViewContent").find("#earReportWPDiluted").val(),
                Transaction_Value_MM:dlg.find("#earReportViewContent").find("#earReportTrans").val(),
                Deal_Owner_Source:dlg.find("#earReportViewContent").find("#earReportDealOwnerSel").val() ,
                EAR_Description:dlg.find("#earDescription").val(),
                CompCurrencyCode:'',
                earMetrics:''
            };
            deal_fields.earMetrics = new Array();
            deal_fields.earMetrics.push({deal_id:'',scHead_id:'',lineItem_id:'',ear_metric_name:'',ear_metric_per_end:'',ear_metric_value:''});
            var end_point;
            end_point = '{!$RemoteAction.kjoDealReportController.updateDealRequiredRichTextFields}'; //kck5
            Visualforce.remoting.Manager.invokeAction(
                end_point,
                deal_fields,
                function(result, event) {
                    if ( (result!=null) && (event.status) ) {  
                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       
                        var elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-nextsteps");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealKeyNextSteps);
                        }  

                        elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-deal-sector");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealSector);
                        }  
                        
                       if(show_prev_ear_report == true) {
                         showPreviewOfEarReport();
                       } else {
                       //alert('here11');
                        if(closeForm) dlg.dialog("close");          //kck6
                       }                        
                       return true;
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                            if (event.message.indexOf("insufficient access") > -1)
                                alert('The Early Action Report is read-only.  You cannot save changes.');
                            else
                            	alert('updateDealRequiredRichTextFields:Error encountered\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
            return true;
        }
        
        function updateDealKeyDatesNextSteps(dlg) {

            var dealId = dlg.find("#params").attr('data-deal-id');          
          
            
            var dc = {
                DealId : dealId,
                KeyDates : dlg.find("#keyDates").val()
            };
            
            var end_point;
            //alert(dc.KeyDates);
            end_point = '{!$RemoteAction.kjoDealReportController.updateDealForKeyDatesNextSteps}';


            Visualforce.remoting.Manager.invokeAction(
                end_point,
                dc,
                function(result, event) {
                    if ( event.status ) {
                        var elem = $jq("TR[data-deal-id=" + dealId + "] .emg-nextsteps");
                        if ( elem.length > 0 ) {
                          elem.html(dc.KeyDates);
                        }                       

                        elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-deal-sector");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealSector);
                        }  
                        
                        return true;
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating KeyDates/nextSteps.\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
            return true;
        }
        
        function updateDealStaffing(dlg) {
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show(); 
            
            var dealId = dlg.find("#params").attr('data-deal-id');
            
            var staff = new Array();
            $jq("#dealteam li[data-contact-id]").each(function(index, element){
                
            if ($jq(this).find("#tm-status-id").hasClass("on-stm")) {
               staff.push({label:'',user_id:'',contact_id:$jq(this).attr('data-contact-id'),
                    title:'',rank:0,group_name:'',initials:'',isSeniorTeamMember:'true'});
            }
            else {
               staff.push({label:'',user_id:'',contact_id:$jq(this).attr('data-contact-id'),
                    title:'',rank:0,group_name:'',initials:'',isSeniorTeamMember:'false'});
            }                      
                
            });           
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.updateDealStaffing}',
                dealId,
                staff,
                function(result, event) {
                    if ( event.status ) {
                        var new_staff = result;
                        elem = $jq("TR[data-deal-id=" + dealId + "] #staff-initials");
                        elem.empty();
                        _.each( new_staff, function( person ) {
                            var link = $jq("<a>", {
                                "href" : "#",
                                title : person.label
                            }).text(person.initials);
                            var span = $jq("<span>").append(link);
                            elem.append(span);
                        });
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        dlg.dialog("close");
                                                
                    } else {
                        alert(event.message);
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                }
            );
            
        }
        
        function getFinanceOptions() {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getFinanceOptions}',
                function(result, event) {
                    alert(result);
                },
                {escape:false}
            );
        }
        
        function getCompanyFinancials(company_id, dlg,isDealReadOnly) {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getCompanyFinancials}',
                company_id,
                function(result, event) {
                    if ( event.status ) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        //alert('before isDealReadOnly'+isDealReadOnly);
                        isDealReadOnly=!isDealReadOnly;
                        //alert('after isDealReadOnly'+isDealReadOnly);
                        var financials_template = Handlebars.compile($jq("#financials-template").html());
                        _.each(result, convertUTCToLocalFinance);
                        
                         $jq.map(result, function( e, i ) {
                             e.isDealUpdatable = isDealReadOnly;
                         });
                        
                        
                        dlg.find('#financials-dialog-content').html(financials_template({financials : result }));
                        dlg.dialog("option", "position", ['center', 'center'] );
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Problem Encountered\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
        }
        
        var periods = [
            'Annual',
            'LTM',
            'YTD',
            'Quarterly',
            'L6M'
        ];

        var currencies;
        

        function convertUTCToLocalFinance(fin_record) {
            fin_record.Period_Ended__c += TZ_offset;
        }
                
        function convertUTCToLocalDeal(deal) {
            deal.Date_Received__c += TZ_offset;
            deal.Dead_Deal_Date__c += TZ_offset
        }

        function getCompanyFinancialSingle(financial_id, dlg) {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getCompanyFinancialSingle}',
                financial_id,
                function(result, event) {
                    if ( event.status ) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        var edit_financials_template = Handlebars.compile($jq("#edit-financials-template").html());
                        _.each(result, convertUTCToLocalFinance);
                        dlg.find('#edit-financials-dialog-content').html(edit_financials_template({fin : result[0], periods : periods, currencies : currencies}));
                        dlg.find('#datepicker').datepicker({ minDate: new Date(1980, 0, 1) });
                        dlg.find('.amount').autoNumeric({mDec:2, vMin:-999999999999, vMax:999999999999});
                        dlg.dialog("option", "position", ['center', 'center'] );
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Problem Encountered\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
        }

        function newCompanyFinancialSingle(company_id, dlg) {           
        
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            var company = null;            
            var empty_financial = {
                Period_Type__c : 'LTM',
                Period_Ended__c : null,
                Revenues__c : null,
                Net_Income__c : null,
                EBITDA__c : null,
                Book_Value__c : null,
                Enterprise_Value__c : null,
                Market_Cap__c : null,
                Company_Currency__c : 'USD',
                CurrencyIsoCode : 'USD'
            };            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getCompany}',
                company_id,              
                function(result, event) {
                    if ( event.status ) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();                    
                         company = {                                 
                                name : result.Name, 
                                contact_id : result.Id, 
                                CurrencyIsoCode : result.CurrencyIsoCode,
                                Company_Currency__c : result.Company_Currency__c            
                            }; 
                            
                        empty_financial.Company_Currency__c = company.Company_Currency__c; 
                        empty_financial.CurrencyIsoCode = company.CurrencyIsoCode;
                       // alert(empty_financial.Company_Currency__c+':'+result.Name);
                        var edit_financials_template = Handlebars.compile($jq("#edit-financials-template").html());      
                        dlg.find('#edit-financials-dialog-content').html(edit_financials_template({fin : empty_financial, periods : periods, currencies : currencies}));
                        dlg.find('#datepicker').datepicker({ minDate: new Date(1980, 0, 1) });
                        dlg.find('.amount').autoNumeric({mDec:2, vMin:-999999999999, vMax:999999999999});
                        dlg.dialog("option", "position", ['center', 'center'] );
                               
                    } 
                },
                {escape:false}
            );             
        }
        
        function updateCompanyFinancial(dlg) {
            
            var company_id = dlg.find('#params').attr('data-company-id');
            var financial_id = dlg.find('#params').attr('data-financial-id');
            
            var per = dlg.find('#period').val();
            
            var dte_value = dlg.find('#datepicker').val();
            var dte = new Date(dte_value);
            dte = dte.toUTCString();
            var rev = dlg.find('#revenues').autoNumeric('get');
            var nin = dlg.find('#netincome').autoNumeric('get');
            var ebt = dlg.find('#ebitda').autoNumeric('get');
            var bkv = dlg.find('#bookvalue').autoNumeric('get');
            var env = dlg.find('#enterprisevalue').autoNumeric('get');
            var mkc = dlg.find('#marketcap').autoNumeric('get');
            var cur = dlg.find('#currency').val();
            var iso = dlg.find('#isocode').val();
            
            var parent_dlg = $jq('#financials-dialog');

            var  entered_date_val = new Date(dte_value);
            var  compare_date_val = new Date(1980,0,1);
            if(checkdate(dte_value,'/')== false) {
              openGeneralDialog("Please enter valid date:mm/dd/yyyy","Error");
              return false;
            } else if(entered_date_val < compare_date_val) {
              openGeneralDialog("Please enter a date on or after 01/01/1980.","Error");
              return false;
            }   
            parent_dlg.find('.content-panel').hide();
            parent_dlg.find('.wait-panel').show();
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.upsertCompanyFinancial}',
                company_id,
                financial_id,
                per,
                dte,
                rev == '' ? null : rev,
                nin == '' ? null : nin,
                ebt == '' ? null : ebt,
                bkv == '' ? null : bkv,
                env == '' ? null : env,
                mkc == '' ? null : mkc,
                cur,
                iso,
                function(result, event) {
                    if ( event.status ) {
                        getCompanyFinancials( company_id, parent_dlg,false );
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        var matchString2 = "FIELD_CUSTOM_VALIDATION_EXCEPTION, Period Ended  must be on or beyond";
                        matchString2 = matchString2.toLowerCase();
                        
                        if(event.message.toLowerCase().indexOf(matchString) != -1)
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          dlg.dialog("close");
                          parent_dlg.dialog("close");
                          top.location.href='/apex/wp_mydeals';
                        }                       
                        else if(event.message.toLowerCase().indexOf(matchString2) != -1)
                        {
                          alert('Salesforce Custom Field Validation Exception:Period Ended  must be on or beyond Jan 01 1980');
                          dlg.dialog("close");
                          parent_dlg.dialog("close");
                          top.location.href='/apex/wp_mydeals';
                        }   
                        else
                        {
                         alert('Problem Encountered\n' + event.message);
                        }
                    }
                },
                {escape:false}
            );
            return true;            
        }

        function updateDealStageForADeal(dlg) {
            
            var dealId = dlg.find("#params").attr('data-deal-id');         
            
            var stg = dlg.find('#dealStage').val();            
           
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show(); 
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.isUpdateDealStageForADealAllowed}',
                dealId,
                stg,
                function(result, event) {    
                  if ( (event.status) && result ) {                  
                   if((result == 'Not_Allowed_No_Senior_TM')||(result == 'Not_Allowed_Stage_Threshold_X'))
                   {
                     alert('updateDealStageForADeal:isUpdateDealStageForADealAllowed:Failed:'+result);
                   }
                   else 
                   {
            //alert("DEBUG VPAGE function RESULT=" + result + "\ndoUpdateDealStageForADeal-->STAGE->" + stg);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.doUpdateDealStageForADeal}',
                dealId,
                stg,
                function(result, event) {
                    if ( (event.status) && result ) {
                        //alert('updateDealStageForADeal:doUpdateDealStageForADeal:Updated successfully');
                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-stage-1");
                        if ( elem.length > 0 ) {
                         //alert('inside'+elem.length+':'+stg);    
                         //alert('Old:'+elem.text()+':New:'+stg);                        
                           elem.html('<strong>'+stg+'</strong>');
                           var _s;
                           
                                    if ( stg in deal_icon_styles) {
                                        _s = deal_icon_styles[stg];
                                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-icon");
                                        //alert(elem.length+_s);
                                        if (elem.hasClass("deal-review"))
                                        {
                                          //alert('removing class deal-review');
                                          elem.removeClass("deal-review");
                                        }
                                        else if(elem.hasClass("deal-portfolio"))
                                        {
                                          //alert('removing class deal-portfolio');
                                          elem.removeClass("deal-portfolio");
                                        }
                                        else if (elem.hasClass("deal-dead"))
                                        {
                                          //alert('removing class deal-dead');
                                          elem.removeClass("deal-dead");
                                        }
                                        else if (elem.hasClass("deal-exited"))
                                        {
                                          //alert('removing class deal-exited');
                                          elem.removeClass("deal-exited");
                                        }
                                        
                                        elem.addClass( _s);
                                    } 
                   
                           
                           
                        }                       
                      dlg.find('.content-panel').show();
                      dlg.find('.wait-panel').hide(); 
                      dlg.dialog("close");
                      if(result == 'EAR_NEEDED') {
                     var dlg_2 = $jq("#alert-dialog-for-ear-report");
                     dlg_2.find("#params").attr('data-deal-id',dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', '');
                     dlg_2.find("#params").attr('data-deal-stage-from-user', '');
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage', false);
                     dlg_2.find("#dialog-for-ear-content").html('Do you want the Early Action Report to be emailed to you?');
            
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();         
                     
                      }
                        
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('updateDealStageForADeal:doUpdateDealStageForADeal:Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );          
                   
                   
                   }                                    
                  }
                  else {
                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }
                
                       
            
            
              },
                 {escape:false}
             );   
    
        }
        
        function showFinancingDialog(eventInput){
        
            var deal_id = $jq(this).attr('data-deal-id');
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            var company_id = $jq(this).attr('data-company-id');
 
            eventInput.preventDefault();
            
        var isDealReadOnly;
        if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
           isDealReadOnly = false;
        }
            
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
        
            var dlg = $jq("#financials-dialog");
            dlg.find("#new-financial").attr('data-company-id', company_id);
            
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            
            dlg.dialog("open");
            dlg.dialog('option', 'position', 'center');
            
            if(isDealReadOnly == true) {
              dlg.dialog("option" , "title" , "Viewing Financials for deal - "+deal_name);
              dlg.find("#new-financial").hide();              
            }
            else {
              dlg.dialog("option" , "title" , "Edit Financials for deal - "+deal_name); 
              dlg.find("#new-financial").show();
            }
            getCompanyFinancials(company_id, dlg,isDealReadOnly);


            return false;                   
            
        }
                
        function showEditFinancialsDialog(event){

            event.preventDefault();
            var financial_id = $jq(this).attr('data-financial-id');
            var company_id = $jq(this).attr('data-company-id');
            var dlg = $jq("#edit-financials-dialog");

            dlg.find("#params").attr('data-financial-id', financial_id);
            dlg.find("#params").attr('data-company-id', company_id);
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();

            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Edit Financials");
            dlg.dialog('option', 'position', 'center');

            getCompanyFinancialSingle(financial_id, dlg);

            return false;
        }

        function getCurrentTab(){       
            var wTab = $jq(this).attr('tabid');
            //var otherConsiderVal ='';
            var teamRecommendVal ='';
            //alert("wTab="+wTab);
            globalCurrentTab = wTab;
            
            var dlg1 = $jq("#edit-deal-closing-report-fields-Dialog");
            var ulCount = dlg1.find("#" + globalCurrentTab +" ul li").length;
            if(ulCount<1){
                var ulHeight = dlg1.find("#" + globalCurrentTab +" ul").height();
                dlg1.find("#" + globalCurrentTab +" ul").css("border","none");
            }         
            //alert('getCurrentTab=>' + globalCurrentTab + '\nulCount=>' + ulCount);
            if (globalCurrentTab=='DCR-Team-Recommendations'){
                //dlg1.find("#wpDCR-Team-Recommendations").show();
                //teamRecommendVal = dlg1.find("#DCR-Report-View").find("#dcrTeamRecommend").val();
                //dlg1.find("#richtextFollowup-Team-Recommendations").html(teamRecommendVal);
                showFollowupTeamRecommend(dlg1);
            }else if (globalCurrentTab=='DCR-Other-Considerations'){
                //alert('globalCurrentTab=' + globalCurrentTab);
                showFollowupOtherConsiderations(dlg1);
            }
            else{
                dlg1.find("#wpDCR-Team-Recommendations").hide();
                dlg1.find("#wpDCR-Other-Considerations").hide();
            }            
            return true;
        }
        function showFollowupOtherConsiderationsDialog(mainDlg){
            var dlg = $jq("#followup-edit-otherconsider-dialog");
            dlg.find("#followup-edit-otherconsider").val($jq('#dcrOtherConsider').val() + ' ');
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();
            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Editing Other Considerations for deal \"" + globalDealName + "\"");
            dlg.dialog('option', 'position', 'center');
            $jq("#followup-edit-otherconsider").tinymce().focus();
        }
        function showFollowupOtherConsiderations(mainDlg){
            $jq("#wpDCR-Other-Considerations").show();
            $jq("#richtextareaFollowup-Other-Considerations").html($jq('#dcrOtherConsider').val());
        }       
        function showFollowupTeamRecommend(mainDlg){
            $jq("#wpDCR-Team-Recommendations").show();
            $jq("#richtextareaFollowup-Team-Recommendations").html($jq('#dcrTeamRecommend').val());
        }       
        function showFollowupTeamRecommendDialog(mainDlg){
            var dlg = $jq("#followup-edit-teamrecommend-dialog");
            dlg.find("#followup-edit-teamrecommend").val($jq('#dcrTeamRecommend').val() + ' ');
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();
            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Editing Team Recommendations for deal \"" + globalDealName + "\"");
            dlg.dialog('option', 'position', 'center');
            $jq("#followup-edit-teamrecommend").tinymce().focus();
        }
            
        function showEditLineItemDialog (event){                      
            event.preventDefault();           
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var field_id = $jq(this).attr('data-dealClosingField-id');
            var sch_id = $jq(this).attr('data-scHead-id');
            var dlg = $jq("#dcr-edit-lineitem-dialog");
            
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            var line_data = $jq("DIV#"+ table_id + " TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "] #fieldContent").html();         
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-table-id', table_id);
            dlg.find("#params").attr('data-dealClosingField-id', field_id);
            dlg.find("#params").attr('data-scHead-id',sch_id);
            dlg.find("#line-edit-comment").val(line_data);
            
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();
            dlg.dialog("open");
            if (globalDCRState == 'Follow Up'){
                if ($jq('#line-edit-comment').val()==''){
                    $jq(".ui-dialog-buttonpane button:contains('Update')").button('option', 'label', 'Add');
                }else{
                    $jq(".ui-dialog-buttonpane button:contains('Add')").button('option', 'label', 'Update');
                }
                dlg.dialog("option" , "title" , "Editing One-Year Scorecard item for deal \""+deal_name+"\"");
            }else{
                dlg.dialog("option" , "title" , "Editing item for deal \""+deal_name+"\"");
            }
            dlg.dialog('option', 'position', 'center');     
            $jq("#line-edit-comment").tinymce().focus();
            $jq('#line-edit-comment').val($jq('#line-edit-comment').val() + ' ');
        }
        
        function showEditDCRDialog (event){            
            event.preventDefault();           
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var field_id = $jq(this).attr('data-dealClosingField-id');
            var sch_id = $jq(this).attr('data-scHead-id');
           
            var dlg = $jq("#dcr-edit-dialog");
            //var dlg = $jq("#editcommentarydialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            //var field_data = $jq("TABLE#"+ table_id +" " + "TR[data-dealClosingField-id=" + field_id + "] #fieldContent").text();
            var field_dataNew = $jq("DIV#"+ table_id + " TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "] #fieldContent").text();         
            
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-table-id', table_id);
            dlg.find("#params").attr('data-dealClosingField-id', field_id);
            dlg.find("#params").attr('data-scHead-id',sch_id);
            dlg.find("#dcrEditContent").val(field_dataNew);
            //dlg.find("#comment").val(field_dataNew);
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();
            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Editing item for deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');
            return false;
        }

        function showAddDCRDialog (event){
            event.preventDefault();           
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var sch_id = $jq(this).attr('data-scHead-id');
            var dlg = $jq("#dcr-add-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
    
            var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
            var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
            var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];        
            if(dcr_reportType_local == ''){
                openGeneralDialog("Please specify Type Of Report first","Error");
                return;
            }         
            if((deal_hdr_id == '') || (deal_hdr_id == null) || (sch_id == '') || (sch_id == null)){
                openGeneralDialog("Please create header first for the selected Type Of Report","Error");
                return;
            }       
            if(deal_hdr_id != sch_id){
                openGeneralDialog("mismatch in Deal Score Header.Please check","Error");
                return;
            }  
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-table-id', table_id);
            dlg.find("#params").attr('data-scHead-id',sch_id);
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();           
            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Adding New Item for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');
            return false;
        }
        
        function showAddLineItemDialog (event){
            event.preventDefault();           
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var sch_id = $jq(this).attr('data-scHead-id');
            var dlg = $jq("#dcr-add-lineitem-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            //alert("inside = showAddLineItemDialog");
            
            var dlg_1 = $jq("#edit-deal-closing-report-fields-Dialog");
            var dcr_reportType_local = dlg_1.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
            //alert("dcr_reportType_local=="+dcr_reportType_local);
            var deal_hdr_id = dcrReportTypeStatusList[dcr_reportType_local];        
            if(dcr_reportType_local == ''){
                openGeneralDialog("Please specify Type Of Report first","Error");
                return;
            }         
            if((deal_hdr_id == '') || (deal_hdr_id == null) || (sch_id == '') || (sch_id == null)){
                openGeneralDialog("Please create header first for the selected Type Of Report","Error");
                return;
            }       
            if(deal_hdr_id != sch_id){
                openGeneralDialog("mismatch in Deal Score Header.Please check","Error");
                return;
            }  
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-table-id', table_id);
            dlg.find("#params").attr('data-scHead-id',sch_id);
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();           
            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Adding New Item for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');
            $jq("#line-add-comment").tinymce().focus();
            return false;
        }       
        function showDeleteFinancialsDialog(event){
            event.preventDefault();
            var financial_id = $jq(this).attr('data-financial-id');
            var company_id = $jq(this).attr('data-company-id');
            var dlg = $jq("#edit-financials-dialog");
            
            $jq( "#dialog-confirm" ).dialog({
                resizable: false,
                height:140,
                width : 300,
                modal: true,
                buttons: {
                    "Delete": function() {
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.kjoDealReportController.deleteCompanyFinancial}',
                            financial_id,
                            function(result, event) {
                                if ( event.status ) {
                                    getCompanyFinancials( company_id, $jq('#financials-dialog'),false );
                                } else {
                                    
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Problem Encountered\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                                   
                                }
                            },
                            {escape:false}
                        );
                        $jq(this).dialog( "close" );
                    },
                    "Cancel" : function() {
                        $jq(this).dialog( "close" );
                    }
                }
            });            
            return false;
        }
        
        function showToggleFollowupColor(event){
            alert("Toggle Color Implementing Soon...");
            return true;
        }
        function showEditFollowupLineItemDialog(){
            alert("Edit Follow up Line Item Value...Implementing Soon...");
            return true;
        }

        function clickFollowupInputIn(event){
            $jq(this).autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});
            globalInputValIn=$jq(this).val();
            //alert("clickFollowupInputIn=>" + globalInputValIn);
        }       
        
        function clickFollowupInputOut (event){
            var globalInputValOut ='';
            globalInputValOut = $jq(this).val();
            if (globalInputValOut == globalInputValIn){
                return true;
            }
            var data_dealid = $jq(this).attr('data-deal-id');
            var data_sch_id = $jq(this).attr('data-scoreHeader-id');
            var data_lineitem_id = $jq(this).attr('data-lineItem-id');
            //alert("data_lineitem_id=>" + data_lineitem_id +"\ndata_sch_id-->" + data_sch_id);         
            
            var remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_Financial_FollowupInput}'; 
            Visualforce.remoting.Manager.invokeAction(
                remoteCall,
                data_dealid,
                data_sch_id,
                data_lineitem_id,
                globalInputValOut,
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                        //alert("Completed with Line Item > Finance > Followup > id ==" + result );         
                    } else {                       
                            var matchString = "\'syntax error\'.  Logged in?";
                            matchString = matchString.toLowerCase();
                            if (event.message.toLowerCase().indexOf(matchString) == -1){
                                alert('Error encountered while processing followup change color\n' + event.message);
                            }
                            else{
                                alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                    top.location.href='/apex/wp_mydeals';
                            }                      
                     }
                },
                {escape:false}
            );          
        }
        function showChangeFinanceColorDCRDialog(event){
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var field_id = $jq(this).attr('data-lineItem-id');
            var sch_id = $jq(this).attr('data-scoreHeader-id');
            var colorid = "#followup-finance-color-id-" + field_id;
            var color = $jq(this).find(colorid).val();
            
            //var allIds = "Table id-> "+ table_id +"\nDeal id->" + deal_id + "\nLine id->" + field_id + "\nHeader id->" + sch_id + " \nColor id->" + color;            
            //alert("AR:DEBUG Changing>Finance>" + allIds );
            
            var remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_Financial_FollowupColor}';         
            Visualforce.remoting.Manager.invokeAction(
                        remoteCall,
                        table_id,
                        deal_id,
                        sch_id,
                        field_id,
                        color,
                        function(result, event) {
                            if ( (result!= null) && (event.status) ) { 
                            	var cdlg = $jq("#edit-deal-closing-report-fields-Dialog");
                                cdlg.find("TR[data-lineItem-id=" + field_id + "]").css("background-color", color);               
                            } else {                       
                                var matchString = "\'syntax error\'.  Logged in?";
                                matchString = matchString.toLowerCase();
                                if (event.message.toLowerCase().indexOf(matchString) == -1){
                                 alert('Error encountered while processing followup change color\n' + event.message);
                                }
                                else{
                                  alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                  top.location.href='/apex/wp_mydeals';
                                }                      
                            }
                        },
                        {escape:false}
                    );          
            
            
            return true;
        }
        
        function showChangeColorDCRDialog(event){
            //event.preventDefault();
           
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var field_id = $jq(this).attr('data-dealClosingField-id');
            var sch_id = $jq(this).attr('data-scHead-id');
            var color = $jq(this).attr('data-color-id');
            var colorid = "#followupcolor-id-" + field_id;
            color = $jq(this).find(colorid).val();
            
            //alert("HeaderID=>" + sch_id + "Line id =>" + field_id +"\nColor-->"+ color);
    
            var remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_FollowupReport_Detail_Field}';         
            Visualforce.remoting.Manager.invokeAction(
                        remoteCall,
                        deal_id,
                        sch_id,
                        table_id,
                        '',
                        field_id,
                        color,
                        function(result, event) {
                            if ( (result!= null) && (event.status) ) { 
                            	//alert("color " + JSON.stringify(event));
                                var cdlg = $jq("#edit-deal-closing-report-fields-Dialog");
                                cdlg.find("TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "]").css("background-color", color);                
                            } else {                       
                                var matchString = "\'syntax error\'.  Logged in?";
                                matchString = matchString.toLowerCase();
                                if (event.message.toLowerCase().indexOf(matchString) == -1){
                                 alert('Error encountered while processing followup change color\n' + event.message);
                                }
                                else{
                                  alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                  top.location.href='/apex/wp_mydeals';
                                }                      
                            }
                        },
                        {escape:false}
                    );          
        }
        
        function showDeleteDCRDialog(event){
            event.preventDefault();
           
            var table_id = $jq(this).attr('data-table-id');
            var deal_id = $jq(this).attr('data-deal-id');
            var field_id = $jq(this).attr('data-dealClosingField-id');
            var sch_id = $jq(this).attr('data-scHead-id');
           
            var dlg = $jq("#dcr-delete-dialog");
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-table-id', table_id);
            dlg.find("#params").attr('data-dealClosingField-id', field_id);
            dlg.find("#params").attr('data-scHead-id',sch_id);
            dlg.find('.content-panel').show();
            dlg.find('.wait-panel').hide();

            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Deleting Item for Deal \""+deal_name+"\"");
            dlg.dialog('option', 'position', 'center');

            return false;
        }
       
        function showNewFinancialsDialog(event){
            event.preventDefault();
            var company_id = $jq(this).attr('data-company-id');
            var dlg = $jq("#edit-financials-dialog");
            dlg.find("#params").attr('data-financial-id', '');
            dlg.find("#params").attr('data-company-id', company_id);
            dlg.dialog("open");
            dlg.dialog("option" , "title" , "Add Financials");
            dlg.dialog('option', 'position', 'center');
            newCompanyFinancialSingle(company_id, dlg);
            return false;
        }

        function showStaffingDialogFromStage(deal_id,deal_stage_stored,deal_stage_from_user)
        {  
           //alert('showStaffingDialogFromStage'+deal_id+':'+deal_stage_stored+deal_stage_from_user);
           showStaffingDialogCommon(deal_id,true,deal_stage_stored,deal_stage_from_user);
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();           
        }
    
        function showStaffingDialogFromStageEvent(eventInput){
          var deal_id = $jq(this).attr('data-deal-id');
          eventInput.preventDefault();
          showStaffingDialogCommon(deal_id,false,'','');
        }
    
        function showStaffingDialogCommon(deal_id,come_thr_deal_stage,
                p_deal_stage_stored,p_deal_stage_from_user){
 

        var isDealReadOnly;
        if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
          isDealReadOnly = false;
        }               
                    
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            //alert('showStaffingDialogCommon:'+deal_id+':'+deal_name);
            
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
                
 
            var dlg = $jq("#staffingdialog");
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-deal-readonly', isDealReadOnly);
            dlg.find("#params").attr('data-deal-come-thr-deal-stage', come_thr_deal_stage);
            dlg.find("#params").attr('data-deal-stage-stored', p_deal_stage_stored);
            dlg.find("#params").attr('data-deal-stage-from-user', p_deal_stage_from_user);
                        
            
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            
            dlg.dialog("open");
            dlg.dialog('option', 'position', 'center');     
            

            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'dealStaff-my-dialog bs');
             dlg.dialog("option" , "title" , 'Viewing deal team for deal - '+deal_name);                             
            }
            else
            {              
              dlg.dialog("option" , "title" , 'Edit deal team for deal - '+deal_name);                                    
            }                       
                        
        
            var dlg_template = Handlebars.compile($jq("#staffing-dialog-template").html());
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getDealStaffing}',
                deal_id,
                function(result2, event2) {
                    if ( event2.status ) {
                    
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDealStageForADeal}',
                deal_id,
                function(result, event) {
                    if ( event.status) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        if((p_deal_stage_stored=='') && (p_deal_stage_from_user=='')) {
                         dlg.find("#params").attr('data-deal-stage-stored', result.Stage__c);
                         dlg.find("#params").attr('data-deal-stage-from-user',result.Stage__c);
                        }
                        $jq('#dealteam').empty();
                        
                        var local_stm_contact_status_list_for_deal = new Array();
                        
                        $jq.map(result2, function( e, i ) {
                            if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
                             e.isDealUpdatable = false; }
                            else { 
                             e.isDealUpdatable = true;}
                             
                            local_stm_contact_status_list_for_deal.push({
                                contact_id:e.contact_id,isSeniorTeamMember:e.isSeniorTeamMember,
                                canBeASeniorTeamMember:e.canBeASeniorTeamMember});
                                
                            if(e.isSeniorTeamMember == 'true') {                             
                             e.isSTM = true; }
                            else { 
                             e.isSTM = false;}
                        });                     
                        
                        
                        dlg.find('#staffing-dialog-content').html(dlg_template({dealname : deal_name, staff : result2}));
                        
                        if(isDealReadOnly == true) {
                           $jq( "#staff-searcher" ).hide();
                           $jq('.dealStaff-my-dialog .ui-button-text:contains(Update)').hide();
                           $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");
                           $jq('.dealStaff-my-dialog .ui-button-text:contains(Cancel)').html('Close');                         
                           $jq(":button:contains('Close')").focus();
                         dlg.find("#staff-searcher").attr('readonly', true);
                         dlg.find("#staff-searcher").focus(function(){
                           dlg.find("#staff-searcher").blur();                     
                         });                           
                        }
                        else {
                           $jq( "#staff-searcher" ).show();
                           $jq('.dealStaff-my-dialog .ui-button-text:contains(Update)').show();
                           $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled"); 
                           $jq('.dealStaff-my-dialog .ui-button-text:contains(Close)').html('Cancel');                             
                           dlg.find("#staff-searcher").focus();
                          dlg.find("#staff-searcher").attr('readonly', false);
                          dlg.find("#staff-searcher").unbind("focus");                          
                          $jq('#dealteam').sortable( );                            
                        }
                        
                        $jq( "#staff-searcher" ).autocomplete({
                            source: user_list,
                            minLength: 2,
                            select: function( event, ui ) {
                                if ( ui.item ) {
                                    var entry = $jq("#dealteam li[data-contact-id='" + ui.item.contact_id + "']");
                                    if ( entry.length == 0 ) {
                                        var divelem = $jq('<div>');
                                        var is_stm = false;
                                        
                                        for(var index=0;index<local_stm_contact_status_list_for_deal.length;++index) {
                                          if(local_stm_contact_status_list_for_deal[index].contact_id == ui.item.contact_id){
                                            if(local_stm_contact_status_list_for_deal[index].isSeniorTeamMember == 'true'){
                                              is_stm = true;
                                              break;
                                            }
                                          }                                          
                                        }    
                                        
                                        if(is_stm == true) {
                                         divelem.append("<a href='#' class='change-role-status'><span id=\"tm-status-id\" class='custom-icon-info-square icon-square-filled on-stm'></span></a>");
                                        }                                       
                                        else {
                                         divelem.append("<a href='#' class='change-role-status'><span id=\"tm-status-id\" class='custom-icon-info-square icon-square on-tm'></span></a>");
                                        }                                       
                                        divelem.append("<a href='#' class='delete-user'><span class='ui-icon ui-icon-circle-close'></span></a>");
                                        divelem.append(ui.item.label);
                                        var listelem = $jq('<li>');
                                        listelem.attr('data-user-id', ui.item.id);
                                        listelem.attr('data-contact-id', ui.item.contact_id);
                                        listelem.append(divelem);                
                                        $jq('#dealteam').append(listelem);
                                    } else {
                                        entry.children('div').stop().fadeOut(300).fadeIn(300);
                                    }
                                } else {
                                    alert('Nothing Selected.');
                                }
                            }
                        });
                    
                        $jq("#dealteam").on('click', 'a.delete-user', function(event) {
                            event.preventDefault();
                            if(isDealReadOnly == false) {
                             $jq(this).parents('li').remove();
                            } 
                        });
                        $jq("#dealteam").on('click', 'a.change-role-status', function(event) {
                            event.preventDefault();
                            
                                var l_id = $jq(this).find("#tm-status-id").data("ui-tooltip-id");
                                var l_tooltip = $jq("#"+l_id);
                                l_tooltip.hide();
                                
                            if(isDealReadOnly == false) {         
                               if ($jq(this).find("#tm-status-id").hasClass("icon-square-filled"))
                               {
                                  $jq(this).find("#tm-status-id").removeClass("custom-icon-info-square icon-square-filled on-stm");
                                  $jq(this).find("#tm-status-id").addClass("custom-icon-info-square icon-square on-tm");
                               }
                               else
                               {
                                  var is_stm_allowed = false;
                                  var local_contact_id = $jq(this).parent().parent().attr('data-contact-id');
                                        for(var index=0;index<user_list.length;++index) {
                                          //alert(user_list[index].contact_id+'...'+local_contact_id);
                                          if(user_list[index].contact_id == local_contact_id){  
                                            //alert(local_contact_id+'...'+user_list[index].canBeASeniorTeamMember);                                          
                                            if(user_list[index].canBeASeniorTeamMember == 'true'){
                                              is_stm_allowed = true;
                                              break;
                                            }
                                          }                                          
                                        }    
                                 if(is_stm_allowed == true) {                                   
                                  $jq(this).find("#tm-status-id").removeClass("custom-icon-info-square icon-square on-tm");
                                  $jq(this).find("#tm-status-id").addClass("custom-icon-info-square icon-square-filled on-stm");
                                 } else {
                                   $jq("#staffingdialog").dialog("close");
                                   openDialogForSTMStatus(deal_name);
                                 }
                               }                   
                               
                               if(l_tooltip.length) {
                                 if ($jq(this).find("#tm-status-id").hasClass("icon-square-filled")) {
                                   l_tooltip.find(".ui-tooltip-content").html(on_stm_text);
                                 } else {
                                   l_tooltip.find(".ui-tooltip-content").html(on_tm_text);
                                }                            
                                 l_tooltip.show();
                               }   
                          
                            } 
                        });        
                      
        $jq("#dealteam").tooltip({
            track : true,
            items: '.on-stm, .on-tm',
            content: function() {
                var elem = $jq(this);                               
                if (elem.is('.on-stm')) {
                    return on_stm_text;
                } else if (elem.is('.on-tm')) {
                    return on_tm_text;
                } 
            }
        });                        
                    } else {
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }
                    }
                    
                },
                {escape:false}
            );                   
                                   
                    } else {
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event2.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event2.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }
                    }
                },
                {escape:false}
            );
            return false;

        }

        function showKeyDatesDialog (eventInput){
        
            var deal_id = $jq(this).attr('data-deal-id');
            eventInput.preventDefault();
                

        var isDealReadOnly;
        if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
          isDealReadOnly = false;
        }
            
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
                
            var dlg = $jq("#edit-key-Dates-Dialog");
            dlg.find("#params").attr('data-deal-id', deal_id);
            
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            

            dlg.dialog("open");            
            dlg.dialog('option', 'position', 'center');

            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'keyDates-my-dialog bs');
             dlg.dialog("option" , "title" , "Viewing Key Dates/Next Steps");
            }
            else
            {              
              dlg.dialog("option" , "title" , "Edit Key Dates/Next Steps");
            }
            
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDealKeyDatesNextSteps}',
                deal_id,
                function(result, event) {
                    if ( event.status ) {
   

                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();

                        var keyDates = result;
                        //alert(blankIfNullOrMissing(keyDates.DealName)+':'+blankIfNullOrMissing(keyDates.keyDates));                        
                        var params = dlg.find("#params");
                        if ( params.attr('data-deal-id') != keyDates.DealId ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }           
                        dlg.find("#dealname").html(blankIfNullOrMissing(keyDates.DealName));
                        
                        dlg.find("#keyDates").val(blankIfNullOrMissing(keyDates.keyDates));
                        if(isDealReadOnly == true) {
                         $jq('.keyDates-my-dialog .ui-button-text:contains(Update)').hide();
                         $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");
                         $jq('.keyDates-my-dialog .ui-button-text:contains(Cancel)').html('Close');                          
                         $jq(":button:contains('Close')").focus();
             dlg.find("#keyDates").attr('readonly', true);
             dlg.find("#keyDates").focus(function(){
                           dlg.find("#keyDates").blur(); 
                         });                         
                        }
                        else {
                        $jq('.keyDates-my-dialog .ui-button-text:contains(Update)').show();
                        $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled"); 
                        $jq('.keyDates-my-dialog .ui-button-text:contains(Close)').html('Cancel');                  
                         dlg.find("#keyDates").focus();
              dlg.find("#keyDates").attr('readonly', false);
              dlg.find("#keyDates").unbind("focus");                         
                        }

                    } else {
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }
                    }
                    
                    },
                    {escape:false}
                );
                
                return false;                   
        }

        function showDealStageDialog  (eventInput){
            //alert("showDealStageDialog");

            var deal_id = $jq(this).attr('data-deal-id');
            eventInput.preventDefault();
            var isDealReadOnly;
            if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
            isDealReadOnly = true;
            }
            else {
            isDealReadOnly = false;
            }   
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
        
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
                
            var dlg = $jq("#edit-deal-stage-dialog");
            dlg.find("#params").attr('data-deal-id', deal_id);            
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();            
            dlg.dialog("open");
            dlg.dialog('option', 'position', 'center');
            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'dealStage-my-dialog bs');
             dlg.dialog("option" , "title" , "Viewing Deal Stage for Deal - "+deal_name);
            }
            else{                          
              dlg.dialog("option" , "title" , "Edit Deal Stage for Deal - "+deal_name);  
            }            
            var deal_stage_stored;       
            
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDealStageForADeal}',
                deal_id,
                function(result, event) {
                    if ( event.status ) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        var deal_item = result;
                        deal_stage_stored = result.Stage__c;                    
                        var params = dlg.find("#params");
                        if ( params.attr('data-deal-id') != deal_item.Id ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }                       
                        var edit_dealStage_template = Handlebars.compile($jq("#edit-deal-stage-template").html());

            if(isDealReadOnly == true) {
                        var temp_stage_list = new Array();
                        temp_stage_list.push(deal_item.Stage__c);
                        dlg.find('#edit-deal-stage-dialog-content').html(edit_dealStage_template(
                                 {deal : deal_item, stageList : temp_stage_list}));         
             $jq('.dealStage-my-dialog .ui-button-text:contains(Update)').hide();
             $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled"); 
             $jq('.dealStage-my-dialog .ui-button-text:contains(Cancel)').html('Close');    
             $jq(":button:contains('Close')").focus();
             dlg.find("#dealStage").attr('readonly', true);
             dlg.find("#dealStage").focus(function(){
                           dlg.find("#dealStage").blur(); 
                         });                                               
            }
            else{                   
                        dlg.find('#edit-deal-stage-dialog-content').html(edit_dealStage_template(
                                 {deal : deal_item, stageList : deal_stage_list})); 
              $jq('.dealStage-my-dialog .ui-button-text:contains(Update)').show();          
              $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled");
              $jq('.dealStage-my-dialog .ui-button-text:contains(Close)').html('Cancel');             
              dlg.find("#dealStage").attr('readonly', false);
              dlg.find("#dealStage").unbind("focus");        

              //if (deal_stage_stored=='Committed-Deal Closed'){
              //          $jq( "#display-deal-stage-message" ).show().html( deal_closed_msg );
              //          $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled"); 
              //}else{
                        $jq( "#display-deal-stage-message" ).hide();
                        $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled");
              //}
              dlg.find("#dealStage").change(function(){
                var stg = dlg.find("#dealStage").val();
                var local_d_s_i = deal_stage_name_to_id_list[stg];
                if(local_d_s_i > 1){
                    $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");
                } 
                                      
             Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.isUpdateDealStageForADealAllowed}',
                deal_id,
                stg,
                function(result, event) {            
                  if ( (event.status) && result ) {                  
                   if(result == 'Not_Allowed_No_Senior_TM'){
                     dlg.dialog("close");
                     $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");                   
                     var dlg_2 = $jq("#alert-dialog-for-senior-tm");
                     dlg_2.find("#params").attr('data-deal-id', deal_id);
                     dlg_2.find("#params").attr('data-deal-stage-stored', deal_stage_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', stg);
                     //if (stg=='Committed-Deal Closed'){
                     //   dlg_2.find("#dialog-senior-tm-content").html('Deals at this stage &#151; '+stg+' &#151; require a Senior Deal Team Member.' + "<br>"+ deal_closed_msg);
                     //   dlg_2.dialog("option" , "title" , "Alert for Deal Closing Report - "+deal_name);
                     //}else{           
                        dlg_2.find("#dialog-senior-tm-content").html('Deals at this stage &#151; '+stg+' &#151; require a Senior Deal Team Member.');
                        dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     //}
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-senior-tm bs');
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();
                   }
                   else if(result == 'Not_Allowed_Stage_Threshold_X'){
                     dlg.dialog("close");
                     $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");             
                     //if (stg=="Committed-Deal Closed"){
                     //       openGeneralDialog(deal_closed_msg, "Deal Closing Report");     
                     //       dlg.find('.content-panel').show();
                     //       dlg.find('.wait-panel').hide();
                     //       return false;                           
                     //}                            
                     var dlg_2 = $jq("#alert-dialog-for-stage-crossing-thresh-x");
                     dlg_2.find("#params").attr('data-deal-id', deal_id);
                     dlg_2.find("#params").attr('data-deal-stage-stored', deal_stage_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', stg);
                     dlg_2.find("#dialog-for-stage-content").html(ear_dlg_text);
                               
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'stage-crossing-thresh-x bs');
                     dlg_2.dialog("option" , "title" , "EAR Report Alert - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();                     
                   }
                   else {                   
                     $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled");
                     //alert("DEBUG CURRENT Stage-->" + deal_stage_stored +"\n FUTURE Stage-->" + stg + "\nRESULTS-->" + result);
                     if (stg=="Committed-Deal Closed" && result=="Allowed" ){
                            openGeneralDialog(deal_closed_msg, "Deal Closing Report");     
                            dlg.find('.content-panel').show();
                            dlg.find('.wait-panel').hide();
                            //return false;                           
                     }       
                   }                   
                  }else{                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
             );

                 
              });        

            }                                        
                                 
                    } else {
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }
                    }
                    
                },
                {escape:false}
            );
            
            return false;
        }        
        
        function showEditCommentaryDialog(eventInput){          
            var deal_id = $jq(this).attr('data-deal-id');
            eventInput.preventDefault();
            
            var isDealReadOnly;
            if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
              isDealReadOnly = true;
            }
            else {
              isDealReadOnly = false;
            }               
                    
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
                
            var commentary_type = eventInput.data;
            var dlg = $jq("#editcommentarydialog");
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-deal-readonly', isDealReadOnly);
            
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            
            dlg.dialog("open");            
            dlg.dialog('option', 'position', 'center');
            
            var cType = '';
            if(eventInput.data=='comment'){
              cType = "EMG Comment";
            } else{
              cType = "EMG Agenda Paragraph";
            }   
            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'commentry-my-dialog bs');
             dlg.dialog("option" , "title" , "Viewing " + cType); 
            }
            else {              
              dlg.dialog("option" , "title" , "Edit " + cType);
            }                       
            
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDealCommentary}',
                deal_id,
                function(result, event) {
                    if ( event.status ) {

                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();

                        var commentary = result;
                        var comment = commentary_type == 'paragraph' ? commentary.paragraph : commentary.comment;
                        
                        var params = dlg.find("#params");
                        if ( params.attr('data-deal-id') != comment.DealId ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }
                        
                        params.attr('data-comment-id', blankIfNullOrMissing(comment.Id));
                        params.attr('data-comment-type', commentary_type);
            
                        dlg.find("#dealname").html(blankIfNullOrMissing(comment.DealName));
                        
                        dlg.find("#comment").html(blankIfNullOrMissing(comment.Comment));
                        
                        if(eventInput.data == 'comment') {
                        	dlg.find("#wordcount").show();                        	
                        }
                        else
                        {
                        	dlg.find("#wordcount").hide();   
                        }
                        
                        if(comment.Comment != null){
                        	var charLength = $jq("#comment").text().length;// ed.getBody().innerText.length
          				 
          					if ( charLength > 1500  && eventInput.data == 'comment'){					
					          dlg.find("#current-char-count").html("<font  color='red'>" + charLength + "</font>" );					          
					        } 
					        else
					        {
					        	dlg.find("#current-char-count").html(charLength);	
					        }                        
                        } 
                        else
                        	dlg.find("#current-char-count").html(0);
                        	
                        dlg.find("#total-char-count").html(1500);
                        

                        if(isDealReadOnly == true) {           
           
             $jq('.commentry-my-dialog .ui-button-text:contains(Update)').hide();
             $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled"); 
             $jq('.commentry-my-dialog .ui-button-text:contains(Cancel)').html('Close');
             $jq(":button:contains('Close')").focus();           
           //  tinymce.activeEditor.getBody().setAttribute('contenteditable', false);                                                  
                        }
                        else {                      
                        $jq('.commentry-my-dialog .ui-button-text:contains(Update)').show();    
                        $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled"); 
                        $jq('.commentry-my-dialog .ui-button-text:contains(Close)').html('Cancel');                        
             // tinymce.activeEditor.getBody().setAttribute('contenteditable', true); 
                          $jq(":button:contains('Update')").focus();                             
                        }
                        
                        if ( comment.UpdatedOn ) {
                            dlg.find(".comment-record").css('display','inline');
                            dlg.find("#comment-user").text(blankIfNullOrMissing(comment.UpdatedBy));
                            dlg.find("#comment-date").text(blankIfNullOrMissing(comment.UpdatedOn));
                        } else {
                            dlg.find(".comment-record").css('display','none');
                        }
                        
                        if(USER_CONTACT_INFO == null) {
                            dlg.find("#user-onbehalf-sect").css('display', 'none');
                            dlg.find("#user-onbehalf").val('');                     
                        }
                        else if ( (USER_CONTACT_INFO.deal_professional) ||(isDealReadOnly == true) ) {
                            dlg.find("#user-onbehalf-sect").css('display', 'none');
                            dlg.find("#user-onbehalf").val('');
                        } else {
                            dlg.find("#user-onbehalf-sect").css('display', 'inline');
                            dlg.find("#user-onbehalf").val(blankIfNullOrMissing(comment.UpdatedOnBehalfOf));
                        }
                    } else {
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }
                    }
                
                },
                {escape:false}
            );
            
            return false;                   
        }
    
        function showEditDealRequiredRichTextFieldsDialogFromStage(deal_id,deal_stage_stored,deal_stage_from_user){  
           //alert('showEditDealRequiredRichTextFieldsDialogFromStage'+deal_id+':'+deal_stage_stored+deal_stage_from_user);
           showEditDealRequiredRichTextFieldsDialogCommon(deal_id,true,deal_stage_stored,deal_stage_from_user);
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();           
    }
    
    function showEditDealRequiredRichTextFieldsDialogEventEIR(eventInput){
          var deal_id = $jq(this).attr('data-deal-id');
          eventInput.preventDefault();
          showEditDealRequiredRichTextFieldsDialogCommonEIR(deal_id,false,'','');
    }
    function showEditDealRequiredRichTextFieldsDialogEvent(eventInput){
          var deal_id = $jq(this).attr('data-deal-id');
          eventInput.preventDefault();
          showEditDealRequiredRichTextFieldsDialogCommon(deal_id,false,'','');
    }
    
     function showEditDealRequiredRichTextFieldsDialogCommonEIR(deal_id,come_thr_deal_stage,
            p_deal_stage_stored,p_deal_stage_from_user){
            //alert('DEBUGEIR showEditDealRequiredRichTextFieldsDialogCommonEIR');
            var is_update_disabled=false;
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
                     
        var isDealReadOnly;
        if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
          isDealReadOnly = false;
        }        
           
        var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
                
            var dlg = $jq("#edit-deal-required-richText-fields-Dialog-EIR");    
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-deal-readonly', isDealReadOnly);
            dlg.find("#params").attr('data-deal-come-thr-deal-stage', come_thr_deal_stage);
            dlg.find("#params").attr('data-deal-stage-stored', p_deal_stage_stored);
            dlg.find("#params").attr('data-deal-stage-from-user', p_deal_stage_from_user);


            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            dlg.dialog("open");            
            dlg.dialog('option', 'position', 'center');

            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'deal-required-richText-fields-my-dialog bs');
             dlg.dialog("option" , "title" , "Early Action Report / EIR for "+deal_name);
 
            }
            else
            {              
              dlg.dialog("option" , "title" , "Early Action Report / EIR for "+deal_name);
            }                       
            
            var deal_fields= {
                dealId:deal_id,
                dealStage:'',
              
                //fitWithGrp:'',
                whyInterestingEIR:'',
              
                tenureExpectations:'',
                dealName:'',
                dealSector:'',
                dealTeam:'',
               
                dealDesc:'',
                dealKeyNextSteps:'',

                EIR_Description:'',
                CompCurrencyCode:'',
                expectedAnnualBudget:'',
                expectedTiming:'',
                expectedWPCommitment:''
            };
           //kck4

           
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDealRequiredRichTextFieldsEIR}',
                deal_fields,
                function(result, event) {
                    if ( (result != null) && (event.status) ) {

                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();

                        deal_fields = result;
                        
                        var params = dlg.find("#params");
                        if((p_deal_stage_stored=='') && (p_deal_stage_from_user=='')) {
                        dlg.find("#params").attr('data-deal-stage-stored', deal_fields.dealStage);
                        dlg.find("#params").attr('data-deal-stage-from-user', deal_fields.dealStage);
                        }                       

                        if ( params.attr('data-deal-id') != deal_fields.dealId ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }
                        
           
                        dlg.find("#earDescription-EIR").val(deal_fields.EIR_Description);
                        
                       // dlg.find("#areaOfConcern-EIR").html(blankIfNullOrMissing(deal_fields.areaOfConcern));
                        dlg.find("#fitWithGrp-EIR").html(blankIfNullOrMissing(deal_fields.fitWithGrp));
                        dlg.find("#whyInteresting-EIR").html(blankIfNullOrMissing(deal_fields.whyInterestingEIR));
                      //  dlg.find("#humanCapitial-EIR").html(blankIfNullOrMissing(deal_fields.humanCapitial));
                        
                        dlg.find("#tenureExpectations-EIR").html(blankIfNullOrMissing(deal_fields.tenureExpectations));
                        dlg.find("#expectedAnnualBudget").html(blankIfNullOrMissing(deal_fields.expectedAnnualBudget));
                        dlg.find("#expectedTiming").html(blankIfNullOrMissing(deal_fields.expectedTiming));
                        dlg.find("#expectedWPCommitment").html(blankIfNullOrMissing(deal_fields.expectedWPCommitment));
                        
                        dlg.find("#Deal_Owner_Source").html(blankIfNullOrMissing(deal_fields.Deal_Owner_Source));
                        //console.log("1",deal_fields);
                        var ear_reportView_template = Handlebars.compile($jq("#ear-report-view-template-EIR").html()); 
                        
                        dlg.find("#earReportViewContent-EIR").html(ear_reportView_template(
                                 {deal : deal_fields}));

                        populateEIRDealSectorFieldList(dlg.find("#earReportViewContent-EIR"),deal_sector_field_list);
                        //alert("DEBUG populateEIRDealSectorFieldList" + deal_fields.dealSector);
                        if((deal_fields.dealSector!=null)&&(deal_fields.dealSector!='')){
                         dlg.find("#earReportViewContent-EIR").find("#earReportSectorSel").multiselect('select',
                            deal_fields.dealSector.toString().split(';'));                        
                        }
                       
                        if(isDealReadOnly == true) {           
           
             $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Update)').hide();
             $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");

             $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Send Me Report)').hide();
             $jq(":button:contains('Send Me Report')").prop("disabled", true).addClass("ui-state-disabled"); 
             
             $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Cancel)').html('Close');
             $jq(":button:contains('Close')").focus();           
            // tinymce.activeEditor.getBody().setAttribute('contenteditable', false);   
             dlg.find("#earDescription-EIR").attr('readonly', true);
             dlg.find("#earDescription-EIR").focus(function(){
             dlg.find("#earDescription-EIR").blur();            
             });
                        }
                        else {                      
                        $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Update)').show();    
                        $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled"); 

                        $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Send Me Report)').show();    
                        $jq(":button:contains('Send Me Report')").prop("disabled", false).removeClass("ui-state-disabled"); 
                        
                        $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Close)').html('Cancel');                        
            //  tinymce.activeEditor.getBody().setAttribute('contenteditable', true);                        
                         dlg.find("#earDescription-EIR").attr('readonly', false);
                         dlg.find("#earDescription-EIR").unbind("focus");
                          $jq(":button:contains('Update')").focus();                             
                        }

                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('js getDealRequiredRichTextFieldsEIR: Failed:'+event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                
                },
                {escape:false}
            );
       
            return false;                   
        }
    
    
    
        function showEditDealRequiredRichTextFieldsDialogCommon(deal_id,come_thr_deal_stage,
                p_deal_stage_stored,p_deal_stage_from_user){
                //alert('showEditDealRequiredRichTextFieldsDialogCommon opened');
            var is_update_disabled=false;
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            
             
        var isDealReadOnly;
        if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
          isDealReadOnly = true;
        }
        else {
          isDealReadOnly = false;
        }               

            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible"))
                btn.click();
                
            var dlg = $jq("#edit-deal-required-richText-fields-Dialog"); 
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-deal-readonly', isDealReadOnly);
            dlg.find("#params").attr('data-deal-come-thr-deal-stage', come_thr_deal_stage);
            dlg.find("#params").attr('data-deal-stage-stored', p_deal_stage_stored);
            dlg.find("#params").attr('data-deal-stage-from-user', p_deal_stage_from_user);
            
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();
            
            dlg.dialog("open");            
            dlg.dialog('option', 'position', 'center');

            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'deal-required-richText-fields-my-dialog bs');
             dlg.dialog("option" , "title" , "EAR for "+deal_name);
 
            }
            else
            {              
              dlg.dialog("option" , "title" , "EAR for "+deal_name);
            }                       
    
            var deal_fields= {
                dealId:deal_id,
                dealStage:'',
                areaOfConcern:'',
                fitWithGrp:'',
                whyInteresting:'',
                humanCapitial:'',
                capitalMarketConsideration:'',
                dealName:'',
                dealSector:'',
                dealTeam:'',
                compDesc:'',
                compRevenue_MM:'',
                compEBITDA_MM:'',
                dealDesc:'',
                dealKeyNextSteps:'',
                WP_Investment_MM:'',
                WP_Ownership_Fully_Diluted:'',
                Transaction_Value_MM:'',
                Deal_Owner_Source:'',
                EAR_Description:'',
                CompCurrencyCode:'',
                earMetrics:''
            }; //kck5
            deal_fields.earMetrics = new Array();
            deal_fields.earMetrics.push({deal_id:'',scHead_id:'',lineItem_id:'',ear_metric_name:'',ear_metric_per_end:'',ear_metric_value:''});
            
            
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDealRequiredRichTextFields}',
                deal_fields,
                function(result, event) {
                    if ( (result != null) && (event.status) ) {

                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();

                        deal_fields = result;
                        
                        var params = dlg.find("#params");
                        if((p_deal_stage_stored=='') && (p_deal_stage_from_user=='')) {
                        dlg.find("#params").attr('data-deal-stage-stored', deal_fields.dealStage);
                        dlg.find("#params").attr('data-deal-stage-from-user', deal_fields.dealStage);
                        }                       

                        if ( params.attr('data-deal-id') != deal_fields.dealId ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }
                        
           
                        dlg.find("#earDescription").val(deal_fields.EAR_Description);
                        
                        dlg.find("#areaOfConcern").html(blankIfNullOrMissing(deal_fields.areaOfConcern));
                        dlg.find("#fitWithGrp").html(blankIfNullOrMissing(deal_fields.fitWithGrp));
                        dlg.find("#whyInteresting").html(blankIfNullOrMissing(deal_fields.whyInteresting));
                        dlg.find("#humanCapitial").html(blankIfNullOrMissing(deal_fields.humanCapitial));
                        dlg.find("#capitalMarketConsideration").html(blankIfNullOrMissing(deal_fields.capitalMarketConsideration));
                        dlg.find("#Deal_Owner_Source").html(blankIfNullOrMissing(deal_fields.Deal_Owner_Source));
                        //console.log("1",deal_fields);
                        var ear_reportView_template = Handlebars.compile($jq("#ear-report-view-template").html());
                        dlg.find("#earReportViewContent").html(ear_reportView_template(
                                 {deal : deal_fields}));

                        $jq.map(deal_fields.earMetrics, function( e, i ) {
                            if(isDealReadOnly == true) {
                             e.isDealUpdatable = false; }
                            else {
                             e.isDealUpdatable = true;}
                        });   
                        
                        var ear_new_metrics_template = Handlebars.compile($jq("#earNewMetricTablecontent-template").html());
                        $jq("TABLE#EAR_NewMetricTable > tbody:last").append(ear_new_metrics_template({earMetrics : deal_fields.earMetrics}));                       
                              

                        populateEarDealSectorFieldList(dlg.find("#earReportViewContent"),deal_sector_field_list);
                        if((deal_fields.dealSector!=null)&&(deal_fields.dealSector!='')){
                          dlg.find("#earReportViewContent").find("#earReportSectorSel").multiselect('select',
                            deal_fields.dealSector.toString().split(';'));                        
                        }                        
                       
                        populateEarDealOwnerSourceFieldList(dlg.find("#earReportViewContent"),deal_owner_source_field_list);
              
                        if((deal_fields.Deal_Owner_Source !=null) && (deal_fields.Deal_Owner_Source !='')) {
                         dlg.find("#earReportViewContent").find("#earReportDealOwnerSel").multiselect('select', deal_fields.Deal_Owner_Source);
                        }
                        
                        dlg.find("#earReportViewContent").find("#earReportTrans").autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});
                        dlg.find("#earReportViewContent").find("#earReportWPInv").autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});
                        dlg.find("#earReportViewContent").find("#earReportWPDiluted").autoNumeric('init',{mDec:2, vMin:-9999999999999999.99, vMax:9999999999999999.99});
                        
                        if(isDealReadOnly == true) {           
           
             $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Update)').hide();
             $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");

             $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Send Me Report)').hide();
             $jq(":button:contains('Send Me Report')").prop("disabled", true).addClass("ui-state-disabled"); 
             
             $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Cancel)').html('Close');
             $jq(":button:contains('Close')").focus();           
            // tinymce.activeEditor.getBody().setAttribute('contenteditable', false);   
             dlg.find("#earDescription").attr('readonly', true);
             dlg.find("#earDescription").focus(function(){
             dlg.find("#earDescription").blur();            
             });
                        }
                        else {                      
                        $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Update)').show();    
                        $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled"); 

                        $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Send Me Report)').show();    
                        $jq(":button:contains('Send Me Report')").prop("disabled", false).removeClass("ui-state-disabled"); 
                        
                        $jq('.deal-required-richText-fields-my-dialog .ui-button-text:contains(Close)').html('Cancel');                        
            //  tinymce.activeEditor.getBody().setAttribute('contenteditable', true);                        
                         dlg.find("#earDescription").attr('readonly', false);
                         dlg.find("#earDescription").unbind("focus");
                          $jq(":button:contains('Update')").focus();                             
                        }

                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                            if (event.message.indexOf("insufficient access") > -1)
                                alert("no access");
                            else
                         		alert('getDealRequiredRichTextFields: Failed:'+event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                
                },
                {escape:false}
            );
            
            return false;                   
        }

    function populateEarDealOwnerSourceFieldList(dlg,comp_type_list) {
       dlg.find("#earReportDealOwnerSel").empty();
      
       if(comp_type_list.length > 0) {
       for(var grp_index=0;grp_index <comp_type_list.length;grp_index++)
       {
    
         dlg.find("#earReportDealOwnerSel").append('<option value="' + 
           comp_type_list[grp_index] + '">' + comp_type_list[grp_index] + '</option>');
       }          
      }
        
      
                    dlg.find("#earReportDealOwnerSel").multiselect({
                        maxHeight: 200,
                        buttonWidth: '275px',
                        buttonClass: 'btn btn-default customBtnOverflow',
                        nonSelectedText: 'Select ...'             
                    });


       $jq('option', dlg.find("#earReportDealOwnerSel")).each(function(element) {
          dlg.find("#earReportDealOwnerSel").multiselect('deselect', $jq(this).val());
       });

    }
    
     function populateEarDealSectorFieldList(dlg,comp_type_list) {
       dlg.find("#earReportSectorSel").empty();
       if(comp_type_list.length > 0) {
        for(var grp_index=0;grp_index <comp_type_list.length;grp_index++){
         dlg.find("#earReportSectorSel").append('<option value="' + 
           comp_type_list[grp_index] + '">' + comp_type_list[grp_index] + '</option>');
        }          
      }
      dlg.find("#earReportSectorSel").multiselect({
         maxHeight: 200,
         includeSelectAllOption: false,
         buttonWidth: '255px',
         buttonClass: 'btn btn-default customBtnOverflow customBtnOverflowForSector',
         nonSelectedText: 'Select ...',
         numberDisplayed: 5                      
      });  
    }
     function populateEIRDealSectorFieldList(dlg,comp_type_list) {
               dlg.find("#earReportSectorSel").empty();           
               if(comp_type_list.length > 0) {
                   for(var grp_index=0;grp_index <comp_type_list.length;grp_index++){           
                     dlg.find("#earReportSectorSel").append('<option value="' + 
                       comp_type_list[grp_index] + '">' + comp_type_list[grp_index] + '</option>');
                   }          
              }
              dlg.find("#earReportSectorSel").multiselect({
                   maxHeight: 200,
                   includeSelectAllOption: false,
                   buttonWidth: '255px',
                   buttonClass: 'btn btn-default customBtnOverflow customBtnOverflowForSectorEIR',
                   nonSelectedText: 'Select ...',
                   numberDisplayed: 5                      
              });
    }       
    function populateDCRSectorFieldList(dlg, comp_type_list, fieldList) {
               dlg.find("#dcrReportSectorSel").empty();      
               
               if(comp_type_list.length > 0) {
                   for(var grp_index=0;grp_index <comp_type_list.length;grp_index++){           
                     dlg.find("#dcrReportSectorSel").append('<option value="' + 
                       comp_type_list[grp_index] + '">' + comp_type_list[grp_index] + '</option>');
                   }          
              }
              dlg.find("#dcrReportSectorSel").multiselect({
                   maxHeight: 200,
                   includeSelectAllOption: false,
                   buttonWidth: '255px',
                   buttonClass: 'btn btn-default customBtnOverflow customBtnOverflowForSectorEIR',
                   nonSelectedText: 'Select ...',
                   numberDisplayed: 5                      
              });
              dlg.find("#dcrWPInvestment").val( fieldList.wpInvestment );
              dlg.find("#dcrLineOfEquityAmount").val( fieldList.lineOfEquityAmount );
              dlg.find("#dcrOwnership").val( fieldList.wpOwnership );
              dlg.find("#dcrBoardSeats").val( fieldList.wpBoardSeats );
              dlg.find("#dcrBoardSeatsTotal").val( fieldList.wpBoardSeatsTotal );
              
              $jq("#edit-dcr-Deal-team-info").click(function(){ showEditDealTeamInfo(); });
              
              dlg.find("#dcrWPInvestment").autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});
              dlg.find("#dcrOwnership").autoNumeric('init',{mDec:2, vMin:-100.00, vMax:999999999.99});
              dlg.find("#dcrLineOfEquityAmount").autoNumeric('init',{mDec:2, vMin:-999999999.99, vMax:999999999.99});
              dlg.find("#dcrBoardSeats").autoNumeric('init',{aSep: '',aDec:',',eEmpty:'0', mDec:0, vMin:0, vMax:999});
              dlg.find("#dcrBoardSeatsTotal").autoNumeric('init',{aSep: '',aDec:',',eEmpty:'0', mDec:0, vMin:0, vMax:999});
    }     
        function showEditDealClosingReportDialogFromStage(deal_id,deal_stage_stored,deal_stage_from_user)
        { 
               //alert('showEditdealClosingReportDialogCommon'+deal_id+':'+deal_stage_stored+deal_stage_from_user);
               showEditDealClosingReportDialogCommon(deal_id,true,deal_stage_stored,deal_stage_from_user);
                var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
                if (btn.is(":visible"))
                    btn.click();          
        }
   
        function showEditDealClosingReportDialogEvent(eventInput){        
              var deal_id = $jq(this).attr('data-deal-id');
              eventInput.preventDefault();
              globalDCRState = 'Closing';
              
              $jq("#dcrReportSectorSelDiv").removeAttr("disabled");
              $jq("#dcrWPInvestment").removeAttr("disabled");
              $jq("#dcrLineOfEquityAmount").removeAttr("disabled"); 
              $jq("#dcrOwnership").removeAttr("disabled"); 
              $jq("#dcrBoardSeats").removeAttr("disabled"); 
              $jq("#dcrBoardSeatsTotal").removeAttr("disabled");     
             
              $jq("#liDCR-Other-Considerations").hide();
              $jq("#DCR-Other-Considerations").hide();
              $jq("#liDCR-Team-Recommendations").hide();
              $jq("#DCR-Team-Recommendations").hide();
              $jq("#deal-closing-report-fields-tabs-id").innerHeight(284);
              $jq("#dcrFinancialTablecontent").height(350);
              $jq("#dcrFinancialTablecontent").width(750);
              showEditDealClosingReportDialogCommon(deal_id,false,'','');
        }          
               
       function showEditDealClosingReportDialogCommon(deal_id,come_thr_deal_stage,
            p_deal_stage_stored,p_deal_stage_from_user){      
            $jq(this).css('cursor','pointer');     
            //alert('DEBUG:Scorecard 2');
            //alert("1. DEBUG = debug_id->" + deal_id + "\n2. come_thr_deal_stage->" + come_thr_deal_stage + "\n3. p_deal_stage_stored->" + p_deal_stage_stored + "\n4. p_deal_stage_from_user->" + p_deal_stage_from_user);
            var is_update_disabled=false;
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            globalDealName = deal_name;
            
            var isDealReadOnly;
            var deal_fields= {
                dealId:deal_id,
                dealStage:'',              
                //fitWithGrp:'',
                whyInterestingEIR:'',
              
                tenureExpectations:'',
                dealName:'',
                dealSector:'',
                dealTeam:'',
                wpInvestment:'',
                lineOfEquityAmount:'',
                wpOwnership:'',
                wpBoardSeats:'',
                wpBoardSeatsTotal:'',
                otherConsider:'',
                teamRecommend:'',
                dealDesc:'',
                dealKeyNextSteps:'',

                EIR_Description:'',
                CompCurrencyCode:'',
                expectedAnnualBudget:'',
                expectedTiming:'',
                expectedWPCommitment:''
            };
            
            if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
              isDealReadOnly = true;
            }
            else {
              isDealReadOnly = false;
            }              
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible")) btn.click();
               
            var dlg = $jq("#edit-deal-closing-report-fields-Dialog");
                     
            dlg.find("#params").attr('data-deal-id', deal_id);
            dlg.find("#params").attr('data-deal-readonly', isDealReadOnly);
            dlg.find("#params").attr('data-deal-come-thr-deal-stage', come_thr_deal_stage);
            dlg.find("#params").attr('data-deal-stage-stored', p_deal_stage_stored);
            dlg.find("#params").attr('data-deal-stage-from-user', p_deal_stage_from_user);        
            //alert('1. deal_id=' + deal_id + '\n2.come_thr_deal_stage='+ come_thr_deal_stage + '\n3. p_deal_stage_stored=' + p_deal_stage_stored);
              
            for (var i in dcrReportTypeStatusList){
               //alert("dcrReportTypeStatusList["+ i +"]->" + dcrReportTypeStatusList[i]);
               delete dcrReportTypeStatusList[i];
            }
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();           
            dlg.dialog("open");         
            dlg.dialog('option', 'position', 'center');
            dlg.dialog('option', 'height', 550);
            dlg.dialog('option', 'width', 1000);
                        
            if(globalDCRState == 'Closing'){
                $jq(".ui-dialog-buttonpane button:contains('Preview Scorecard')").button('option', 'label', 'Preview DCR');
            }
            
            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'deal-closing-report-fields-my-dialog bs'); 
             dlg.dialog("option" , "title" , "Deal Closing Report for "+ deal_name); 
            }
            else{             
              dlg.dialog("option" , "title" , "Deal Closing Report for "+deal_name);
            }
            var dcr_fields;
            //AR:Follow Up begins
            dlg.find('#dcrFinancialMetrixImport').show();
            //AR:Follow Up ends
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDCR_Report_General_Fields}',
                deal_id,
                function(result, event) {
                    if ( (result != null) && (event.status) ) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        dcr_fields = result;               
                        for(var index=0; index<dcr_fields.reportHeaderList.length;++index) {
                          dcrReportTypeStatusList[dcr_fields.reportHeaderList[index].report_label] =
                            dcr_fields.reportHeaderList[index].report_id;
                            //alert("dcr_fields.reportHeaderList["+index+"].report_label" + dcr_fields.reportHeaderList[index].report_label +
                            //"\ndcr_fields.reportHeaderList["+index+"].report_id" + dcr_fields.reportHeaderList[index].report_id);
                        }                                                                           
                        var params = dlg.find("#params");
                        //alert("DEBUG 2. " + params);
                        if((p_deal_stage_stored=='') && (p_deal_stage_from_user=='')) {
                            dlg.find("#params").attr('data-deal-stage-stored', dcr_fields.dealStage);
                            dlg.find("#params").attr('data-deal-stage-from-user', dcr_fields.dealStage);
                        }   
                        if ( params.attr('data-deal-id') != dcr_fields.deal_id ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }                               
                        var dcr_reportView_template = Handlebars.compile($jq("#dcr-report-view-template").html());
                        dlg.find("#dcrReportViewContent").html(dcr_reportView_template( {deal : dcr_fields} ));
                                 
                        dlg.find("#dcrReportViewContent").find("#dcrDatePicker").datepicker();      
                        populateDcrTypeOfReportList(dcr_fields.reportHeaderList,'');    
                        populateDCRSectorFieldList(dlg.find("#dcrReportViewContent"),deal_sector_field_list, dcr_fields);    
                        
                        if((dcr_fields.dealSector!=null)&&(dcr_fields.dealSector!='')){
                          dlg.find("#dcrReportViewContent").find("#dcrReportSectorSel").multiselect('select',
                            dcr_fields.dealSector.toString().split(';'));                        
                        }                        
                        if(isDealReadOnly == true) {                    
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Update)').hide();
             $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Send DCR Report)').hide();
             $jq(":button:contains('Send DCR Report')").prop("disabled", true).addClass("ui-state-disabled");            
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Cancel)').html('Close');
             $jq(":button:contains('Close')").focus();           
                        }
                        else {                     
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Update)').show();   
             $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled");
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Send DCR Report)').show();   
             $jq(":button:contains('Send DCR Report')").prop("disabled", false).removeClass("ui-state-disabled");
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Close)').html('Cancel');                       
             $jq(":button:contains('Update')").focus();                   
                        }
                    }else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                        if (event.message.indexOf("insufficient access") > -1)
                                alert("The Deal Closing Report is read-only.  You cannot save changes.");
                            else
                         		alert('getDealRequiredRichTextFields: Failed:'+event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
               
                },
                {escape:false}
            );
            return false;                  
        }

        function showEditDealInvestmentScorecardDialogEvent(eventInput){   
        
              var deal_id = $jq(this).attr('data-deal-id');
              globalDealId = deal_id;
              eventInput.preventDefault();
              globalDCRState = 'Follow Up';
              
              $jq("#liDCR-Other-Considerations").show();
              $jq("#DCR-Other-Considerations").show();
              $jq("#liDCR-Team-Recommendations").show();
              $jq("#DCR-Team-Recommendations").show();
              $jq("#wpDCR-Other-Considerations").hide();
              $jq("#wpDCR-Team-Recommendations").hide();

              $jq("#deal-closing-report-fields-tabs-id").height(352);
              $jq("#dcrFinancialTablecontent").height(450);
              $jq("#dcrFinancialTablecontent").width(950);
              
              doDcrAddFollowupHeaderAction(deal_id, 'followup');
              showEditDealInvestmentScorecardDialogCommon(deal_id,false,'','');
        }  
        
        function showEditDealInvestmentScorecardDialogCommon(deal_id,come_thr_deal_stage, p_deal_stage_stored,p_deal_stage_from_user){  
            $jq(this).css('cursor','pointer');     
            var is_update_disabled=false;
            var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
            globalDealName = deal_name;
            
            var isDealReadOnly;
            var deal_fields= {
                dealId:deal_id,
                dealStage:'',              
                whyInterestingEIR:'',
                tenureExpectations:'',
                dealName:'',
                dealSector:'',
                dealTeam:'',
                wpInvestment:'',
                lineOfEquityAmount:'',
                wpOwnership:'',
                wpBoardSeats:'',
                dealDesc:'',
                dealKeyNextSteps:'',
                EIR_Description:'',
                CompCurrencyCode:'',
                expectedAnnualBudget:'',
                expectedTiming:'',
                expectedWPCommitment:''
            };            
            if(deal_id_to_status_list[deal_id].is_deal_readonly == true) {
              isDealReadOnly = true;
            }
            else {
              isDealReadOnly = false;
            }              
            var btn = $jq("#action-button[data-deal-id='" + deal_id + "']");
            if (btn.is(":visible")) btn.click();             
            var dlg = $jq("#edit-deal-closing-report-fields-Dialog");
            //Now change the width of the followup dialog
                                             
            dlg.find("#params").attr('data-deal-id', deal_id);
            var paramattr = dlg.find("#params");
            dlg.find("#params").attr('data-deal-readonly', isDealReadOnly);
            dlg.find("#params").attr('data-deal-come-thr-deal-stage', come_thr_deal_stage);
            dlg.find("#params").attr('data-deal-stage-stored', p_deal_stage_stored);
            dlg.find("#params").attr('data-deal-stage-from-user', p_deal_stage_from_user);  
            for (var i in dcrReportTypeStatusList){
               delete dcrReportTypeStatusList[i];
            }
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show();           
            dlg.dialog("open");         
            dlg.dialog('option', 'position', 'center');
            dlg.dialog('option', 'width', 1200);
            dlg.dialog('option', 'height', 600);
            
            if(globalDCRState == 'Follow Up'){
                $jq(".ui-dialog-buttonpane button:contains('Preview DCR')").button('option', 'label', 'Preview Scorecard');
            }
            if(isDealReadOnly == true) {
             dlg.dialog('option', 'dialogClass', 'deal-closing-report-fields-my-dialog bs');
             dlg.dialog("option" , "title" , "One-Year Scorecard for "+ deal_name); 
            }
            else{          
              dlg.dialog("option" , "title" , "One-Year Scorecard for "+ deal_name);
            }
            dlg.find('#dcrFinancialMetrixImport').hide();
            
            var dcr_fields;
            Visualforce.remoting.Manager.invokeAction (
                '{!$RemoteAction.kjoDealReportController.getDCR_Report_General_Fields}',
                deal_id,
                function(result, event) {
                    //alert( "DEBUG2. result=" + result + "\n event.status=" + event.status);
                    
                    if ( (result != null) && (event.status) ) {
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        dcr_fields = result;    
                        //alert("DEBUG3. dcr_fields.deal_id" + dcr_fields.deal_id);  
                                 
                        for(var index=0; index<dcr_fields.reportHeaderList.length;++index) {
                          //alert("dcr_fields.reportHeaderList["+index+"].report_label->" + dcr_fields.reportHeaderList[index].report_label+ "<-rid->"+dcr_fields.reportHeaderList[index].report_id);
                          dcrReportTypeStatusList[dcr_fields.reportHeaderList[index].report_label] =
                            dcr_fields.reportHeaderList[index].report_id;
                        }                                                                           
                        var params = dlg.find("#params");
                        if((p_deal_stage_stored=='') && (p_deal_stage_from_user=='')) {
                            dlg.find("#params").attr('data-deal-stage-stored', dcr_fields.dealStage);
                            dlg.find("#params").attr('data-deal-stage-from-user', dcr_fields.dealStage);
                        }   
                        if (params.attr('data-deal-id') != dcr_fields.deal_id ) {
                            alert('Unexpected Deal Identifier');
                            return;
                        }                               
                        var dcr_investment_scorecard_template = Handlebars.compile($jq("#dcr-report-view-template").html());
                        dlg.find("#dcrReportViewContent").html(dcr_investment_scorecard_template( {deal : dcr_fields} ));  
                        //alert("globalDCRState-->" + globalDCRState + "<-globalFollowupLabel->" + globalFollowupLabel);          
                        if (globalDCRState == 'Follow Up'){
                            //alert('globalFollowupLabel' + globalFollowupLabel);
                            populateDcrTypeOfReportList(dcr_fields.reportHeaderList,globalFollowupLabel); 
                            populateSelectedFollowupDcrReportDetailFields();
                        }else{        
                            populateDcrTypeOfReportList(dcr_fields.reportHeaderList,'');   
                            populateSelectedDcrReportDetailFields(); 
                        }
                        populateDCRSectorFieldList(dlg.find("#dcrReportViewContent"),deal_sector_field_list, dcr_fields);   
                        if((dcr_fields.dealSector!=null)&&(dcr_fields.dealSector!='')){
                          dlg.find("#dcrReportViewContent").find("#dcrReportSectorSel").multiselect('select',
                            dcr_fields.dealSector.toString().split(';'));                        
                        }  
                        
                        if(isDealReadOnly == true) {                    
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Update)').hide();
             $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled");
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Send DCR Report)').hide();
             $jq(":button:contains('Send DCR Report')").prop("disabled", true).addClass("ui-state-disabled");            
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Cancel)').html('Close');
             $jq(":button:contains('Close')").focus();           
                        }
                        else {                     
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Update)').show();   
             $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled");
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Send DCR Report)').show();   
             $jq(":button:contains('Send DCR Report')").prop("disabled", false).removeClass("ui-state-disabled");
             $jq('.deal-closing-report-fields-my-dialog .ui-button-text:contains(Close)').html('Cancel');                       
             $jq(":button:contains('Update')").focus();   
                     
             //scorecard related General Tab
             $jq("#dcrReportSectorSelDiv").attr("disabled",true);
             $jq("#dcrWPInvestment").attr("disabled",true);  
             $jq("#dcrWPInvestmentTR").hide();
             $jq("#dcrLineOfEquityAmount").attr("disabled",true); 
             $jq("#dcrLineOfEquityAmountTR").hide();
             $jq("#dcrOwnership").attr("disabled",true); 
             $jq("#dcrOwnershipTR").hide();
             $jq("#dcrBoardSeats").attr("disabled",true); 
             $jq("#dcrBoardSeatsTR").hide();
             $jq("#dcrBoardSeatsTotal").attr("disabled",true);     
                        }

                    }else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('getDealRequiredRichTextFields: Failed:'+event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
               
                },
                {escape:false}
            );
            return false;         
        }       
                      
        function blankIfNullOrMissing( value ) {
            if ( value ) {
                return value;
            } else {
                return '';
            }
        }
       
        function updateCirToEMG(eventInput)
        { 
       
          var l_id = $jq(this).data("ui-tooltip-id");
          var l_tooltip = $jq("#"+l_id);
          var dlg = $jq(this);
          l_tooltip.hide();
        
          var deal_id = $jq(this).attr("value");
          var cir_to_emg;
          
         if($jq(this).hasClass("on-emg"))
         { 
            cir_to_emg='false';
         }
         else
         {
            cir_to_emg='true';
         }
          
          var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
          
          if(deal_id_to_status_list[deal_id].is_deal_readonly == true)
          {
            openDialog(deal_name);                    
            var l_id2 = dlg.data("ui-tooltip-id");
            var l_tooltip2 = $jq("#"+l_id2);
            l_tooltip2.hide();
          }
          else{  
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.updateDealForCirToEMG}',
                deal_id,
                cir_to_emg,
                function(result, event) {
                    if ( event.status ) {

         if(dlg.hasClass("on-emg"))
         { 
          dlg.removeClass("on-emg");
           dlg.removeClass("ui-icon-check");
           
           dlg.addClass("not-emg");
           dlg.addClass("ui-icon-radio-off");
         }
         else
         {
           dlg.removeClass("not-emg");
           dlg.removeClass("ui-icon-radio-off");
           
           dlg.addClass("on-emg");
           dlg.addClass("ui-icon-check");
         }
         
                          if(l_tooltip.length) {
                            if (cir_to_emg == 'true') {
                              l_tooltip.find(".ui-tooltip-content").html(emg_yes);
                            } else {
                              l_tooltip.find(".ui-tooltip-content").html(emg_no);
                            }                           
                            l_tooltip.show();
                          }                 
                          return true;
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating circulate to EMG\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );                  
                    
                    }

        
        }
        
        function updateIncToGrp(eventInput)
        {
          var l_id = $jq(this).data("ui-tooltip-id");
          var l_tooltip = $jq("#"+l_id);
          var dlg = $jq(this);
          l_tooltip.hide();
          
          var deal_id = $jq(this).attr("value");
          var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
          var inc_to_grp;

         if($jq(this).hasClass("on-group"))
         { 
            inc_to_grp='false';
         }
         else
         {
            inc_to_grp='true';
         }

         if(deal_id_to_status_list[deal_id].is_deal_readonly == true)
         {
           openDialog(deal_name);                    
           var l_id2 = dlg.data("ui-tooltip-id");
           var l_tooltip2 = $jq("#"+l_id2);
           l_tooltip2.hide();
         }
         else{   
                    
          /*          
          if($jq("TR[data-deal-id=" + deal_id + "] #include_to_group")[0].checked)
            inc_to_grp='true';
          else
            inc_to_grp='false';
          */
          
          //alert(deal_id+':'+deal_name+':'+inc_to_grp);      
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.updateDealForIncToGrp}',
                deal_id,
                inc_to_grp,
                function(result, event) {
                    if ( event.status ) {
         if(dlg.hasClass("on-group"))
         { 
           dlg.removeClass("on-group");
           dlg.removeClass("ui-icon-check");
           
           dlg.addClass("not-group");
           dlg.addClass("ui-icon-radio-off");

         }
         else
         {
           dlg.removeClass("not-group");
           dlg.removeClass("ui-icon-radio-off");
           
           dlg.addClass("on-group");
           dlg.addClass("ui-icon-check");

         }                          
                          if(l_tooltip.length) {
                            if (inc_to_grp == 'true') {
                              l_tooltip.find(".ui-tooltip-content").html(grp_yes);
                            } else {
                              l_tooltip.find(".ui-tooltip-content").html(grp_no);
                            }                           
                            l_tooltip.show();
                          }                 
                          return true;  
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating include to Group\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
                        
                    
                    }
       
        }
        
        function updateHighInGrp(eventInput)
        {
          var l_id = $jq(this).data("ui-tooltip-id");
          var l_tooltip = $jq("#"+l_id);
          var dlg = $jq(this);
          
          l_tooltip.hide();
          
          var deal_id = $jq(this).attr("value");
          var deal_name = $jq("TR[data-deal-id=" + deal_id + "] #dealname").text();
          var high_in_grp;

         if($jq(this).hasClass("hilite-group"))
         { 
            high_in_grp='false';
         }
         else
         {
            high_in_grp='true';
         }

         if(deal_id_to_status_list[deal_id].is_deal_readonly == true)
         {
           openDialog(deal_name);                    
           var l_id2 = dlg.data("ui-tooltip-id");
           var l_tooltip2 = $jq("#"+l_id2);
           l_tooltip2.hide();
         }
         else{   

          /*
          if($jq("TR[data-deal-id=" + deal_id + "] #highlight_in_group")[0].checked)
            high_in_grp='true';
          else
            high_in_grp='false';          
          */
          //alert(deal_id+':'+deal_name+':'+high_in_grp);     
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.updateDealForHighInGrp}',
                deal_id,
                high_in_grp,
                function(result, event) {
                    if ( event.status ) {

         if(dlg.hasClass("hilite-group"))
         { 
           dlg.removeClass("hilite-group");
           dlg.removeClass("ui-icon-check");
           
           dlg.addClass("not-hilite");
           dlg.addClass("ui-icon-radio-off");
         }
         else
         {
           dlg.removeClass("not-hilite");
           dlg.removeClass("ui-icon-radio-off");
           
           dlg.addClass("hilite-group");
           dlg.addClass("ui-icon-check");
         }
         
                          if(l_tooltip.length) {
                            if (high_in_grp == 'true') {
                              l_tooltip.find(".ui-tooltip-content").html(high_yes);
                            } else {
                              l_tooltip.find(".ui-tooltip-content").html(high_no);
                            }                           
                            l_tooltip.show();
                          }                 
                          return true;
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
                        
                    }
  }       

function openDialog(deal_name){ 
         
         $jq( "#dialog-alert" ).dialog({
            resizable: false,
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',
            //title: 'Error Message for Deal - '+deal_name,       
            title: 'Error',       
            buttons: {
               "OK": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });
         
}

        
function openDialogForSTMStatus(deal_name){ 
         //alert("openDialogForSTMStatus");
         $jq( "#dialog-stm-not-allowed" ).dialog({
            resizable: false,
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',
            title: 'Editing Not Allowed',//+deal_name,       
            //title: 'Error',       
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
                   $jq("#staffingdialog").dialog("open");
               }
            }
         });
         
}       
        var user_list = null;
        var group_list = null;
        
        kjoDealReportController.getProfessionalsList(
            '',
            function(data, event) {
                if ( user_list == null ) {
                    user_list = $jq.map(data, function(item) { 
                            return { label : item.label, value : item.label , id : item.user_id, contact_id : item.contact_id,canBeASeniorTeamMember:item.canBeASeniorTeamMember} 
                        }
                    );
                }
                $jq( "#curruser" ).autocomplete({
                    source: user_list,
                    minLength: 2,
                    select: function( event, ui ) {
                        event.preventDefault();
                        if ( ui.item ) {
                            updateDealList(ui.item.id);
                        } else {
                            alert('Nothing Selected.');
                        }
                    }
                });
             }
        );      
        $jq("#curruser").on("click", function(){$jq(this).select();});

 		kjoDealReportController.getGroupList(
         '',
            function(data, event) {
                if ( group_list == null ) {
                    group_list = $jq.map(data, function(item) { 
                            return { label : item, value : item } 
                        }
                    );
                }
                $jq( "#currgroup" ).autocomplete({
                    source: group_list,
                    minLength: 2,
                    select: function( event, ui ) {
                        event.preventDefault();
                        if ( ui.item ) {
                            // alert('the item is ' + JSON.stringify(ui));
                            updateDealList("{!$User.Id}", ui.item.value);
                        } else {
                            alert('Nothing Selected.');
                        }
                    }
                });
             }
        );   
 		 $jq("#currgroup").on("click", function(){$jq(this).select();});
        
        /* Live search - too chatty
        **
        $jq("#curruser").autocomplete({
            minLength : 2,
            source: function(request, response) {
                kjoDealReportController.getProfessionalsList(
                    request.term,
                    function(data, event) {
                        response($jq.map(data, function(item) { return { label : item.label, value : item.label, id : item.user_id, contact_id : item.contact_id} }));
                    }
                );                   
            },           
            select: function(event, ui) {
                updateDealList(ui.item.id);
            },
            create: function(event, ui) {
            }                
        });
        ** End of Live search 
        */    

               
        $jq(".richText-fields-Dialog-tabs-anchor").mouseenter(function() {
                //alert('enter');
                var elem = $jq(this);               
                elem.find("#richText-fields-Dialog-tabs-Img").removeClass("icon-grey-bulb");
                elem.find("#richText-fields-Dialog-tabs-Img").addClass("custom-mouse-info icon-orng-bulb ");       
        });
        
        $jq(".richText-fields-Dialog-tabs-anchor").mouseleave(function() {
                //alert('leave');
                var elem = $jq(this);               
                elem.find("#richText-fields-Dialog-tabs-Img").removeClass("icon-orng-bulb");
                elem.find("#richText-fields-Dialog-tabs-Img").addClass("icon-grey-bulb");       
        });

        $jq(".richText-fields-Dialog-tabs").tooltip({
            track : true,
            items: '.ear-report, .ear-desc, .cap-mark, .why-int, .fit-with, .area-concern, .wp-human, .eir-tenure-expect',
            tooltipClass:"custom-tooltip",
            content: function() {
                var elem = $jq(this);
                var isEIR=false;
                if (this.id.indexOf('EIR')!=-1) isEIR=true;  
                if (elem.is('.ear-report')) {
                    return isEIR ? 'Complete all fields in this section.':'Complete all fields in this section.<br> - Transaction '+
                    'Value generally meanssss Enterprise Value, unless '+
                    'minority equity deal like Pipe or Open Market Purchase.</br>'+
                    '- Investment Amount is estimate of total amount of equity available '+
                    'to purchase, without reduction for co-investment or other sponsors.'+
                    '<br> - Ownership Percentage is ownership percentage associated with identified '+
                     'investment amount.</br>'; 
                }
                else if (elem.is('.ear-desc')) {
                    return isEIR ? 'Comment on the engagement of the EIR.':'Comment on deal dynamics (competition), use of proceeds, key existing shareholders '+ 
                    'and management and any known financial metrics, or anything else worth highlighting.';
                }
                 else if (elem.is('.cap-mark')) {
                    return 'Include known features of capital structure to be put '+
                    'in place and describe status of assessment.';
                }
                else if (elem.is('.why-int')) {
                    return isEIR ? 'Explain why this opportunity is attractive to pursue.':'Explain why this is an attractive deal to pursue.';
                }
                else if (elem.is('.fit-with')) {
                    return 'Describe how this deal fits in with the WP investment strategy and your group.';
                }
                else if (elem.is('.eir-tenure-expect')) {
                    return 'Describe the expectations of the EIR during his/her tenure.';
                }
                else if (elem.is('.area-concern')) {
                    return 'Describe any red flags or potential risks.';
                }
                else if (elem.is('.wp-human')) {
                    return 'Describe the WP angle  for this deal.';
                }   
            }
        });     
        $jq(".deal-closing-fields-Dialog-tabs-anchor").mouseenter(function() {
                //alert('enter');
                var elem = $jq(this);              
                elem.find("#deal-closing-fields-Dialog-tabs-Img").removeClass("icon-grey-bulb");
                elem.find("#deal-closing-fields-Dialog-tabs-Img").addClass("custom-mouse-info icon-orng-bulb ");      
        });
       
        $jq(".deal-closing-fields-Dialog-tabs-anchor").mouseleave(function() {
                //alert('leave');
                var elem = $jq(this);              
                elem.find("#deal-closing-fields-Dialog-tabs-Img").removeClass("icon-orng-bulb");
                elem.find("#deal-closing-fields-Dialog-tabs-Img").addClass("icon-grey-bulb");      
        });
        
        $jq(".deal-closing-report-fields-tabs").tooltip({
            track : true,
            items: '.dcr-report-is, .dcr-report, .inv-thesis, .inv-risks, .key-creat, .key-goal, .mg-team, .wp-action, .dcr-fin-target, .dcr-sig-consider ,.dcr-team-recommend',
            tooltipClass:"custom-tooltip",
            content: function() {
                var helpText='';
                var elem = $jq(this);                           
                if (elem.is('.dcr-report-is')) {
                    return 
                    'Information in this section will appear at the top of the Investment Scorecard. '+
                    ' To alter these values, please edit the Deal using the My Deals '+
                    'page or the standard Deal page.';   
                }
                if (elem.is('.dcr-report')) {
                    if (globalDCRState=='Closing'){
                    helpText = 'The Deal Closing Report is intended to highlight key focus areas and action items for the first year of the investment.';  
                    helpText = helpText + 'On this tab, please make sure to enter:';
                    helpText = helpText + '<br><strong>WP Group / Sector:</strong> This data is pulled from the main deal page.';
                    helpText = helpText + '<br><strong>WP Deal Team:</strong> This data is pulled from the main deal page. To edit, return to the deal page or choose Deal Team from the Edit menu on the My Deals page.';
                    helpText = helpText + '<br><strong>Amount Invested:</strong> Enter fund investment in USD millions after all follow-on acquisitions.';
                    helpText = helpText + '<br><strong>Line of Equity:</strong> Include full amounts Warburg Pincus could invest, as referenced in Closing Documents.';
                    helpText = helpText + '<br><strong>Ownership %:</strong> Enter fully-diluted ownership after closing and all follow-on acquisitions.';
                    helpText = helpText + '<br><strong># WP Board Seats:</strong> Include the number of board seats Warburg Pincus has the right to nominate.';                
                    return helpText;     
                    }else{
                    helpText = 'The One-Year Scorecard should be prepared and circulated during the same month as the first anniversary of closing and prior to the group meeting at which the Scorecard will be reviewed.';
                    helpText = helpText + '<br><br>Data in the Deal Closing Report feeds into the One-Year Scorecard.  The One-Year Scorecard should generally be two pages.';
                    return helpText;
                    }                            
                }
                
                else if (elem.is('.inv-thesis')) {
                    if (globalDCRState == 'Closing'){
                        helpText = 'Summarize key theses and objectives associated with the new investment. These should be specific, not general, and targeted � short, clear, focused bullet points, as opposed to long sentences.';    
                        return helpText; 
                    }else{
                        helpText = 'Provide updates relative to the Deal Closing Report.  These should be specific and targeted � short, clear, focused bullet points, as opposed to long sentences.';    
                        return helpText;                     
                    }                   
                }
                 else if (elem.is('.inv-risks')) {
                    if (globalDCRState == 'Closing'){
                     helpText = 'Describe any red flags or potential risks. These should be specific, not general, and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                     return helpText; 
                    }else{
                     helpText = 'Provide updates relative to the Deal Closing Report.  These should be specific and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                     return helpText; 
                    }
                }
                else if (elem.is('.key-creat')) {
                    if (globalDCRState == 'Closing'){
                        helpText = 'List key valuation creation drivers.  These should be specific, not general, and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                        return helpText; 
                    }else{
                        helpText ='Provide updates relative to the Deal Closing Report.  These should be specific and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                        return helpText; 
                    }                   
                }
                else if (elem.is('.key-goal')) {
                    if (globalDCRState == 'Closing'){
                        helpText = 'Describe key goals and milestones for the company during the first year of the investment.  These should be specific, not general, and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                        return helpText; 
                    }else{
                        helpText = 'Provide updates relative to the Deal Closing Report. These should be specific and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                        return helpText; 
                    }
                }
                else if (elem.is('.mg-team')) {   
                    if (globalDCRState == 'Closing'){
                        helpText = 'Comment on the management team and Board additions and/or development goals.  These should be specific, not general, and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                    }else{
                        helpText = 'Provide updates relative to the Deal Closing Report. These should be specific and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                    }
                    return helpText;
                }
                else if (elem.is('.wp-action')) {
                    if (globalDCRState == 'Closing'){                
                        helpText = 'Enter key action items.  These should be specific, not general, and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                    }else{
                        helpText = 'Provide updates relative to the Deal Closing Report.  These should be specific and targeted � short, clear, focused bullet points, as opposed to long sentences.';
                    }
                    return helpText;
                }  
                else if (elem.is('.dcr-fin-target')) {
                    if (globalDCRState == 'Closing'){  
                        helpText = 'Financial Targets can be imported from the Company record (Revenue or EBITDA), or custom metrics can be added, if more relevant.  Time periods should be adjusted as appropriate.';
                    }else{
                        helpText = 'Provide updates relative to the Deal Closing Report.  Time periods and metrics for the One-Year Scorecard should match those in the closing report.';
                    }
                    return helpText;
                }  
                else if (elem.is('.dcr-sig-consider')) {
                    if (globalDCRState == 'Closing'){  
                        helpText ='Other Significant Considerations';
                    }else{
                        helpText='In addition to updates relative to the Deal Closing Report, enter Other Significant Considerations known, identified or of greater emphasis one year into the investment.';
                    }
                    return helpText;
                } 
                else if (elem.is('.dcr-team-recommend')) {
                    if (globalDCRState == 'Closing'){  
                        helpText ='WP Deal Team Recommendations';
                    }else{
                        helpText='The Deal Team is asked to make specific recommendations on the go-forward strategy for the deal. These recommendations can be directed at company operations and strategy as well as financing/balance sheet.  The Deal Team should also address, buy, sell, hold considerations in this section.';
                    }
                    return helpText;                
                } 
            }
        });        
       
        $jq(".dealslist").tooltip({
            track : true,
            items: 'A, SPAN.showcommentdetail, SPAN.showvaldetail, .on-emg, .not-emg, .on-group,.not-group,.hilite-group,.not-hilite',
            content: function() {
                var elem = $jq(this);
                var l = null;
                if ( elem.is('A[data-uuid]') ) {
                    var id = elem.attr('data-uuid');
                    var template = Handlebars.compile($jq("#tooltip-template").html());
                    return template({id : id});
                } else if (elem.is('.showvaldetail')) {
                    l = elem.parents('.dealdetail').find('.deal-valuation');
                    if ( l.length ) {
                        return elem.parents('.dealdetail').find('.deal-valuation').html();
                    } else {
                        return 'No valuation information available.';
                    }
                } else if (elem.is('.showcommentdetail')) {
                    l = elem.parents('.dealdetail').find('.deal-comments');
                    if ( l.length ) {
                        return elem.parents('.dealdetail').find('.deal-comments').html();
                    } else {
                        return 'No deal commentary available.';
                    }
                } else if (elem.is('.showdealdetail')) {
                    l = elem.parents('.dealdetail').find('.deal-details');
                    if ( l.length ) {
                        return elem.parents('.dealdetail').find('.deal-details').html();
                    } else {
                        return null;
                    }
                } else if (elem.is('.on-emg')) {
                    return emg_yes;
                } else if (elem.is('.not-emg')) {
                    return emg_no;
                } else if (elem.is('.on-group')) {
                    return grp_yes;
                } else if (elem.is('.not-group')) {
                    return grp_no;
                } else if (elem.is('.hilite-group')) {
                    return high_yes;
                } else if (elem.is('.not-hilite')) {
                    return high_no;
                }           
                else {
                    return elem.attr('title') ? elem.attr('title') : null;
                }
            }
        });

        $jq("#edit-financials-dialog").dialog({
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 'auto',
            buttons: {
                "Update": function() {
                    if(updateCompanyFinancial($jq(this)) == true) {
                     $jq(this).dialog("close");
                    }
                },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }              
        });
        
        $jq("#dcr-add-lineitem-dialog").dialog({
            autoOpen: false,
            modal: true,
            position: 'center',
            width: 650,
            open: function(event, ui) {    
            },
            create: function(event, ui) {
                if ( !tinyMCE.get('line-add-comment') ) {
                    $jq(this).find("#line-add-comment").tinymce({              
                        width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              
                        
                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_toolbar_align : "center",
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                }
            },
            buttons: {
                "Add": function() {
                    var dlg =$jq(this);            
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();                
                    var dcr_lineitem_single_template = Handlebars.compile($jq("#deal-lineitem-content-single-template").html());
                    var temp_list_2 = new Array();
                    var dealUpdatable;
                    var isHeaderFound ,isHeaderClosing;

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var sch_id = dlg.find("#params").attr('data-scHead-id');
                    var table_id = dlg.find("#params").attr('data-table-id');
                    var field_id='';
                    var field_data = dlg.find("#line-add-comment").html();
                    //alert("field_data=" + field_data);
                    
            if(field_data.toString().length > 2000) {
                    openGeneralDialog('Length of data exceeds the limit of 2000 characters.',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            } else if((sch_id==null)||(sch_id=='')) {
                    openGeneralDialog('Deal Score Header is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            }
            else {

            isHeaderFound = isHeaderClosing = false;
            for (var i in dcrReportTypeStatusList){
                 //alert("DEBUG4 i=" + i);
                 if(dcrReportTypeStatusList[i] == sch_id){
                   var temp_list = i.toString().match(/Closing/ig);
                   if (temp_list != null){                                        
                      isHeaderFound=isHeaderClosing=true;
                   } else {
                      isHeaderFound=true;
                   }
                    break;         
                 }
            }       
            if(isHeaderFound == false){
                openGeneralDialog("Selected Header not found.Please check","Error");
                return;
            }  
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateDCR_Report_Detail_Field}',
                deal_id,
                sch_id,
                table_id,
                field_data,
                field_id,
                '#ffffff',
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                        field_id=result;           
                        if(deal_id_to_status_list[dlg.find("#params").attr('data-deal-id')].is_deal_readonly == true) {
                          dealUpdatable = false; }
                        else {
                          dealUpdatable = true;
                        }
                        temp_list_2.push({isDealUpdatable:dealUpdatable,lineItem_id:field_id,deal_id:deal_id,
                                            tableId:table_id,data:unescapeHtml(field_data),
                                            scHead_id:sch_id,isHeaderClosing:isHeaderClosing});       
                       
                        var thisid= "UL#" + table_id + "-id";
                        var findid = "#" + table_id;  
                        dlg.find('.wait-panel').hide();                
                        
                        $jq( thisid ).append(dcr_lineitem_single_template({dealClosingFields :temp_list_2}));
                        //$jq( findid ).find( ".textFieldContent" ).each(function(){$jq(this).html($jq(this).outerHTML);});  
                        $jq( findid ).find( ".textFieldContent" ).each(function(){
                        		//if ($jq(this).html($jq(this).outerHTML).html().indexOf('&lt') >= 0 && $jq(this).html($jq(this).outerHTML).html().indexOf('&gt') >= 0)
                        			//$jq(this).html($jq(this).innerText).text();
                        		//else
                        //			unescapeHtml($jq(this).html($jq(this).outerHTML).text());
                        	});  
                        //skim
                        //alert('deal closing ' + JSON.stringify( $jq( findid ).find( ".textFieldContent" )));
                        
                                                                                
                        dlg.find("#line-add-comment").val('');
                        dlg.find('.content-panel').show();
                        dlg.dialog("close");                   
                        //On a newly created bullet item on DCR - now display the OYS>Edit>Menu
                        //$jq("DIV.dealslist").find("TR[data-deal-id=" + deal_id + "] .dropdown-menu li:last").prev().before("<li><a data-deal-id=\'"+ deal_id + "\' class=\'edit-dealInvestmentScorecard\' href=\'#\'>One-Year Scorecard</a></li>");
                        //alert("Menu OYS just added. Now Check OYS for Deal ID=" + deal_id);
                    } else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
            );
           }       
                },
                "Cancel": function() {
                    $jq(this).find("#line-add-comment").val('');                  
                    $jq(this).dialog("close");                
                }
            }             
        });        
        
        $jq("#dcr-add-dialog").dialog({
            autoOpen: false,
            modal: true,
            position: 'center',
            width: 650,
            buttons: {
                "Add": function() {
                    var dlg =$jq(this);            
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();                
                    var dcr_field_single_template = Handlebars.compile($jq("#deal-closing-field-content-single-template").html());
                    var temp_list_2 = new Array();
                    var dealUpdatable;
                    var isHeaderFound ,isHeaderClosing;

                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var sch_id = dlg.find("#params").attr('data-scHead-id');
                    var table_id = dlg.find("#params").attr('data-table-id');
                    var field_id='';
                    var field_data=dlg.find("#dcrAddContent").val();
                    
            if(field_data.toString().length > 255) {
                    openGeneralDialog('Length of data exceeds the limit of 255 characters.',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            } else if((sch_id==null)||(sch_id=='')) {
                    openGeneralDialog('Deal Score Header is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            }
            else {

            isHeaderFound = isHeaderClosing = false;
            for (var i in dcrReportTypeStatusList){
                 if(dcrReportTypeStatusList[i] == sch_id){
                   var temp_list = i.toString().match(/Closing/ig);
                   if (temp_list != null){                                        
                      isHeaderFound=isHeaderClosing=true;
                   } else {
                      isHeaderFound=true;
                   }
                    break;         
                 }
            }       
            if(isHeaderFound == false){
                openGeneralDialog("Selected Header not found.Please check","Error");
                return;
            }  
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateDCR_Report_Detail_Field}',
                deal_id,
                sch_id,
                table_id,
                field_data,
                field_id,
                '#ffffff',
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                        field_id=result;           
                        if(deal_id_to_status_list[dlg.find("#params").attr('data-deal-id')].is_deal_readonly == true) {
                          dealUpdatable = false; }
                        else {
                          dealUpdatable = true;
                        }
                        temp_list_2.push({isDealUpdatable:dealUpdatable,lineItem_id:field_id,deal_id:deal_id,tableId:table_id,data:field_data,
                       scHead_id:sch_id,isHeaderClosing:isHeaderClosing});
                        $jq("TABLE#"+table_id+" > tbody:last").append(dcr_field_single_template({dealClosingFields :temp_list_2}));
                        dlg.find("#dcrAddContent").val('');
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();                
                        dlg.dialog("close");                   
                    } else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
            );
           }       
                },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }             
        });

        $jq("#dcr-edit-dialog").dialog({
            autoOpen: false,
            modal: true,
            position: 'center',
            width: 650,
            buttons: {
                "Update": function() {
                    var dlg =$jq(this);
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show();      
                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var sch_id = dlg.find("#params").attr('data-scHead-id');
                    var table_id = dlg.find("#params").attr('data-table-id');
                    var field_id=dlg.find("#params").attr('data-dealClosingField-id');;
                    var field_data=dlg.find("#dcrEditContent").val();
            if(field_data.toString().length > 255) {
              alert('Length of data exceeds the limit of 255 characters.');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();                      
            } else if((sch_id==null)||(sch_id=='')) {
                    openGeneralDialog('Deal Score Header is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            } else if((field_id==null)||(field_id=='')) {
                    openGeneralDialog('Deal Line item Id is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            }
            else {                   
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.addUpdateDCR_Report_Detail_Field}',
                deal_id,
                sch_id,
                table_id,
                field_data,
                field_id,
                '',
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                    if(field_id!=result){
                      alert('addUpdateDCR_Report_Detail_Field failed. Please check.');
                      return;
                    }
                    $jq("TABLE#"+table_id+" " + "TR[data-dealClosingField-id=" + field_id + "] #fieldContent").text(field_data);
                    dlg.find("#dcrEditContent").val('');
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();                
                    dlg.dialog("close");
                   
                    } else {
                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
            );
            }
            },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }             
        });    
        
        $jq("#dcr-changecolor-dialog").dialog({
            autoOpen: false,
            modal: true,
            position: 'center',
            width: 300,
            open: function () {
                //Initialize the color first
                var dlg =$jq(this);
                var theValue = dlg.find("#params").attr('data-color-id');
                //alert('theValue=>'+theValue);
                dlg.find("#select-color").find("option[value='"+theValue+"']").attr("selected", "selected");
            },        
            buttons: {
                "OK": function() {
                    var dlg =$jq(this);
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show(); 
                    
                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var sch_id= dlg.find("#params").attr('data-scHead-id');
                    var table_id = dlg.find("#params").attr('data-table-id');
                    var field_id = dlg.find("#params").attr('data-dealClosingField-id');
                    var color_id = dlg.find("#params").attr('data-color-id');
                    
                    var colorCodeString=''; 
                    if((field_id==null)||(field_id=='')) { 
                        openGeneralDialog('Deal Line item Id is NULL',"Error");
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();
                        return;             
                    }       
                    var remoteCall='';
                    var colorCodeString='';
                    if (globalDCRState == 'Follow Up'){
                        remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_FollowupReport_Detail_Field}'; 
                        colorCodeString = $jq(this).find("#select-color").val();
                    }else{
                        remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_Report_Detail_Field}';
                    }         
                    
                    //Now change the background color of the TR
                    var cdlg = $jq("#edit-deal-closing-report-fields-Dialog");
                    cdlg.find("TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "]").css("background-color", colorCodeString);                                     
                    cdlg.find("TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "] TD[data-dealClosingField-id=" + field_id + "]").attr("data-color-id", colorCodeString);         
                    var newVar = cdlg.find("TABLE[data-table-id=" + table_id + "]" + " TR[data-dealClosingField-id=" + field_id + "] TD[data-dealClosingField-id=" + field_id + "]").attr("data-color-id");
                    
                    //alert("deal_id=>" + deal_id + "\nsch_id=>" + sch_id +"\ntable_id=>" + table_id + "\nfield_id=>" + field_id + "\ncolor=>" + colorCodeString + "\nselectcolor=>" + colorCodeString);
                    Visualforce.remoting.Manager.invokeAction(
                        remoteCall,
                        deal_id,
                        sch_id,
                        table_id,
                        '',
                        field_id,
                        colorCodeString,
                        function(result, event) {
                            if ( (result!= null) && (event.status) ) {
                            
                                dlg.find('.wait-panel').hide();                
                                dlg.dialog("close");           
                            } else {                       
                                var matchString = "\'syntax error\'.  Logged in?";
                                matchString = matchString.toLowerCase();
                                if (event.message.toLowerCase().indexOf(matchString) == -1){
                                 alert('Error encountered while processing followup change color\n' + event.message);
                                }
                                else{
                                  alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                  top.location.href='/apex/wp_mydeals';
                                }                      
                            }
                        },
                        {escape:false}
                    );
                },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }             
        });      
        
        $jq("#dcr-delete-dialog").dialog({
            autoOpen: false,
            modal: true,
            position: 'center',
            width: 300,
            buttons: {
                "OK": function() {
                    var dlg =$jq(this);
                    dlg.find('.content-panel').hide();
                    dlg.find('.wait-panel').show(); 
                    var deal_id = dlg.find("#params").attr('data-deal-id');
                    var table_id = dlg.find("#params").attr('data-table-id');
                    var field_id=dlg.find("#params").attr('data-dealClosingField-id');
                    
                    //alert("this item---field_id??" + field_id);
                                        
                    if((field_id==null)||(field_id=='')) { 
                    openGeneralDialog('Deal Line item Id is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
                     }          
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.deleteDCR_Report_Field}',
                field_id,
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                        var ntabid = 'ul#' + table_id + '-id li[data-dealClosingField-id=' + field_id + ']';
                        $jq( ntabid ).remove();             
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();                
                        dlg.dialog("close");                   
                    } else {                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('Error encountered while processing deleteDCR_Report_Field\n' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
            );

            },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }             
        });      
        
        $jq("#financials-dialog").dialog({
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 'auto',
            buttons: {
                "Close": function() {
                    $jq(this).dialog("close");
                }
            }              
        });
        function doesDealDialHaveSeniorTeamMember(dlg) {
            var dealId = dlg.find("#params").attr('data-deal-id');            
            var hasSeniorTm = false;
            $jq("#dealteam li[data-contact-id]").each(function(index, element){                
            if ($jq(this).find("#tm-status-id").hasClass("on-stm")) {
               hasSeniorTm = true;
            }                               
            });              
           return hasSeniorTm;
        }
        $jq("#staffingdialog").dialog({
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 400,
            height: 500,
            buttons: {
                "Update": function() {
                 //alert('staffingdialog: from update button'+$jq(this).find("#params").attr('data-deal-id'));                    
            var local_d_s_stored = $jq(this).find("#params").attr('data-deal-stage-stored');
            var local_d_s_from_user = $jq(this).find("#params").attr('data-deal-stage-from-user');
            var local_d_come_thr_deal_stage = $jq(this).find("#params").attr('data-deal-come-thr-deal-stage');
            var local_d_s_i_stored = deal_stage_name_to_id_list[local_d_s_stored];
            var local_d_s_i_from_user = deal_stage_name_to_id_list[local_d_s_from_user];
            //alert(local_d_s_stored+':'+local_d_s_from_user+':'+local_d_s_i_stored+':'+local_d_s_i_from_user+':'+local_d_come_thr_deal_stage);return;             
            if(  ((local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user <= 1)) ||
                 ((local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored <= 1))
              ){
                updateDealStaffing($jq(this));
            }       
            else if( (((local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user > 1)) || ((local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored > 1))) && (  doesDealDialHaveSeniorTeamMember($jq(this)) == false   )  ) {   
                   var local_dlg= $jq(this);
                   var dealId = local_dlg.find("#params").attr('data-deal-id');  
                       local_dlg.find('.content-panel').show();
                       local_dlg.find('.wait-panel').hide();
                       local_dlg.dialog("close"); 
                       
                     var dlg_2 = $jq("#alert-dialog-for-senior-tm-2");
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage',local_d_come_thr_deal_stage);
                     if(local_d_come_thr_deal_stage == 'true') {
                       dlg_2.find("#dialog-for-senior-tm-2").html('Deals at this stage &#151; '+local_d_s_from_user+' &#151; require a Senior Deal Team Member.');
                     } 
                     else {
                       dlg_2.find("#dialog-for-senior-tm-2").html('Deals at this stage &#151; '+local_d_s_stored+' &#151; require a Senior Deal Team Member.');
                     }            
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();                     
                }                   
            else{
            var dlg = $jq(this);
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show(); 
            
            var dealId = dlg.find("#params").attr('data-deal-id');
            
            var staff = new Array();
            $jq("#dealteam li[data-contact-id]").each(function(index, element){
                
            if ($jq(this).find("#tm-status-id").hasClass("on-stm")){
               staff.push({label:'',user_id:'',contact_id:$jq(this).attr('data-contact-id'),
                    title:'',rank:0,group_name:'',initials:'',isSeniorTeamMember:'true'});
            }
            else {
               staff.push({label:'',user_id:'',contact_id:$jq(this).attr('data-contact-id'),
                    title:'',rank:0,group_name:'',initials:'',isSeniorTeamMember:'false'});
            }                      
                
            });           
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.updateDealStaffing}',
                dealId,
                staff,
                function(result2, event2) {
                    if ( event2.status ) {

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.isUpdateDealStageForADealAllowed}',
                dealId,
                local_d_s_from_user,
                function(result, event) {
            
                  if ( (event.status) && result ) { 
                   //alert('isUpdateDealStageForADealAllowed:'+result);               
                   if(result == 'Not_Allowed_No_Senior_TM')
                   {
                     alert('Updating Deal Stage failed');
                   }
                   else if(result == 'Not_Allowed_Stage_Threshold_X')
                   {
                   
                        var new_staff = result2;
                        elem = $jq("TR[data-deal-id=" + dealId + "] #staff-initials");
                        elem.empty();
                        _.each( new_staff, function( person ) {
                            var link = $jq("<a>", {
                                "href" : "#",
                                title : person.label
                            }).text(person.initials);
                            var span = $jq("<span>").append(link);
                            elem.append(span);
                        }); 
                        
                     dlg.find('.content-panel').show();
                     dlg.find('.wait-panel').hide();
                     dlg.dialog("close");
           
                     
                     var dlg_2 = $jq("#alert-dialog-for-stage-crossing-thresh-x");
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);
                     dlg_2.find("#dialog-for-stage-content").html(ear_dlg_text);

                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'stage-crossing-thresh-x bs');
                     dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();
                     
                   }
                   else {

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.doUpdateDealStageForADeal}',
                dealId,
                local_d_s_from_user,
                function(result, event) {
                    if ( (event.status) && result ) {

                        var new_staff = result2;
                        elem = $jq("TR[data-deal-id=" + dealId + "] #staff-initials");
                        elem.empty();
                        _.each( new_staff, function( person ) {
                            var link = $jq("<a>", {
                                "href" : "#",
                                title : person.label
                            }).text(person.initials);
                            var span = $jq("<span>").append(link);
                            elem.append(span);
                        }); 
                    
                        //alert('updateDealStageForADeal:doUpdateDealStageForADeal:Updated successfully');
                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-stage-1");
                        if ( elem.length > 0 ) {
                         //alert('inside'+elem.length+':'+local_d_s_from_user);    
                         //alert('Old:'+elem.text()+':New:'+local_d_s_from_user);                        
                           elem.html('<strong>'+local_d_s_from_user+'</strong>');
                           var _s;
                           
                                    if ( local_d_s_from_user in deal_icon_styles) {
                                        _s = deal_icon_styles[local_d_s_from_user];
                                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-icon");
                                        //alert(elem.length+_s);
                                        if (elem.hasClass("deal-review"))
                                        {
                                          //alert('removing class deal-review');
                                          elem.removeClass("deal-review");
                                        }
                                        else if(elem.hasClass("deal-portfolio"))
                                        {
                                          //alert('removing class deal-portfolio');
                                          elem.removeClass("deal-portfolio");
                                        }
                                        else if (elem.hasClass("deal-dead"))
                                        {
                                          //alert('removing class deal-dead');
                                          elem.removeClass("deal-dead");
                                        }
                                        else if (elem.hasClass("deal-exited"))
                                        {
                                          //alert('removing class deal-exited');
                                          elem.removeClass("deal-exited");
                                        }
                                        
                                        elem.addClass( _s);
                                    }                                                                      
                        }   

                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       dlg.dialog("close"); 
                     
                if((deal_id_to_status_list[dealId].is_ear_disabled == false) && (local_d_come_thr_deal_stage == 'true')) {  
                  if((local_d_s_i_stored <= 2) &&(local_d_s_i_from_user > 2)){
                     var dlg_2 = $jq("#alert-dialog-for-ear-report");
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage', false);
                     dlg_2.find("#dialog-for-ear-content").html('Do you want the Early Action Report to be emailed to you?');
            
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();                      
                  }  
                }    
                     
                        
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('updateDealStageForADeal:doUpdateDealStageForADeal:Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );                 
                   
                   }                   
                  }
                  else {
                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
             );             

                                                
                    } else {
                        alert(event2.message);
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event2.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert(event2.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                }
            );
                        
            }               
                },
                "Cancel": function() {
                 // alert('staffingdialog: from cancel button');
                    $jq(this).dialog("close");
                    if($jq(this).find("#params").attr('data-deal-come-thr-deal-stage') == 'true'){
                      $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',false);
                      $jq("#edit-deal-stage-dialog").dialog("open");
                    }
                    $jq(this).find("#params").attr('data-deal-come-thr-deal-stage',false);
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');                     
                }
            }              
        });

            $jq("#edit-key-Dates-Dialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 780,
            height: 440,
            create: function(event, ui) {
            },
            buttons: {
                "Update": function() {
                  // alert('key-Dates-Dialog: from update button');
                    if ( updateDealKeyDatesNextSteps($jq(this)) ) {
                        $jq(this).dialog("close");
                    }
                },
                "Cancel": function() {
                   //alert('key-Dates-Dialog: from cancel button');
                    $jq(this).dialog("close");
                }
            }              
        });
        
            $jq("#edit-deal-stage-dialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 350,
            height: 'auto',            
            open: function(event, ui) {
              if($jq(this).find("#params").attr('data-deal-stage-update-allowed') == 'false'){
                $jq(":button:contains('Update')").prop("disabled", true).addClass("ui-state-disabled"); 
              }
              else {
                $jq(":button:contains('Update')").prop("disabled", false).removeClass("ui-state-disabled");
              }
            },
            buttons: {             
                "Update": function() {
                   //alert('deal-stage-dialog: from update button');
                   updateDealStageForADeal($jq(this));
                },
                "Cancel": function() {
               // alert('deal-stage-dialog: from cancel button');
                    $jq(this).dialog("close");
                }
            }              
            });
        
        $jq("#editcommentarydialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 780,
            height: 440,
        open: function(event, ui) {
              if($jq(this).find("#params").attr('data-deal-readonly') == 'true'){
                 //alert('readonly');
                 $jq('#comment_ifr').contents().find('body').attr('contenteditable', false);
              }
              else
              {
                 //alert('writeonly');
                 $jq('#comment_ifr').contents().find('body').attr('contenteditable', true);          
              }         
        },
            create: function(event, ui) {            	
                if ( !tinyMCE.get('comment') ) {                	
                    $jq(this).find("#comment").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,           
                        plugins : "paste, wordcount",    
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {                        	
                        	o.content = o.content.toString().replace('</br>','');                        	
                        },   
                        paste_postprocess  : function(pl, o) {                        	
                        },
                                                       
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol",
						max_chars  : "1500"	,
						
						setup : function(ed) {
					      ed.onKeyUp.add(function(ed, evt) {							
							var charLength = $jq("#comment").text().length;// ed.getBody().innerText.length
							//var commentType = $jq("#editcommentarydialog").find("#params").attr('data-comment-type');
							if ( charLength > ed.getParam('max_chars')){					    
					          $jq( "#current-char-count" ).html("<font  color='red'>" + charLength + "</font>" );					          
					        } 
					        else
					        {
					        	$jq( "#current-char-count" ).html(charLength);	
					        }
							
					      });
					      
					      ed.onChange.add(function(ed, l) {
					      	var charLength = $jq("#comment").text().length;// ed.getBody().innerText.length
					      	//var commentType = $jq("#editcommentarydialog").find("#params").attr('data-comment-type');
                  	    	if ( charLength > ed.getParam('max_chars')){					
					          $jq( "#current-char-count" ).html("<font  color='red'>" + charLength + "</font>" );					          
					        } 
					        else
					        {
					        	$jq( "#current-char-count" ).html(charLength);	
					        }					
					          //ed.stopPropagation();
                       		  //ed.preventDefault();
					       
          				  });
          				  
          				 ed.onPaste.add(function(ed, e) {
          				 	var charLength = $jq("#comment").text().length;// ed.getBody().innerText.length
          				 	//var commentType = $jq("#editcommentarydialog").find("#params").attr('data-comment-type');
          					if ( charLength > ed.getParam('max_chars')){					
					          $jq( "#current-char-count" ).html("<font  color='red'>" + charLength + "</font>" );					          
					        } 
					        else
					        {
					        	$jq( "#current-char-count" ).html(charLength);	
					        }
      					 });         				  
					   }
						
						
                    });
                }
            },
            buttons: {
                "Update": function() {
                	var commentType = $jq("#editcommentarydialog").find("#params").attr('data-comment-type');
                    if ( $jq("#comment").text().length-1 > 1500 && commentType =='comment'){                  			
                  		var ret = openGeneralDialogOkCancel('You have exceeded the maximum of 1,500 characters. This comment may not display in its entirety in the Excel Salesforce reports. Click OK to save the changes, even if too lengthy, or Cancel to continue editing the EMG Comments. ',"Warning");          
                    }
                    else if ( updateDealCommentary($jq(this)) ) {
                        $jq(this).dialog("close");
                    }
                },
                "Cancel": function() {
                   // alert('editcommentarydialog: from cancel button');
                    $jq(this).dialog("close");
                }
            }              
        });

        $jq("#dcr-edit-lineitem-dialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 700,
            height: 400,
            
            open: function(event, ui) {    

            },
            create: function(event, ui) {
                if ( !tinyMCE.get('line-edit-comment') ) {
                    $jq(this).find("#line-edit-comment").tinymce({                    
                        width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              

                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                }
            },
            buttons: {
                "Update": function() {
                    //alert('editcommentarydialog: from update button');
                    if ( updateLineItemRichTextValue($jq(this)) ) {
                        $jq(this).dialog("close");
                    }                    
                },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }              
          }
        );
        $jq("#followup-edit-teamrecommend-dialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 700,
            height: 400,
            open: function(event, ui) {    
            },
            create: function(event, ui) {
                if ( !tinyMCE.get('followup-edit-teamrecommend') ) {
                    $jq(this).find("#followup-edit-teamrecommend").tinymce({                    
                        width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              

                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                }
            },
            buttons: {
                "Update": function() {
                    if ( updateFollowupHeaderFields($jq(this),'TeamRecommend') ) {
                        $jq(this).dialog("close");
                        $jq("#richtextareaFollowup-Team-Recommendations").html($jq(this).find("#followup-edit-teamrecommend").val());
                    }                  
                },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }              
          }
        );        
        
        $jq("#followup-edit-otherconsider-dialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 700,
            height: 400,
            open: function(event, ui) {    
            },
            create: function(event, ui) {
                if ( !tinyMCE.get('followup-edit-otherconsider') ) {
                    $jq(this).find("#followup-edit-otherconsider").tinymce({                    
                        width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              

                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                }
            },
            buttons: {
                "Update": function() {
                    if ( updateFollowupHeaderFields($jq(this),'OtherConsiderations') ) {
                        $jq(this).dialog("close");
                        $jq("#richtextareaFollowup-Other-Considerations").html($jq(this).find("#followup-edit-otherconsider").val());
                    }                      
                },
                "Cancel": function() {
                    $jq(this).dialog("close");
                }
            }              
          }
        );        
        
        function updateFollowupHeaderFields(dlg,field_name){
        
            var thisdealid = globalDealId ;
            var field_value ='';
            
            if (field_name=='OtherConsiderations'){
                field_value = dlg.find("#followup-edit-otherconsider").val();
                $jq('#dcrOtherConsider').val(field_value);
            }               
            if (field_name=='TeamRecommend'){
                field_value = dlg.find("#followup-edit-teamrecommend").val();
                $jq('#dcrTeamRecommend').val(field_value);
            }       
            //alert("deal id=" + thisdealid + "\nfieldname=" + field_name+ "\nfield_value=" + field_value);
            var remoteCall='{!$RemoteAction.kjoDealReportController.updateFollowupHeaderFields}';   
            Visualforce.remoting.Manager.invokeAction(
                remoteCall,
                thisdealid,
                field_name,
                field_value,
                function(result, event) {
                    if ( (result!= null) && (event.status) ) {
                        //alert("Completed with Followup > Other Considerations > id ==" + result );         
                    } else {                       
                            var matchString = "\'syntax error\'.  Logged in?";
                            matchString = matchString.toLowerCase();
                            if (event.message.toLowerCase().indexOf(matchString) == -1){
                                alert('Error encountered while processing followup other considerations\n' + event.message);
                            }
                            else{
                                alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                                    top.location.href='/apex/wp_mydeals';
                            }                      
                     }
                },
                {escape:false}
            );      
            return true;
        }
        
 function showPreviewOfEIRReport() {   
      local_dlg = $jq("#edit-deal-required-richText-fields-Dialog-EIR");
      var dealId = local_dlg.find("#params").attr('data-deal-id');  
      var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();                          
      $jq( "#dialog-edit-preview-ear-report-info" ).html(
              "<iframe src =\"/apex/eir_sample_pdf_page?id="+ 
              dealId +
              "\"  type=\"application/pdf\"  style=\"width:100%; height:100%\" frameborder=\"1\" scrolling=\"auto\"></iframe> ");
              
         $jq( "#dialog-edit-preview-ear-report-info" ).dialog({
            resizable: false,
            autoOpen: true, 
            modal: true, 
            width: 900,
            height: 550,             
            position: 'center',
            title: 'Previewing EIR report for - '+deal_name,             
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });      
    }
    function showPreviewOfEarReport() {   
      local_dlg = $jq("#edit-deal-required-richText-fields-Dialog");
      var dealId = local_dlg.find("#params").attr('data-deal-id');  
      var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();                          
      $jq( "#dialog-edit-preview-ear-report-info" ).html(
              "<iframe src =\"/apex/ear_sample_pdf_page?id="+ 
              dealId +
              "\"  type=\"application/pdf\"  style=\"width:100%; height:100%\" frameborder=\"1\" scrolling=\"auto\"></iframe> ");
              
         $jq( "#dialog-edit-preview-ear-report-info" ).dialog({
            resizable: false,
            autoOpen: true, 
            modal: true, 
            width: 900,
            height: 550,             
            position: 'center',
            title: 'Previewing EAR report for - '+deal_name,             
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });      
    }
    
    function showEditEarRevEbitdaInfo() {   
      local_dlg = $jq("#edit-deal-required-richText-fields-Dialog");
      var dealId = local_dlg.find("#params").attr('data-deal-id');  
      var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
         $jq( "#dialog-edit-ear-rev-ebitda-info" ).dialog({
            resizable: false,
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',
            title: 'Alert for Company Financials - '+deal_name,       
            //title: 'Error',       
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });      
    }
    
    function showEditDealTeamInfo() {   
      local_dlg = $jq("#edit-deal-required-richText-fields-Dialog");
      var dealId = local_dlg.find("#params").attr('data-deal-id');  
      var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
         $jq( "#dialog-edit-deal-team-info" ).dialog({
            resizable: false,
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',
            title: 'Alert for Deal Team - '+deal_name,       
            //title: 'Error',       
            buttons: {
               "Close": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });      
    }
    
    // initialize the dialogue at startup
        $jq("#edit-deal-required-richText-fields-Dialog-EIR").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 900,
            height: 550,
            closeOnEscape: false,
            open: function(event, ui) {
          $jq('#edit-deal-required-richText-fields-Dialog-tabs-EIR').tabs({ active: 0});
              if($jq(this).find("#params").attr('data-deal-readonly') == 'true'){
                 $jq('#tenureExpectations-EIR_ifr').contents().find('body').attr('contenteditable', false);
                 $jq('#whyInteresting-EIR_ifr').contents().find('body').attr('contenteditable', false);
              }
              else
              {
                 //alert('writeonly');
                // $jq('#areaOfConcern-EIR_ifr').contents().find('body').attr('contenteditable', true);
                 $jq('#tenureExpectations-EIR_ifr').contents().find('body').attr('contenteditable', true);
                 $jq('#whyInteresting-EIR_ifr').contents().find('body').attr('contenteditable', true);
                // $jq('#humanCapitial-EIR_ifr').contents().find('body').attr('contenteditable', true);  
              
              } 
              $jq(this).on('click', '.edit-ear-rev-ebitda-info', showEditEarRevEbitdaInfo );
              $jq(this).on('click', '.edit-ear-Deal-team-info', showEditDealTeamInfo );              
            },
            create: function(event, ui) {
                
               /* if ( !tinyMCE.get('areaOfConcern-EIR') ) {
                    $jq(this).find("#areaOfConcern-EIR").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "simple", 
                        plugins : "paste",               
                        force_br_newlines : false,        
                        force_p_newlines : false,        
                        forced_root_block : '' ,
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        },                              
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                }*/
/*
 script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
*/

                if ( !tinyMCE.get('tenureExpectations-EIR') ) {     
                    $jq(this).find("#tenureExpectations-EIR").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste",      
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        },                                   
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                   }
                  

                if ( !tinyMCE.get('whyInteresting-EIR') ) { //kckkck
                    $jq(this).find("#whyInteresting-EIR").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste",   
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        }, 
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                    
                }
                
               /* if ( !tinyMCE.get('humanCapitial-EIR') ) {
                    $jq(this).find("#humanCapitial-EIR").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "simple",   
                        plugins : "paste", 
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        }, 
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                }*/
                 
            },
            buttons: {
             
                "Preview EIR Report": function() {
                    doActionForEIRReportSize(false,$jq(this),true,false);                    
                },             
                "Send Me Report": function() {
                    doActionForEIRReportSize(true,$jq(this),false,false);
                },          
                "Save": function() {
                    doActionForEIRButtons(false,$jq(this),false, false,false);
                },
                "Save and Close": function() { doActionForEIRButtons(false,$jq(this),false); //kck7
                   /*// alert('edit-deal-required-richText-fields-Dialog: from cancel button');
                    $jq(this).dialog("close");
                    if($jq(this).find("#params").attr('data-deal-come-thr-deal-stage') == 'true'){
                      $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',false);
                      $jq("#edit-deal-stage-dialog").dialog("open");
                    }
                    $jq(this).find("#params").attr('data-deal-come-thr-deal-stage',false);
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user',''); */                                        
                }
            }              
        });
    
        $jq("#edit-deal-required-richText-fields-Dialog").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 1200,
            height: 550,
            closeOnEscape: false,
            open: function(event, ui) {
          //alert('before tabs');
          $jq('#edit-deal-required-richText-fields-Dialog-tabs').tabs({ active: 0});

          //alert('after tabs');
              if($jq(this).find("#params").attr('data-deal-readonly') == 'true'){
                 //alert('readonly');
                 $jq('#areaOfConcern_ifr').contents().find('body').attr('contenteditable', false);
                 $jq('#fitWithGrp_ifr').contents().find('body').attr('contenteditable', false);
                 $jq('#whyInteresting_ifr').contents().find('body').attr('contenteditable', false);
                 $jq('#humanCapitial_ifr').contents().find('body').attr('contenteditable', false);
                 $jq('#capitalMarketConsideration_ifr').contents().find('body').attr('contenteditable', false);
              }
              else {
                 //alert('writeonly');
                 $jq('#areaOfConcern_ifr').contents().find('body').attr('contenteditable', true);
                 $jq('#fitWithGrp_ifr').contents().find('body').attr('contenteditable', true);
                 $jq('#whyInteresting_ifr').contents().find('body').attr('contenteditable', true);
                 $jq('#humanCapitial_ifr').contents().find('body').attr('contenteditable', true);  
                 $jq('#capitalMarketConsideration_ifr').contents().find('body').attr('contenteditable', true);              
              } 
              $jq(this).on('click', '.edit-ear-rev-ebitda-info', showEditEarRevEbitdaInfo );
              $jq(this).on('click', '.edit-ear-Deal-team-info', showEditDealTeamInfo );              
            },
            create: function(event, ui) {
                
                if ( !tinyMCE.get('areaOfConcern') ) {
                    $jq(this).find("#areaOfConcern").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste",               
                        force_br_newlines : false,        
                        force_p_newlines : false,        
                        forced_root_block : '' ,
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        },                              
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                }

                if ( !tinyMCE.get('fitWithGrp') ) {     
                    $jq(this).find("#fitWithGrp").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste",      
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        },                                   
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                   }
                  
                if ( !tinyMCE.get('whyInteresting') ) { 
                    
                    $jq(this).find("#whyInteresting").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste",   
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        }, 
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                    /*
                    $jq(this).find("#whyInteresting").tinymce({
                    	width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              
                        
                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                    */
                }                                
                if ( !tinyMCE.get('humanCapitial') ) {
                    $jq(this).find("#humanCapitial").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste", 
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        }, 
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                }
        
                if ( !tinyMCE.get('capitalMarketConsideration') ) {
                    $jq(this).find("#capitalMarketConsideration").tinymce({
                        width:"100%",
                        height: 260,
                        theme: "advanced",
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo,bullist,numlist',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false,
                        plugins : "paste", 
                        force_br_newlines : false,
                        force_p_newlines : false,
                        forced_root_block : '',                         
                        paste_preprocess : function(pl, o) {
                        o.content = o.content.toString().replace('</br>','');
                        }, 
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        content_css : "{!URLFOR($Resource.custom_images, 'CustomImages/tinyMCE_Content.css')}",
                        inline_styles: false,
                        formats : {
                            underline : {inline : 'u', exact : true}
                        },
                        valid_elements : "strong/b,p,br,em/i,u,li,ul,ol"
                    });
                }                        
            },
            buttons: {
             /*  "Estimate EAR Size" : function(){  
                    doActionForEarReportSize(false,$jq(this),false,true);              
                },*/
                "Preview EAR": function() {
                    doActionForEarReportSize(false,$jq(this),true,false);                    
                },             
                "Send Me Report": function() {
                    doActionForEarReportSize(true,$jq(this),false,false);
                },          
                "Save": function() {
                    doActionForEarButtons(false,$jq(this),false,false);
                },
                "Save and Close": function() {
                                    doActionForEarButtons(false,$jq(this),false);
                   /* // alert('edit-deal-required-richText-fields-Dialog: from cancel button');
                    $jq(this).dialog("close");
                    if($jq(this).find("#params").attr('data-deal-come-thr-deal-stage') == 'true'){
                      $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',false);
                      $jq("#edit-deal-stage-dialog").dialog("open");
                    }
                    $jq(this).find("#params").attr('data-deal-come-thr-deal-stage',false);
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');                                         
                    */
                }
            }              
        });

function getNoLinesInGivenText(text_content,html_content) {
  
  var total_lines=0,local_no=0;
  var temp_list;
  
  if((text_content == '\n') && (html_content == '')) {
    return 0;
  }
  
  if((text_content != null) && (text_content != '')) {
   text_content = text_content.toString();
   //alert('text is...'+text_content+'...');
   //alert('html is...'+html_content+'...');
   
   //First lets count the no of new lines
   temp_list = text_content.match(/\n/g);
   if(temp_list != null) {
      total_lines = temp_list.length;
      //console.log("A:total_lines",total_lines,temp_list.length);
   }
   //alert('getNoLinesInGivenText:intermediate no of new lines are:'+total_lines+'...'+html_content.match(/<ul>|<ol>/g)+'...'+html_content.match(/<br \/>/g));
   //alert('html_content'+html_content);
   if(html_content.match(/<ul>|<ol>/g) != null) {
     total_lines = total_lines -2;
     //console.log("B:total_lines",total_lines);
   } else {
     temp_list = html_content.match(/<br \/>|<br>|<\/br>/g);
     //alert('Atemp_list...'+temp_list);
     if(temp_list != null) {
       total_lines = total_lines + temp_list.length;
       //console.log("C:total_lines",total_lines,temp_list.length);
     } 
   }
   if(html_content != '') {
     temp_list = html_content.match(/<p>|<\/p>/g);
     //alert('Btemp_list...'+temp_list);
     if(temp_list != null) {
       total_lines = total_lines + temp_list.length;
       //console.log("D:total_lines",total_lines,temp_list.length);
     }    
   } else {
     temp_list = text_content.match(/<p>|<\/p>/g);
     //alert('Ctemp_list...'+temp_list);
     if(temp_list != null) {
       total_lines = total_lines + temp_list.length;
      // console.log("E:total_lines",total_lines,temp_list.length);
     }    
   }
   

   
   
   //Second count the no of characters exceeding the length of one line. This will also be counted as another line.
   var start_index=0,pos_flag,temp;
   while(start_index < text_content.length){
     pos_flag = text_content.indexOf("\n",start_index);
     if(pos_flag != -1) {
       temp = pos_flag-start_index;
       //console.log("A:temp pos_flag start_index",temp,pos_flag,start_index);
       if(temp > 118) {
        temp = Math.floor(temp/118);
        //console.log("A:local_no:temp",local_no,temp);
        local_no = local_no + temp;
      //console.log("A:local_no",local_no);
       }
       start_index = pos_flag+1;//Move start index to the next character 
     } else {//-1:No more new lines exist
       temp = (text_content.length-1) - start_index;
       //console.log("B:temp start_index text_content.length",temp,start_index,text_content.length);
       if(temp > 118) {
        temp = Math.floor(temp/118);
        //console.log("B:local_no:temp",local_no,temp);
        local_no = local_no + temp;
       // console.log("B:local_no:temp",local_no,temp);
       }
       start_index = text_content.length;
     }   
   }
   //console.log("getNoLinesInGivenText:no of extra lines due to line wrap:",local_no);   
  
  
  if(local_no == 0) {
   total_lines = total_lines;//Not needed for FOR THE FIRST LINE
   //alert('getNoLinesInGivenText:no of new lines are:'+total_lines);  
  }
  total_lines = total_lines + local_no;
  //console.log("getNoLinesInGivenText:Total lines are:",total_lines);
  }
  
  return total_lines;
}    

function doActionForEIRReportSize(send_ear_report,cur_dlg,show_prev_ear_report,show_estimate_report) {  
  var dealId = cur_dlg.find("#params").attr('data-deal-id');
  var dlg_2 = $jq("#alert-dialog-for-ear-report-size");
  var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();

  if(show_estimate_report == false) {
   if(deal_id_to_status_list[dealId].is_ear_disabled == true) {
     doActionForEIRButtons(send_ear_report,cur_dlg,show_prev_ear_report);
     return;
   }
  }
  
  dlg_2.find("#dialog-for-report-size-content").html('');
  dlg_2.find("#params").attr('data-send-ear-report',send_ear_report);
  dlg_2.find("#params").attr('data-show-prev-ear-report',show_prev_ear_report);
  dlg_2.find("#params").attr('data-show-estimate-report',show_estimate_report);  
                     dlg_2.find("#params").attr('data-source-caller', 'eir'); // xxxx
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', cur_dlg.find("#params").attr('data-deal-stage-stored'));
                     dlg_2.find("#params").attr('data-deal-stage-from-user', cur_dlg.find("#params").attr('data-deal-stage-from-user'));
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage',cur_dlg.find("#params").attr('data-deal-come-thr-deal-stage'));
                     
  dlg_2.find('.content-panel').hide();
  dlg_2.find('.wait-panel').show();
  if(show_estimate_report == true) {
  dlg_2.dialog("open");
  }
  dlg_2.dialog('option', 'position', 'center');   
  
  dlg_2.dialog("option" , "title" , "EIR Size Info for - "+deal_name);  
  
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getNoOfEarMetricsForADeal}',
                dealId,
                function(result, event) {
                    if ( (event.status) && (result != null )) {
                      var text_to_be_shown='';                     
                      //alert('result is '+ result);
                                            //Each EAR metric roughly corresponds to 4 lines in the report
                      var total_additional_lines=0/*result*4*/,local_no;
                      //console.log("Lines:EarMetric:Total:total_additional_lines",total_additional_lines,result);    
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#tenureExpectations-EIR").text(),cur_dlg.find("#tenureExpectations-EIR").html()); 
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:fitWithGrp:Total:local_no",total_additional_lines,local_no);
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#whyInteresting-EIR").text(),cur_dlg.find("#whyInteresting-EIR").html());
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:whyInteresting:Total:local_no",total_additional_lines,local_no);

                      local_no = getNoLinesInGivenText(cur_dlg.find("#earDescription-EIR").val(),'');
                      total_additional_lines = total_additional_lines + local_no;
                     //console.log("Lines:earDescription:Total:local_no",total_additional_lines,local_no);
                      
                      //alert('earReportDealKeyDates');
                      local_no = getNoLinesInGivenText(cur_dlg.find("#earReportViewContent-EIR").find("#earReportDealKeyDates").val(),''); 
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:earReportDealKeyDates:Total:local_no",total_additional_lines,local_no);
                      
                      //alert('earReportDealTeam');
                      local_no = getNoLinesInGivenText(cur_dlg.find("#earReportViewContent-EIR").find("#earReportDealTeam").text(),'');
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:earReportDealTeam:Total:local_no",total_additional_lines,local_no);
                      
            var dealSectorOptionList= cur_dlg.find("#earReportViewContent-EIR").find("#earReportSectorSel").val();
            var dealSectorOptions='';
            if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
             for(var index=0;index<dealSectorOptionList.length;++index){
               if(dealSectorOptionList[index] != 'multiselect-all') {                       
                 dealSectorOptions += dealSectorOptionList[index];
                 if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
               }
             }
            }
            //alert('earReportSectorSel');
            if(dealSectorOptions.toString() != '') {
             local_no=  Math.floor(dealSectorOptions.toString().length/110);
             //console.log("Report Fraction",local_no,dealSectorOptions.toString().length/110);
            }
            else { local_no = 0;}
            total_additional_lines = total_additional_lines + local_no;
            //console.log("Lines:earReportSectorSel:Total:local_no",total_additional_lines,local_no);        
                      
                      var percent_filled = (total_additional_lines*100)/(39+8+2);
                      if(percent_filled > 100) {
                        percent_filled = 100;
                      } else {
                        percent_filled = parseInt(percent_filled);
                      } 
                      //alert(percent_filled+'...'+percent_filled.toFixed(0)+'...'+total_additional_lines);
                      
                      if(show_estimate_report == true) {
                            text_to_be_shown='Your report is '+'<Strong>'+percent_filled.toFixed(0)+'%'+'</Strong>'+' filled of maximum allowed one page limit.';
                            dlg_2.find("#dialog-for-report-size-content").html(text_to_be_shown);
                            dlg_2.find('.content-panel').show();
                            dlg_2.find('.wait-panel').hide();                         
                      }else{
                            //alert('total addl lines'+total_additional_lines); //kckkck3
                            if((deal_id_to_status_list[dealId].is_ear_disabled == false) && (total_additional_lines >=62)) { 
                                dlg_2.dialog("open");
                                text_to_be_shown='Your report may have exceeded the recommended one-page maximum.';
                                dlg_2.find("#dialog-for-report-size-content").html(text_to_be_shown);
                                dlg_2.find('.content-panel').show();
                                dlg_2.find('.wait-panel').hide();                         
                            }else {
                                doActionForEIRButtons(send_ear_report,cur_dlg,show_prev_ear_report);
                            }
                      }                                  
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('updateDealStageForADeal:getNoOfEarMetricsForADeal:Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_MyDeals';
                        }                       
                    }
                },
                {escape:false}
            );  
}
   
function doActionForEarReportSize(send_ear_report,cur_dlg,show_prev_ear_report,show_estimate_report) {  
  var dealId = cur_dlg.find("#params").attr('data-deal-id');
  var dlg_2 = $jq("#alert-dialog-for-ear-report-size");
  var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();

  if(show_estimate_report == false) {
   if(deal_id_to_status_list[dealId].is_ear_disabled == true) {
     doActionForEarButtons(send_ear_report,cur_dlg,show_prev_ear_report);
     return;
   }
  }
  dlg_2.find("#dialog-for-report-size-content").html('');
  dlg_2.find("#params").attr('data-send-ear-report',send_ear_report);
  dlg_2.find("#params").attr('data-show-prev-ear-report',show_prev_ear_report);
  dlg_2.find("#params").attr('data-show-estimate-report',show_estimate_report);  
                     dlg_2.find("#params").attr('data-source-caller', 'ear'); // xxxx
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', cur_dlg.find("#params").attr('data-deal-stage-stored'));
                     dlg_2.find("#params").attr('data-deal-stage-from-user', cur_dlg.find("#params").attr('data-deal-stage-from-user'));
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage',cur_dlg.find("#params").attr('data-deal-come-thr-deal-stage'));
                     
  dlg_2.find('.content-panel').hide();
  dlg_2.find('.wait-panel').show();
  if(show_estimate_report == true) {
  dlg_2.dialog("open");
  }
  dlg_2.dialog('option', 'position', 'center');   
  dlg_2.dialog("option" , "title" , "EAR Size Info for - "+deal_name);  
  
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.getNoOfEarMetricsForADeal}',
                dealId,
                function(result, event) {
                    if ( (event.status) && (result != null )) {
                      var text_to_be_shown='';                     
                      
                      //Each EAR metric roughly corresponds to 4 lines in the report
                      var total_additional_lines=result*4,local_no;
                      //console.log("Lines:EarMetric:Total:total_additional_lines",total_additional_lines,result);
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#areaOfConcern").text(),cur_dlg.find("#areaOfConcern").html());
                      total_additional_lines = total_additional_lines + local_no;
                     //console.log("Lines:areaOfConcern:Total:local_no",total_additional_lines,local_no);
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#fitWithGrp").text(),cur_dlg.find("#fitWithGrp").html());
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:fitWithGrp:Total:local_no",total_additional_lines,local_no);
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#whyInteresting").text(),cur_dlg.find("#whyInteresting").html());
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:whyInteresting:Total:local_no",total_additional_lines,local_no);
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#humanCapitial").text(),cur_dlg.find("#humanCapitial").html());
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:humanCapitial:Total:local_no",total_additional_lines,local_no);
                      
                      local_no = getNoLinesInGivenText(cur_dlg.find("#capitalMarketConsideration").text(),cur_dlg.find("#capitalMarketConsideration").html());
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:capitalMarketConsideration:Total:local_no",total_additional_lines,local_no);
                      
                      //alert('earReportCompDesc');
                      local_no = getNoLinesInGivenText(cur_dlg.find("#earReportViewContent").find("#earReportCompDesc").val(),'');
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:earReportCompDesc:Total:local_no",total_additional_lines,local_no);
                      
                      //alert('earDescription');
                      local_no = getNoLinesInGivenText(cur_dlg.find("#earDescription").val(),'');
                      total_additional_lines = total_additional_lines + local_no;
                     //console.log("Lines:earDescription:Total:local_no",total_additional_lines,local_no);
                      
                      //alert('earReportDealKeyDates');
                      local_no = getNoLinesInGivenText(cur_dlg.find("#earReportViewContent").find("#earReportDealKeyDates").val(),'');
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:earReportDealKeyDates:Total:local_no",total_additional_lines,local_no);
                      
                      //alert('earReportDealTeam');
                      local_no = getNoLinesInGivenText(cur_dlg.find("#earReportViewContent").find("#earReportDealTeam").text(),'');
                      total_additional_lines = total_additional_lines + local_no;
                      //console.log("Lines:earReportDealTeam:Total:local_no",total_additional_lines,local_no);

            var dealSectorOptionList= cur_dlg.find("#earReportViewContent").find("#earReportSectorSel").val();
            var dealSectorOptions='';
            if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
             for(var index=0;index<dealSectorOptionList.length;++index){
               if(dealSectorOptionList[index] != 'multiselect-all') {                       
                 dealSectorOptions += dealSectorOptionList[index];
                 if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
               }
             }
            }
            //alert('earReportSectorSel');
            if(dealSectorOptions.toString() != '') {
             local_no=  Math.floor(dealSectorOptions.toString().length/110);
             //console.log("Report Fraction",local_no,dealSectorOptions.toString().length/110);
            }
            else { local_no = 0;}
            total_additional_lines = total_additional_lines + local_no;
            //console.log("Lines:earReportSectorSel:Total:local_no",total_additional_lines,local_no);        
                      
                      var percent_filled = (total_additional_lines*100)/(39+8+2);
                      if(percent_filled > 100) {
                        percent_filled = 100;
                      } else {
                        percent_filled = parseInt(percent_filled);
                      } 
                      //alert(percent_filled+'...'+percent_filled.toFixed(0)+'...'+total_additional_lines);
                      
                      if(show_estimate_report == true) {
                        text_to_be_shown='Your report is '+'<Strong>'+percent_filled.toFixed(0)+'%'+'</Strong>'+' filled of maximum allowed one page limit.';
                      dlg_2.find("#dialog-for-report-size-content").html(text_to_be_shown);
                      dlg_2.find('.content-panel').show();
                      dlg_2.find('.wait-panel').hide();                         
                      } else {
                      if((deal_id_to_status_list[dealId].is_ear_disabled == false) && (total_additional_lines >=38)) {
                        dlg_2.dialog("open");
                        text_to_be_shown='Your report may have exceeded the recommended one-page maximum.';
                      dlg_2.find("#dialog-for-report-size-content").html(text_to_be_shown);
                      dlg_2.find('.content-panel').show();
                      dlg_2.find('.wait-panel').hide();                         
                      } else {
                        doActionForEarButtons(send_ear_report,cur_dlg,show_prev_ear_report);
                      }
                      }                                  
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('updateDealStageForADeal:getNoOfEarMetricsForADeal:Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_MyDeals';
                        }                       
                    }
                },
                {escape:false}
            );  
}
    
function doActionForDCR_EmailReport(closeForm){
        var dlg = $jq("#edit-deal-closing-report-fields-Dialog");
        var dealId = dlg.find("#params").attr('data-deal-id');  
        var dcr_reportType = dlg.find("#dcrReportViewContent").find("#dcrTypeOfReportSel").val();
        var schId = dcrReportTypeStatusList[dcr_reportType];    

        //AR:8877 Begins
        var tDate = new Date();
        var dd = tDate.getDate();
        var mm = tDate.getMonth()+1; //January is 0!
        var yyyy = tDate.getFullYear();
        var res ='';
        if(dd<10) dd='0'+dd;
        if(mm<10) mm='0'+mm;
        var date_pick_val = mm+'/'+dd+'/'+yyyy;
        var str = '';
        globalCompareDate = "Closing - " + date_pick_val;
        globalClosingLabel = dcr_reportType;    
        //8877 Ends 
        
        var remoteAction= '{!$RemoteAction.kjoDealReportController.sendEmailForDCRReport}';
        if (globalDCRState == 'Follow Up'){
            remoteAction= '{!$RemoteAction.kjoDealReportController.sendEmailForFollowupReport}';
        }          
        Visualforce.remoting.Manager.invokeAction(
                remoteAction,
                dealId,
                schId,
                function(result, event) {    
                  if ( (event.status) && result ) { 
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();                     
                        if (!closeForm) dlg.dialog("close");                  
                        dlg.find("#params").attr('data-deal-come-thr-deal-stage',false);
                        dlg.find("#params").attr('data-deal-stage-stored','');
                        dlg.find("#params").attr('data-deal-stage-from-user','');   
                         
                        //Now display the OYS>Edit>Menu    
                        var thisvalue = $jq("DIV.dealslist").find("TR[data-deal-id=" + dealId + "] .dropdown-menu li:last").prev().prev().text();
                        if (thisvalue.indexOf("One-Year Scorecard")>-1) {
                            //alert('One-Year Scorecard already available');
                        } else {
                                if (globalDCRState == 'Closing'){ 
                                    if (globalCompareDate == globalClosingLabel){
                                        //alert("TODAY-->globalClosingLabel==>" + globalClosingLabel + "\nglobalCompareDate==>" + globalCompareDate); 
                                        //openGeneralDialog("The One-Year Scorecard for " + globalDealName + " will be available tomorrow.","Alert");
                                        return;
                                    }else{
                                        //alert("globalClosingLabel==>" + globalClosingLabel + "\nglobalCompareDate==>" + globalCompareDate); 
                                        $jq("DIV.dealslist").find("TR[data-deal-id=" + dealId + "] .dropdown-menu li:last").prev().before("<li><a data-deal-id=\'"+ dealId + "\' class=\'edit-dealInvestmentScorecard\' href=\'#\'>One-Year Scorecard</a></li>");  
                                    }
                                }
                        }                   
                  }
                  else {
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
       );  
}

function doActionForDCR_Update(curr_dlg,close_dlg,wherefrom){ 
           if (globalDCRState == 'Follow Up'){
                 if (wherefrom=='preview'){
                    if (close_dlg) curr_dlg.dialog("close");     
                    if (!close_dlg) curr_dlg.find('.content-panel').show();    
                    if (!close_dlg) curr_dlg.find('.wait-panel').hide();                   
                    showPreviewOfScorecardReport();
                    return true;                            
                }   
                if (wherefrom=='save'){             
                    return true;                            
                }   
           }        
           
            var dealSectorOptions='';
            var dealSectorOptionList=''; 
            var dealId='';
            var wpInvestment='';
            var loEquiAmt='';
            var wpBoardSeats=0;
            var wpBoardSeatsTotal=0;
            var otherConsider='';
            var teamRecommend='';
            dealSectorOptionList = curr_dlg.find("#dcrReportViewContent").find("#dcrReportSectorSel").val();
            dealId = curr_dlg.find("#params").attr('data-deal-id');                    
            if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
             for(var index=0;index<dealSectorOptionList.length;++index){
               if(dealSectorOptionList[index] != 'multiselect-all') {                       
                 dealSectorOptions += dealSectorOptionList[index];
                 if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
               }
             }
            } 
            wpInvestment = curr_dlg.find("#dcrReportViewContent").find("#dcrWPInvestment").val();
            wpOwnership = curr_dlg.find("#dcrReportViewContent").find("#dcrOwnership").val();
            loEquiAmt = curr_dlg.find("#dcrReportViewContent").find("#dcrLineOfEquityAmount").val();
            wpBoardSeats = curr_dlg.find("#dcrReportViewContent").find("#dcrBoardSeats").val();
            wpBoardSeatsTotal = curr_dlg.find("#dcrReportViewContent").find("#dcrBoardSeatsTotal").val();
            otherConsider = $jq('#dcrOtherConsider').val();
            teamRecommend = $jq('#dcrTeamRecommend').val();
 
            var deal_fields= {
                dealId:dealId,
                dealSector:dealSectorOptions              
            };            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.updateDCR_HeaderInfo}',
                dealId,
                dealSectorOptions,
                wpInvestment,        
                wpOwnership,       
                loEquiAmt,
                wpBoardSeats,
                wpBoardSeatsTotal,
                otherConsider,
                teamRecommend,
                function(result, event) {    
                  //alert("result status="+result + "\n event status= " + event.status);
                  if ( (event.status) && result ) {  
                      	if (result.indexOf('insufficient access') > -1) {
                          alert('Sorry you do not sufficient access');
                            //  top.location.href='/apex/wp_mydeals';
                        }
                        if (wherefrom=='preview'){
                            if (close_dlg) curr_dlg.dialog("close");     
                            if (!close_dlg) curr_dlg.find('.content-panel').show();    
                            if (!close_dlg) curr_dlg.find('.wait-panel').hide();                   
                            showPreviewOfDcrReport(); 
                            return true;                            
                        }   
                        if (wherefrom=='sendreport'){
                            if (close_dlg) curr_dlg.dialog("close");     
                            if (!close_dlg) curr_dlg.find('.content-panel').show();    
                            if (!close_dlg) curr_dlg.find('.wait-panel').hide();                   
                            doActionForDCR_EmailReport(false);
                            return true;                            
                        } 
                        if (close_dlg) curr_dlg.dialog("close");
                        if (!close_dlg) curr_dlg.find('.content-panel').show();    
                        if (!close_dlg) curr_dlg.find('.wait-panel').hide();
                        return true;            
                  }
                  else {                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1){
                         //alert('isUpdateDCRSectorAllowed::Problem Encountered' + event.message);
                        }
                        else{
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
             ); 
}


function doActionForEIRButtons(send_ear_report,cur_dlg,show_prev_ear_report, closeFormIn) //kck7
{
    var closeForm=true;    
    if (!(closeFormIn=== undefined || closeFormIn === null)) { closeForm = closeFormIn;}
 
            var local_d_s_stored = cur_dlg.find("#params").attr('data-deal-stage-stored');
            var local_d_s_from_user = cur_dlg.find("#params").attr('data-deal-stage-from-user');
            var local_d_come_thr_deal_stage = cur_dlg.find("#params").attr('data-deal-come-thr-deal-stage');
            var local_d_s_i_stored = deal_stage_name_to_id_list[local_d_s_stored];
            var local_d_s_i_from_user = deal_stage_name_to_id_list[local_d_s_from_user];
            var dealId = cur_dlg.find("#params").attr('data-deal-id');
                    //alert(local_d_s_stored+':'+local_d_s_i_stored+':'+local_d_s_i_from_user);                    
            if(  ((send_ear_report == false)&& (local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user <= 2)) ||
                 ((send_ear_report == false)&& (local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored <= 2))
              ){

                updateDealRequiredRichTextFieldsEIR(cur_dlg,show_prev_ear_report,closeForm);     
            }       
            else if((false) && ( (deal_id_to_status_list[dealId].is_ear_disabled == false) &&
                     ( (send_ear_report == true) ||
                       ((local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user > 2)) || 
                       ((local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored > 2))) &&
                     (  (cur_dlg.find("#tenureExpectations-EIR").html() == '') ||
                       /*(cur_dlg.find("#fitWithGrp").html() == '') ||*/
                       (cur_dlg.find("#whyInteresting-EIR").html() == '') ||
                       /*(cur_dlg.find("#humanCapitial").html() == '') ||*/
                       (cur_dlg.find("#earDescription-EIR").val() == '') || (cur_dlg.find("#earReportViewContent-EIR").find("#expectedAnnualBudget").val() == '') || (cur_dlg.find("#earReportViewContent-EIR").find("#expectedTiming").val() == '') || (cur_dlg.find("#earReportViewContent-EIR").find("#expectedWPCommitment").val() == '')
                     ) 
                    )) {

                   var local_dlg= cur_dlg;
                       local_dlg.find('.content-panel').show();
                       local_dlg.find('.wait-panel').hide();
                       local_dlg.dialog("close"); 
                       
                     var dlg_2 = $jq("#alert-dialog-for-stage-crossing-thresh-x-2"); 
                     dlg_2.find("#params").attr('data-deal-id', dealId); dlg_2.find("#params").attr('data-source-caller', 'eir');
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);  
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage',local_d_come_thr_deal_stage);
                     if( (send_ear_report == true) &&
                         ( ((local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user <= 2)) || 
                           ((local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored <= 2))
                         )
                        ) {                     
                             dlg_2.find("#dialog-for-stage-content-2").html('All EIR Report information must be complete before sending.');
                            } else {                         
                             dlg_2.find("#dialog-for-stage-content-2").html(ear_dlg_text);
                            }                                             
                       
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();

                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "EAR / EIR Report Alert - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide(); 

                }                   
                else{
                        var dlg = cur_dlg;


            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show(); 
                  
            var dealSectorOptions='',dealSectorOptionList;  
            dealSectorOptionList= dlg.find("#earReportViewContent-EIR").find("#earReportSectorSel").val();
            
            if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
             for(var index=0;index<dealSectorOptionList.length;++index){
               if(dealSectorOptionList[index] != 'multiselect-all') {                       
                 dealSectorOptions += dealSectorOptionList[index];
                 if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
               }
             }
            }

            var deal_fields= {
                dealId:dealId,
              //  areaOfConcern:dlg.find("#areaOfConcern").html(),
              //  fitWithGrp:dlg.find("#fitWithGrp").html(),
                whyInterestingEIR:dlg.find("#whyInteresting-EIR").html().replace('<p>','').replace('</p>',''), //kckkck2
              //  humanCapitial:dlg.find("#humanCapitial").html(),

                 tenureExpectations:dlg.find("#tenureExpectations-EIR").html().replace('<p>','').replace('</p>',''),
                dealName:'',
                dealSector:dealSectorOptions,
                dealTeam:'',
   
                dealDesc:'',
                dealKeyNextSteps:dlg.find("#earReportViewContent-EIR").find("#earReportDealKeyDates").val(),
            
                EIR_Description:dlg.find("#earDescription-EIR").val(), 
               CompCurrencyCode:'', 
                expectedAnnualBudget:dlg.find("#earReportViewContent-EIR").find("#expectedAnnualBudget").val(),  
                expectedTiming:dlg.find("#earReportViewContent-EIR").find("#expectedTiming").val(),  
                expectedWPCommitment:dlg.find("#earReportViewContent-EIR").find("#expectedWPCommitment").val()  
                
            };
            var end_point;
            end_point = '{!$RemoteAction.kjoDealReportController.updateDealRequiredRichTextFieldsEIR}';


            Visualforce.remoting.Manager.invokeAction(
                end_point,
                deal_fields,
                function(result, event) {
                    if ( (result!=null) && (event.status) ) {  
                        var elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-nextsteps");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealKeyNextSteps);
                        }                   

                        elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-deal-sector");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealSector);
                        }
                        
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.doUpdateDealStageForADeal}',
                dealId,
                local_d_s_from_user,
                function(result, event) {
                    if ( (event.status) && result ) {
                        //alert('updateDealStageForADeal:doUpdateDealStageForADeal:Updated successfully');
                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-stage-1");
                        if ( elem.length > 0 ) {
                         //alert('inside'+elem.length+':'+local_d_s_from_user);    
                         //alert('Old:'+elem.text()+':New:'+local_d_s_from_user);                        
                           elem.html('<strong>'+local_d_s_from_user+'</strong>');
                           var _s;
                           
                                    if ( local_d_s_from_user in deal_icon_styles) {
                                        _s = deal_icon_styles[local_d_s_from_user];
                                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-icon");
                                        //alert(elem.length+_s);
                                        if (elem.hasClass("deal-review"))
                                        {
                                          //alert('removing class deal-review');
                                          elem.removeClass("deal-review");
                                        }
                                        else if(elem.hasClass("deal-portfolio"))
                                        {
                                          //alert('removing class deal-portfolio');
                                          elem.removeClass("deal-portfolio");
                                        }
                                        else if (elem.hasClass("deal-dead"))
                                        {
                                          //alert('removing class deal-dead');
                                          elem.removeClass("deal-dead");
                                        }
                                        else if (elem.hasClass("deal-exited"))
                                        {
                                          //alert('removing class deal-exited');
                                          elem.removeClass("deal-exited");
                                        }
                                        
                                        elem.addClass( _s);
                                    }                                                                      
                        }   

                if((deal_id_to_status_list[dealId].is_ear_disabled == false) && (send_ear_report == false)&& (local_d_come_thr_deal_stage == 'true')) {  
                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       if (closeForm) dlg.dialog("close");                 
                  if((local_d_s_i_stored <= 2) &&(local_d_s_i_from_user > 2)){
                     var dlg_2 = $jq("#alert-dialog-for-ear-report");
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage', false);
                     dlg_2.find("#dialog-for-ear-content").html('Do you want the EIR Report to be emailed to you?');
            
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();                      
                  }  
                } else if(send_ear_report == true){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.sendEmailForEIRReport}',
                dealId,
                function(result, event) {    
                  if ( (event.status) && result ) { 
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();                     
                        if (closeForm) dlg.dialog("close");                  
                        dlg.find("#params").attr('data-deal-come-thr-deal-stage',false);
                        dlg.find("#params").attr('data-deal-stage-stored','');
                        dlg.find("#params").attr('data-deal-stage-from-user','');                 
                  }
                  else {
                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
             );               
                
                }               
                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       if(show_prev_ear_report == true) {
                         showPreviewOfEIRReport();
                       } else {
                        if (closeForm) dlg.dialog("close");                     
                       }
                        
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('updateDealStageForADeal:doUpdateDealStageForADeal:Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );  
                       
               

                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                            
                         if (event.message.indexOf("insufficient access") > -1)
                                alert('The Early Action Report is read-only.  You cannot save changes.');
                            else
                            	alert('updateDealRequiredRichTextFieldsEIR:Error encountered\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );
                        
                    } 
}

function doActionForEarButtons(send_ear_report,cur_dlg,show_prev_ear_report,closeFormIn){
            var closeForm=true;    
            if (!(closeFormIn=== undefined || closeFormIn === null)) { closeForm = closeFormIn;}
            var local_d_s_stored = cur_dlg.find("#params").attr('data-deal-stage-stored');
            var local_d_s_from_user = cur_dlg.find("#params").attr('data-deal-stage-from-user');
            var local_d_come_thr_deal_stage = cur_dlg.find("#params").attr('data-deal-come-thr-deal-stage');
            var local_d_s_i_stored = deal_stage_name_to_id_list[local_d_s_stored];
            var local_d_s_i_from_user = deal_stage_name_to_id_list[local_d_s_from_user];
            var dealId = cur_dlg.find("#params").attr('data-deal-id');
            if(  ((send_ear_report == false)&& (local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user <= 2)) ||
                 ((send_ear_report == false)&& (local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored <= 2))
              ){
                updateDealRequiredRichTextFields(cur_dlg,show_prev_ear_report,closeForm);          
            }       
            else if( (deal_id_to_status_list[dealId].is_ear_disabled == false) &&
                     ( (send_ear_report == true) ||
                       ((local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user > 2)) || 
                       ((local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored > 2))) &&
                     ( (cur_dlg.find("#areaOfConcern").html() == '') ||
                       (cur_dlg.find("#fitWithGrp").html() == '') ||
                       (cur_dlg.find("#whyInteresting").html() == '') ||
                       (cur_dlg.find("#humanCapitial").html() == '') ||
                       (cur_dlg.find("#capitalMarketConsideration").html() == '') ||
                       (cur_dlg.find("#earDescription").val() == '')
                     ) 
                    ) {
                   var local_dlg= cur_dlg;
                       local_dlg.find('.content-panel').show();
                       local_dlg.find('.wait-panel').hide();
                      if(closeForm) local_dlg.dialog("close"); 
                       
                     var dlg_2 = $jq("#alert-dialog-for-stage-crossing-thresh-x-2");
                     dlg_2.find("#params").attr('data-source-caller', 'ear');
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage',local_d_come_thr_deal_stage);
             if( (send_ear_report == true) &&
                         ( ((local_d_come_thr_deal_stage == 'true') && (local_d_s_i_from_user <= 2)) || 
                           ((local_d_come_thr_deal_stage == 'false') && (local_d_s_i_stored <= 2))
                         )
                        ) {                      
            dlg_2.find("#dialog-for-stage-content-2").html('All Early Action Report (EAR) '+'information must be complete before sending.');
                     } 
                     else {                         
                             dlg_2.find("#dialog-for-stage-content-2").html(ear_dlg_text);
                     } 
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "EAR Alert - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();                           
                }                   
                else{
                        var dlg = cur_dlg;
            dlg.find('.content-panel').hide();
            dlg.find('.wait-panel').show(); 
                  
            var dealSectorOptions='',dealSectorOptionList;  
            dealSectorOptionList= dlg.find("#earReportViewContent").find("#earReportSectorSel").val();
            
            if((dealSectorOptionList != null) && (dealSectorOptionList != '')) {
             for(var index=0;index<dealSectorOptionList.length;++index){
               if(dealSectorOptionList[index] != 'multiselect-all') {                       
                 dealSectorOptions += dealSectorOptionList[index];
                 if(index != (dealSectorOptionList.length-1)){
                  dealSectorOptions +=';';  
                 }
               }
             }
            }
            
            var deal_fields= {
                dealId:dealId,
                areaOfConcern:dlg.find("#areaOfConcern").html(),
                fitWithGrp:dlg.find("#fitWithGrp").html(),
                whyInteresting:dlg.find("#whyInteresting").html(),
                humanCapitial:dlg.find("#humanCapitial").html(),
                capitalMarketConsideration:dlg.find("#capitalMarketConsideration").html(),
                dealName:'',
                dealSector:dealSectorOptions,
                dealTeam:'',
                compDesc:dlg.find("#earReportViewContent").find("#earReportCompDesc").val(),
                compRevenue_MM:'',
                compEBITDA_MM:'',
                dealDesc:'',
                dealKeyNextSteps:dlg.find("#earReportViewContent").find("#earReportDealKeyDates").val(),
                WP_Investment_MM:dlg.find("#earReportViewContent").find("#earReportWPInv").val(),
                WP_Ownership_Fully_Diluted:dlg.find("#earReportViewContent").find("#earReportWPDiluted").val(),
                Transaction_Value_MM:dlg.find("#earReportViewContent").find("#earReportTrans").val(),
                Deal_Owner_Source:dlg.find("#earReportViewContent").find("#earReportDealOwnerSel").val() ,
                EAR_Description:dlg.find("#earDescription").val(),
                CompCurrencyCode:'',             
                earMetrics:''
            };
            deal_fields.earMetrics = new Array();
            deal_fields.earMetrics.push({deal_id:'',scHead_id:'',lineItem_id:'',ear_metric_name:'',ear_metric_per_end:'',ear_metric_value:''});
           
            var end_point;
            end_point = '{!$RemoteAction.kjoDealReportController.updateDealRequiredRichTextFields}'; //kck5


            Visualforce.remoting.Manager.invokeAction(
                end_point,
                deal_fields,
                function(result, event) {
                    if ( (result!=null) && (event.status) ) {  
                        var elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-nextsteps");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealKeyNextSteps);
                        }                   

                        elem = $jq("TR[data-deal-id=" + deal_fields.dealId + "] .emg-deal-sector");
                        if ( elem.length > 0 ) {
                          elem.html(deal_fields.dealSector);
                        }
                        
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.doUpdateDealStageForADeal}',
                dealId,
                local_d_s_from_user,
                function(result, event) {
                    if ( (event.status) && result ) {
                        //alert('updateDealStageForADeal:doUpdateDealStageForADeal:Updated successfully');
                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-stage-1");
                        if ( elem.length > 0 ) {
                         //alert('inside'+elem.length+':'+local_d_s_from_user);    
                         //alert('Old:'+elem.text()+':New:'+local_d_s_from_user);                        
                           elem.html('<strong>'+local_d_s_from_user+'</strong>');
                           var _s;
                           
                                    if ( local_d_s_from_user in deal_icon_styles) {
                                        _s = deal_icon_styles[local_d_s_from_user];
                                        elem = $jq("TR[data-deal-id=" + dealId + "] .deal-icon");
                                        //alert(elem.length+_s);
                                        if (elem.hasClass("deal-review"))
                                        {
                                          //alert('removing class deal-review');
                                          elem.removeClass("deal-review");
                                        }
                                        else if(elem.hasClass("deal-portfolio"))
                                        {
                                          //alert('removing class deal-portfolio');
                                          elem.removeClass("deal-portfolio");
                                        }
                                        else if (elem.hasClass("deal-dead"))
                                        {
                                          //alert('removing class deal-dead');
                                          elem.removeClass("deal-dead");
                                        }
                                        else if (elem.hasClass("deal-exited"))
                                        {
                                          //alert('removing class deal-exited');
                                          elem.removeClass("deal-exited");
                                        }
                                        
                                        elem.addClass( _s);
                                    }                                                                      
                        }   

                if((deal_id_to_status_list[dealId].is_ear_disabled == false) && (send_ear_report == false)&& (local_d_come_thr_deal_stage == 'true')) {  
                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       //alert('here2'); //kck6
                      if(closeForm)  dlg.dialog("close");                 
                  if((local_d_s_i_stored <= 2) &&(local_d_s_i_from_user > 2)){
                     var dlg_2 = $jq("#alert-dialog-for-ear-report");
                     dlg_2.find("#params").attr('data-deal-id', dealId);
                     dlg_2.find("#params").attr('data-deal-stage-stored', local_d_s_stored);
                     dlg_2.find("#params").attr('data-deal-stage-from-user', local_d_s_from_user);
                     dlg_2.find("#params").attr('data-deal-come-thr-deal-stage', false);
                     dlg_2.find("#dialog-for-ear-content").html('Do you want the Early Action Report to be emailed to you?');
            
                     dlg_2.find('.content-panel').hide();
                     dlg_2.find('.wait-panel').show();
            
                     dlg_2.dialog("open");
                     dlg_2.dialog('option', 'position', 'center');                   
                     dlg_2.dialog('option', 'dialogClass', 'dialog-for-ear-report bs');
                     var deal_name = $jq("TR[data-deal-id=" + dealId + "] #dealname").text();
                     dlg_2.dialog("option" , "title" , "Alert for Deal - "+deal_name);
                     dlg_2.find('.content-panel').show();
                     dlg_2.find('.wait-panel').hide();                      
                  }  
                } else if(send_ear_report == true){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.sendEmailForEarReport}',
                dealId,
                function(result, event) {    
                  if ( (event.status) && result ) { 
                        dlg.find('.content-panel').show();
                        dlg.find('.wait-panel').hide();    
                        //alert('here3');                  //kck6
                       if(closeForm)  dlg.dialog("close");                  
                        dlg.find("#params").attr('data-deal-come-thr-deal-stage',false);
                        dlg.find("#params").attr('data-deal-stage-stored','');
                        dlg.find("#params").attr('data-deal-stage-from-user','');                 
                  }
                  else {
                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
             );               
                
                }               
                       dlg.find('.content-panel').show();
                       dlg.find('.wait-panel').hide();
                       if(show_prev_ear_report == true) {
                         showPreviewOfEarReport();
                       } else { //kck6
                       if(closeForm)  dlg.dialog("close");                     
                       }
                        
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('updateDealStageForADeal:doUpdateDealStageForADeal:Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );  
                       
               

                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                          if (event.message.indexOf("insufficient access") > -1)
                                alert('The Early Action Report is read-only.  You cannot save changes.');
                            else
                            	alert('updateDealRequiredRichTextFields:Error encountered\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );                     
                    }
}

            $jq("#alert-dialog-for-ear-report-size").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 425,
            height: 'auto',            
            open: function(event, ui) {
            },
            buttons: {             
                "Close": function() {                    
                    var local_send_ear_report,local_show_prev_ear_report,local_show_estimate_report;
                    var local_dlg = $jq(this);
                    local_dlg.dialog("close");


                    if(local_dlg.find("#params").attr('data-show-estimate-report') == 'false'){             
                    
                      if(local_dlg.find("#params").attr('data-send-ear-report') == 'true') {
                        local_send_ear_report = true;
                      } else {
                        local_send_ear_report = false;
                      }
                    
                      if(local_dlg.find("#params").attr('data-show-prev-ear-report') == 'true') {
                        local_show_prev_ear_report=true;
                      } else {
                        local_show_prev_ear_report=false;
                      }
                     var sDlg = local_dlg.find("#params").attr('data-source-caller');  
                     var sD = '#edit-deal-required-richText-fields-Dialog';
                     if (sDlg=='eir') sD = sD + '-EIR';
                       var cur_dlg = $jq(sD); 

                     cur_dlg.find("#params").attr('data-deal-id', local_dlg.find("#params").attr('data-deal-id'));
                     cur_dlg.find("#params").attr('data-deal-stage-stored', local_dlg.find("#params").attr('data-deal-stage-stored'));
                     cur_dlg.find("#params").attr('data-deal-stage-from-user', local_dlg.find("#params").attr('data-deal-stage-from-user'));
                     cur_dlg.find("#params").attr('data-deal-come-thr-deal-stage',local_dlg.find("#params").attr('data-deal-come-thr-deal-stage'));
                     
                     if (sDlg=='eir')  
                     doActionForEIRButtons(local_send_ear_report,cur_dlg,local_show_prev_ear_report);
                     else
                       doActionForEarButtons(local_send_ear_report,cur_dlg,local_show_prev_ear_report);
                    } 
                    local_dlg.find("#params").attr('data-deal-id','');
                    local_dlg.find("#params").attr('data-deal-stage-stored','');
                    local_dlg.find("#params").attr('data-deal-stage-from-user','');
                    local_dlg.find("#params").attr('data-deal-come-thr-deal-stage','');
                    
                    local_dlg.find("#params").attr('data-show-estimate-report','');
                    local_dlg.find("#params").attr('data-send-ear-report','');
                    local_dlg.find("#params").attr('data-show-prev-ear-report','');
                }
            }              
            });
            
        $jq("#edit-deal-closing-report-fields-Dialog").dialog({
            autoOpen: false,
            modal: true,
            position: 'center',
            width: 1000,
            height: 550,
            closeOnEscape: false,          
            open: function(event, ui) {
  
          $jq('#edit-deal-closing-report-fields-tabs').tabs({ active: 0});
          $jq("#edit-deal-closing-report-fields-tabs").tabs().addClass( "ui-tabs-vertical ui-helper-clearfix" );
          $jq("#edit-deal-closing-report-fields-tabs li" ).removeClass( "ui-corner-top" ).addClass( "ui-corner-left" );
          
          if($jq(this).find("#params").attr('data-deal-readonly') == 'true'){
                 //alert('readonly');
              }
              else{
                 //alert('writeonly');           
              } 
            },
            create: function(event, ui) {            
                if ( !tinyMCE.get('richtextFollowup-Team-Recommendations') ) {
                    $jq(this).find("#richtextFollowup-Team-Recommendations").tinymce({
                        width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              
                        
                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                }//if ends                         
                if ( !tinyMCE.get('richtextFollowupOtherConsiderations') ) {
                    $jq(this).find("#richtextFollowupOtherConsiderations").tinymce({
                        width:"100%",
                        height: 260,
                        theme : 'advanced',
                        plugins : "paste",                              
                        force_br_newlines : true,
                        force_p_newlines : false,
                        forced_root_block : "",                       
                        paste_preprocess : function(pl, o) {
                          o.content = strip_tags( o.content,'<b><u><i>' );                      
                        },      
                        script_url : "{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}",
                        inline_styles: false,             
                        mode : 'textareas',
                        editor_selector : 'mceAdvanced',
                        theme_advanced_buttons1: 'bold,italic,underline,strikethrough,undo,redo',
                        theme_advanced_buttons2: '',
                        theme_advanced_buttons3: '',
                        theme_advanced_toolbar_location: 'bottom',
                        theme_advanced_statusbar_location : "none",
                        theme_advanced_path : false
                    });
                }//if ends                  
            },
            buttons: {
            
                "Preview DCR": function() {
                    $jq(this).find('.wait-panel').show();
                    $jq(this).find('.content-panel').hide();
                    doActionForDCR_Update($jq(this),false,'preview');
                },              
                "Send Me Report": function(){
                    $jq(this).find('.wait-panel').show();
                    $jq(this).find('.content-panel').hide();
                    doActionForDCR_Update($jq(this),true,'sendreport');
                    return true;
                },
                "Save": function() {               
                    if (globalDCRState == 'Follow Up'){
                     return true;
                    }
                    $jq(this).find('.wait-panel').show();
                    $jq(this).find('.content-panel').hide();
                    doActionForDCR_Update($jq(this),false,'save');
                    return true;
                },                                 
                "Save and Close": function() {
                    if (globalDCRState == 'Follow Up'){
                        $jq(this).dialog("close");
                        return true;
                    } 
                    $jq(this).find('.content-panel').hide();
                    $jq(this).find('.wait-panel').show();
                    doActionForDCR_Update($jq(this),true,'saveclose');
                    if($jq(this).find("#params").attr('data-deal-come-thr-deal-stage') == 'true'){
                      $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',false);
                      $jq("#edit-deal-stage-dialog").dialog("open");
                    }
                    $jq(this).find("#params").attr('data-deal-come-thr-deal-stage',false);
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');                                        
                }
            }             
        });

            $jq("#alert-dialog-for-stage-crossing-thresh-x").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 390,
            height: 'auto',            
            open: function(event, ui) {
            },
            buttons: {             
                "Close": function() {
               // alert('deal-stage-dialog: from cancel button');
                    $jq(this).dialog("close");
                    $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',false);
                    //$jq("#edit-deal-stage-dialog").dialog("open");
                    $jq(this).find("#params").attr('data-deal-id','');
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');                     
                }
            }              
            });
            //AR:8882 Begins
            $jq("#richtextareaFollowup-Team-Recommendations").click(function() {
                showFollowupTeamRecommendDialog();
            });
            $jq("#richtextareaFollowup-Other-Considerations").click(function() {
                showFollowupOtherConsiderationsDialog();
            });
            //AR:8882 ends        
            $jq("#alert-dialog-for-stage-crossing-thresh-x-2").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 390,
            height: 'auto',            
            open: function(event, ui) {
            },
            buttons: {  
                "Close": function() {               
                    $jq(this).dialog("close"); 
                    
                    
                    var sDlg = "#edit-deal-required-richText-fields-Dialog";
                    if($jq(this).find("#params").attr('data-source-caller') == 'eir') sDlg = "#edit-deal-required-richText-fields-Dialog-EIR";
                    //alert(sDlg);
                        
                    $jq(sDlg).find("#params").attr('data-deal-id',$jq(this).find("#params").attr('data-deal-id'));
                    $jq(sDlg).find("#params").attr('data-deal-stage-stored',$jq(this).find("#params").attr('data-deal-stage-stored'));
                    $jq(sDlg).find("#params").attr('data-deal-stage-from-user',$jq(this).find("#params").attr('data-deal-stage-from-user'));
                    $jq(sDlg).find("#params").attr('data-deal-come-thr-deal-stage',$jq(this).find("#params").attr('data-deal-come-thr-deal-stage'));
                    if($jq(this).find("#params").attr('data-deal-come-thr-deal-stage') == 'false') {
                     $jq(sDlg).dialog("open");
                    }
                    $jq(this).find("#params").attr('data-deal-id','');
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');
                    $jq(this).find("#params").attr('data-deal-come-thr-deal-stage','');                         
                }           
            }              
            });
            
            
            $jq("#alert-dialog-for-ear-report").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 320,
            height: 'auto',            
            open: function(event, ui) {
            },
            buttons: {             
                "OK": function() {
                 var local_dlg = $jq(this);
                 local_dlg.find('.content-panel').hide();
                 local_dlg.find('.wait-panel').show();                   
                 
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.kjoDealReportController.sendEmailForEarReport}',
                local_dlg.find("#params").attr('data-deal-id'),
                function(result, event) {    
                  if ( (event.status) && result ) { 
                        local_dlg.find('.content-panel').show();
                        local_dlg.find('.wait-panel').hide();                     
                        local_dlg.dialog("close");                
                        //alert(local_dlg.find("#params").attr('data-deal-come-thr-deal-stage'));
                        if(local_dlg.find("#params").attr('data-deal-come-thr-deal-stage') == 'true'){
                         $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',true);
                         $jq("#edit-deal-stage-dialog").dialog("open");
                        }   
                    local_dlg.find("#params").attr('data-deal-come-thr-deal-stage',false);
                    local_dlg.find("#params").attr('data-deal-stage-stored','');
                    local_dlg.find("#params").attr('data-deal-stage-from-user','');                 
                  }
                  else {
                     
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('isUpdateDealStageForADealAllowed::Problem Encountered' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                    
                  }                                              
              },
                 {escape:false}
             );               
                
                },
                "Cancel": function() {
                 var local_dlg = $jq(this);
                        local_dlg.find('.content-panel').show();
                        local_dlg.find('.wait-panel').hide();                     
                        local_dlg.dialog("close");                         
                        if(local_dlg.find("#params").attr('data-deal-come-thr-deal-stage') == 'true'){
                         $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',true);
                         $jq("#edit-deal-stage-dialog").dialog("open");
                        }               
                    local_dlg.find("#params").attr('data-deal-come-thr-deal-stage',false);
                    local_dlg.find("#params").attr('data-deal-stage-stored','');
                    local_dlg.find("#params").attr('data-deal-stage-from-user','');                     

                    
                }
            }              
            });

            $jq("#alert-dialog-for-senior-tm").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 390,
            height: 'auto',            
            open: function(event, ui) {
            },
            buttons: {
                "OK": function() {
                 $jq(this).dialog("close");
                 //alert($jq(this).find("#params").attr('data-deal-stage-stored')); 
                // alert($jq(this).find("#params").attr('data-deal-id')); 
                 showStaffingDialogFromStage(
                   $jq(this).find("#params").attr('data-deal-id'),
                   $jq(this).find("#params").attr('data-deal-stage-stored'),
                   $jq(this).find("#params").attr('data-deal-stage-from-user')                 
                   );
                 
                },          
                "Cancel": function() {
               // alert('deal-stage-dialog: from cancel button');
                    $jq(this).dialog("close");
                    $jq("#edit-deal-stage-dialog").find("#params").attr('data-deal-stage-update-allowed',false);
                    $jq("#edit-deal-stage-dialog").dialog("open");
                    $jq(this).find("#params").attr('data-deal-id','');
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');                     
                }
            }              
            });

            $jq("#alert-dialog-for-senior-tm-2").dialog({ 
            autoOpen: false, 
            modal: true, 
            position: 'center',
            width: 390,
            height: 'auto',            
            open: function(event, ui) {
            },
            buttons: {  
                "Close": function() {               
                    $jq(this).dialog("close");
                    $jq("#staffingdialog").find("#params").attr('data-deal-id',$jq(this).find("#params").attr('data-deal-id'));
                    $jq("#staffingdialog").find("#params").attr('data-deal-stage-stored',$jq(this).find("#params").attr('data-deal-stage-stored'));
                    $jq("#staffingdialog").find("#params").attr('data-deal-stage-from-user',$jq(this).find("#params").attr('data-deal-stage-from-user'));
                    $jq("#staffingdialog").find("#params").attr('data-deal-come-thr-deal-stage',$jq(this).find("#params").attr('data-deal-come-thr-deal-stage'));
                    $jq("#staffingdialog").dialog("open");
                    $jq(this).find("#params").attr('data-deal-id','');
                    $jq(this).find("#params").attr('data-deal-stage-stored','');
                    $jq(this).find("#params").attr('data-deal-stage-from-user','');
                    $jq(this).find("#params").attr('data-deal-come-thr-deal-stage','');                         
                }           
            }              
            });

            
        kjoDealReportController.getProfessionalsList(
            '',
            function(data, event) {
                if ( user_list == null ) {
                    user_list = $jq.map(data, function(item) { 
                            return { label : item.label, value : item.label , id : item.user_id, contact_id : item.contact_id
                            ,canBeASeniorTeamMember:item.canBeASeniorTeamMember} 
                        }
                    );
                }
                $jq( "#user-onbehalf" ).autocomplete({
                  source: user_list,
                  minLength: 1,
                  select: function( event, ui ) {
                    //alert( ui.item ? "Selected: " + ui.item.value + ", id: " + ui.item.id : "Nothing selected, input was " + this.value );
                    return;
                  }
                });
                $jq("#user-onbehalf").on("click", function(){$jq(this).select();});
             }
        );                   
         
          kjoDealReportController.getDealSectorFieldList(
              function(data, event) {              
                    if ( (event.status) && (data != null) ) {
                      deal_sector_field_list = data;          
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while getting CurrencyList\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );  

        kjoDealReportController.getDealOwnerSourceFieldList(
              function(data, event) {              
                    if ( (event.status) && (data != null) ) {
                      deal_owner_source_field_list = data;        
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while getting CurrencyList\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_myDeals';
                        }                       
                    }
                },
                {escape:false}
            );  
            
        kjoDealReportController.getCurrencyList(
              function(data, event) {              
                    if ( (event.status) && (data != null) ) {
                      currencies = data;              
                    } else {
                        
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while getting CurrencyList\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                       
                    }
                },
                {escape:false}
            );           

function changeDcrClosingColmColor() {
            //alert("Changing color now...");
            
            var dlg =$jq(this);
            var deal_id = dlg.attr('data-deal-id');
            var sch_id = dlg.attr('data-scHead-id');
            var table_id = dlg.attr('data-table-id');
            var field_id=dlg.attr('data-dealClosingField-id');
            //alert("did="+ deal_id + " fid= " + field_id);
            var field_data;
            var colorCodeString;
            
            if((sch_id==null)||(sch_id=='')) {
                    openGeneralDialog('Deal Score Header is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            } else if((field_id==null)||(field_id=='')) {
                    openGeneralDialog('Deal Line Item Id  is NULL',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            }
            
           if($jq(this).hasClass("fieldContentColorPink")){
              colorCodeString='#ebf1de';
           }else if($jq(this).hasClass("fieldContentColorGreen")){
               colorCodeString='#ffffff';
           }else if($jq(this).hasClass("fieldContentColorWhite")){
               colorCodeString='#f2dcdb';
            } else {
              openGeneralDialog('changeDcrClosingColmColor has no existing color class',"Error");
                    dlg.find('.content-panel').show();
                    dlg.find('.wait-panel').hide();
                    return;             
            }                     
            field_data=$jq("TABLE#"+table_id+" " + "TR[data-dealClosingField-id=" + field_id + "] #fieldContent").text();
            
            var remoteCall='';
            
            if (globalDCRState == 'Follow Up'){
                //alert('calling ...addUpdateDCR_FollowupReport_Detail_Field->field_data' + field_data);
                openGeneralDialog('Followup Line item color matches with the Line item ',"Update");
                remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_FollowupReport_Detail_Field}'; 
            }else{
                remoteCall='{!$RemoteAction.kjoDealReportController.addUpdateDCR_Report_Detail_Field}';
            }           
            
            //alert("table_id->" +table_id +"\nfield_data->" + field_data + "\nfield_id->" + field_id + "\ncolorCodeString->"+colorCodeString);
            //alert("remoteCall->" + remoteCall);
            Visualforce.remoting.Manager.invokeAction(
                remoteCall,
                deal_id,
                sch_id,
                table_id,
                '',
                field_id,
                colorCodeString,
                function(result, event) {
                    //alert("result=" + result + "-event.status->" + event.status);
                    
                    if ( (result!= null) && (event.status) ) {
                       if(field_id!=result){
                            alert('addUpdateDCR_FollowupReport_Detail_Field failed. Please check.');
                            return;
                       }
                       if(dlg.hasClass("fieldContentColorPink")){
                          dlg.removeClass("fieldContentColorPink");
                          dlg.addClass("fieldContentColorGreen");
                       }else if(dlg.hasClass("fieldContentColorGreen")){
                           dlg.removeClass("fieldContentColorGreen");
                           dlg.addClass("fieldContentColorWhite");
                        } else if(dlg.hasClass("fieldContentColorWhite")){
                           dlg.removeClass("fieldContentColorWhite");
                           dlg.addClass("fieldContentColorPink");
                        }
           
                    } else {
                       
                        var matchString = "\'syntax error\'.  Logged in?";
                        matchString = matchString.toLowerCase();
                        if (event.message.toLowerCase().indexOf(matchString) == -1)
                        {
                         alert('Error encountered while updating highlight in Group\n' + event.message);
                        }
                        else
                        {
                          alert('You are currently logged out of Salesforce. Please log in and attempt this action again');
                          top.location.href='/apex/wp_mydeals';
                        }                      
                    }
                },
                {escape:false}
             );           
}      
           
        $jq("#progressbar").progressbar( {value : false} );
        $jq("body").css("cursor", "pointer");
        
        $jq("#editcommentarydialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-edit-lineitem-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-add-lineitem-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#staffingdialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#edit-financials-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#financials-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#edit-key-Dates-Dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#edit-deal-stage-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#edit-deal-required-richText-fields-Dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#edit-deal-closing-report-fields-Dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#alert-dialog-for-stage-crossing-thresh-x .wait-panel-progress").progressbar( {value : false} );
        $jq("#alert-dialog-for-ear-report .wait-panel-progress").progressbar( {value : false} );
        $jq("#alert-dialog-for-senior-tm .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-add-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-edit-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-delete-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-changecolor-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#ear-metric-add-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#ear-metric-edit-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#ear-metric-delete-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-metric-add-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-metric-edit-dialog .wait-panel-progress").progressbar( {value : false} );
        $jq("#dcr-metric-delete-dialog .wait-panel-progress").progressbar( {value : false} );       
        $jq("#alert-dialog-for-ear-report-size .wait-panel-progress").progressbar( {value : false} );
        $jq("#tab-comment-set").tabs();
                
        $jq("DIV.dealslist").on('click', '.edit-emgcomment', 'comment', showEditCommentaryDialog );            
        $jq("DIV.dealslist").on('click', '.edit-emgparagraph', 'paragraph', showEditCommentaryDialog );            
        $jq("DIV.dealslist").on('click', '.edit-staffing', showStaffingDialogFromStageEvent );  
        $jq("DIV.dealslist").on('click', '.edit-financials', showFinancingDialog );
        $jq("DIV.dealslist").on('click', '.edit-keyDates', showKeyDatesDialog );
        $jq("DIV.dealslist").on('click', '.edit-dealStage', showDealStageDialog );
        $jq("DIV.dealslist").on('click', '.edit-dealReqRichTextFields', showEditDealRequiredRichTextFieldsDialogEvent );
        $jq("DIV.dealslist").on('click', '.edit-dealReqRichTextFieldsEIR', showEditDealRequiredRichTextFieldsDialogEventEIR );
        $jq("DIV.dealslist").on('click', '.edit-dealClosingReport', showEditDealClosingReportDialogEvent);
        $jq("DIV.dealslist").on('click', '.edit-dealInvestmentScorecard', showEditDealInvestmentScorecardDialogEvent);   
        $jq('followupcolor').show().focus().click();
        
        $jq("DIV.dealslist").on('click', '.cir-to-emg',  updateCirToEMG ); 
        $jq("DIV.dealslist").on('click', '.inc-to-grp',  updateIncToGrp ); 
        $jq("DIV.dealslist").on('click', '.high-in-grp', updateHighInGrp ); 

        $jq("DIV#financials-dialog-content").on('click', '.delete-financials', showDeleteFinancialsDialog );            
        $jq("DIV#financials-dialog-content").on('click', '.edit-financials', showEditFinancialsDialog );            
        $jq("A#new-financial").on('click', showNewFinancialsDialog ); 
        
        $jq("SPAN#earReportViewContent").on('click','.ear-new-metric-financial', doEarAddNewMetricAction );             
        $jq("SPAN#earReportViewContent").on('click','.edit-earMetrics', doEarEditMetricAction );
        $jq("SPAN#earReportViewContent").on('click','.delete-earMetrics', doEarDeleteNewMetricAction );     

        $jq("DIV#DCR-Financial-Targets").on('click','.dcr-new-metric-financial', doDcrAddNewMetricAction );
        $jq("DIV#DCR-Financial-Targets").on('click','.edit-dcrMetrics', doDcrEditMetricAction );
        $jq("DIV#DCR-Financial-Targets").on('click','.delete-dcrMetrics', doDcrDeleteNewMetricAction );    
        $jq("DIV#DCR-Financial-Targets").on('change', '.action-fieldContentColor', showChangeColorDCRDialog );   
        
        $jq("DIV#DCR-Financial-Targets").on('change', '.action-fieldFinanceColor', showChangeFinanceColorDCRDialog ); 
        
        $jq("DIV#DCR-Financial-Targets").on('blur', '.followupinput', clickFollowupInputOut);  
        $jq("DIV#DCR-Financial-Targets").on('click', '.followupinput', clickFollowupInputIn);  
                 
        $jq("SPAN#investmentThesisContent").on('click', '.lineitem-editable-followup', showEditLineItemDialog );
        $jq("SPAN#investmentThesisContent").on('change', '.action-fieldContentColor', showChangeColorDCRDialog );           
        $jq("SPAN#investmentThesisContent").on('click', '.delete-dealClosingField', showDeleteDCRDialog );  
        $jq("SPAN#investmentThesisContent").on('click', '.lineitem-editable', showEditLineItemDialog );
        $jq("SPAN#investmentThesisContent").on('click', '.add-dealClosingField', showAddLineItemDialog );
        
        $jq("SPAN#investmentRisksContent").on('click', '.lineitem-editable-followup', showEditLineItemDialog );     
        $jq("SPAN#investmentRisksContent").on('change', '.action-fieldContentColor', showChangeColorDCRDialog );    
        $jq("SPAN#investmentRisksContent").on('click', '.delete-dealClosingField', showDeleteDCRDialog );           
        $jq("SPAN#investmentRisksContent").on('click', '.lineitem-editable', showEditLineItemDialog );
        $jq("SPAN#investmentRisksContent").on('click', '.add-dealClosingField', showAddLineItemDialog );                 
                
        $jq("SPAN#keyValueCreationContent").on('click', '.lineitem-editable-followup', showEditLineItemDialog );     
        $jq("SPAN#keyValueCreationContent").on('change', '.action-fieldContentColor', showChangeColorDCRDialog);      
        $jq("SPAN#keyValueCreationContent").on('click', '.delete-dealClosingField', showDeleteDCRDialog );           
        $jq("SPAN#keyValueCreationContent").on('click', '.lineitem-editable', showEditLineItemDialog );
        $jq("SPAN#keyValueCreationContent").on('click', '.add-dealClosingField', showAddLineItemDialog ); 
     
        $jq("SPAN#keyCompanyGoalsContent").on('click', '.lineitem-editable-followup', showEditLineItemDialog );      
        $jq("SPAN#keyCompanyGoalsContent").on('change', '.action-fieldContentColor', showChangeColorDCRDialog );    
        $jq("SPAN#keyCompanyGoalsContent").on('click', '.delete-dealClosingField', showDeleteDCRDialog );     
        $jq("SPAN#keyCompanyGoalsContent").on('click', '.lineitem-editable', showEditLineItemDialog );      
        $jq("SPAN#keyCompanyGoalsContent").on('click', '.add-dealClosingField', showAddLineItemDialog );
 
        $jq("#edit-deal-closing-report-fields-tabs li" ).on('click', getCurrentTab);

        $jq("SPAN#managementTeamContent").on('click', '.lineitem-editable-followup', showEditLineItemDialog );  
        $jq("SPAN#managementTeamContent").on('change', '.action-fieldContentColor', showChangeColorDCRDialog );
        $jq("SPAN#managementTeamContent").on('click', '.delete-dealClosingField', showDeleteDCRDialog );           
        $jq("SPAN#managementTeamContent").on('click', '.lineitem-editable', showEditLineItemDialog );   
        $jq("SPAN#managementTeamContent").on('click', '.add-dealClosingField', showAddLineItemDialog );

        $jq("SPAN#wPTeamActionItemsContent").on('click', '.lineitem-editable-followup', showEditLineItemDialog );  
        $jq("SPAN#wPTeamActionItemsContent").on('change', '.action-fieldContentColor', showChangeColorDCRDialog );  
        $jq("SPAN#wPTeamActionItemsContent").on('click', '.delete-dealClosingField', showDeleteDCRDialog );           
        $jq("SPAN#wPTeamActionItemsContent").on('click', '.lineitem-editable', showEditLineItemDialog );   
        $jq("SPAN#wPTeamActionItemsContent").on('click', '.add-dealClosingField', showAddLineItemDialog );
       
        $jq("#ddlGroups").change(function() {
            $jq('#currgroup').val('');
  			updateDealList("{!$User.Id}");
		});
       
        
        $jq('.refreshdealsbutton').on('click', updateDealList);
        $jq('#getcompanyfinancials').on('click', showFinancingDialog);

        $jq("#curruser").val("{!$User.LastName}, {!$User.FirstName}");
        updateDealList("{!$User.Id}");
    });
    
</script>
</apex:page>