<apex:page standardController="Company_List__c" extensions="SL_createAListController" Id="idPage" action="{!checkUserPermissions}">
	
	<apex:includeScript value="{!URLFOR($Resource.jquery_js)}"/>
	
	<apex:sectionHeader title="Create New Contact and/or Company List." subtitle="List"/>
  
	<apex:form Id="idForm"> 
		<script>
			
			if('{!isReadWriteAccess}'== 'true') 
			{
				alert('You have insufficient access.');
				window.location.href = '/'+'{!objList.id}';
			}
		</script>
		
		<apex:pageblock Id="PbId">
			
			<apex:actionfunction name="funChangeUserOrGroup"  action="{!fetchUserOrTGroupPicklistValues}" rerender="idLeftPicklist, idRightPicklist" status="processingImg" oncomplete="unselectedMSP();"/>
			<apex:actionfunction name="saveUserOrGroup" action="{!btnSave}" rerender="ErrorMessageId" status="processingImg" />
			<apex:actionfunction name="fundummy" rerender="idLeftPicklist" />
			
			<apex:pageMessages id="ErrorMessageId"/>
			
			<apex:outputpanel Id="idDummyPanel" />
			
			<table align="left" border="" width="80%" Id="idTable">
				<tr>
					<td align="right" width="25%" style="vertical-align: middle;">
						<b>List Name </b><b>:</b>
					</td>
					<td align="left" width="25%">
						<span style="color:red;font-weight: bold;font-size: 16pt;width:10%">|</span><apex:inputfield value="{!objList.Name}" style="width:90%;"/>
					</td>
					
					<td width="50%" align="left">
						<apex:outputpanel rendered="{!isFirmWide}">
							<b>Share My List With </b>&nbsp;<b>:</b>&nbsp;
							<apex:selectList id="idUserOrGroup" value="{!strUserOrGroup}" size="1"  onchange="selectedMSP();funChangeUserOrGroup();" >
								<apex:selectOption itemValue="Group" itemLabel="Group"/>
								<apex:selectOption itemValue="User" itemLabel="User"/>
								<apex:selectOption itemValue="Firm" itemLabel="Firm"/>
							</apex:selectList>
						</apex:outputpanel>
						<apex:outputpanel rendered="{!!isFirmWide}">
							&nbsp;<b>Share My List With </b><b>:</b>&nbsp;
							<apex:selectList id="idUserOrGroupNew" value="{!strUserOrGroup}" size="1"  onchange="selectedMSP();funChangeUserOrGroup();" >
								<apex:selectOption itemValue="Group" itemLabel="Group"/>
								<apex:selectOption itemValue="User" itemLabel="User"/>
							</apex:selectList>
						</apex:outputpanel>
						
					</td>

				</tr> 
				
				<tr>
					<td align="right">
						<b>Show In Quick Add&nbsp;:</b>
					</td>
					<td>
						<apex:inputfield value="{!objList.Show_in_Quick_Add__c}" />
					</td>
					<td align="left" >
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Security  </b><b>:</b>&nbsp;
						<apex:selectList id="idSecurity" value="{!strSecurityAccessLevel}" size="1">
							<apex:selectOption itemValue="Read" itemLabel="Read Only"/>
							<apex:selectOption itemValue="Edit" itemLabel="Read/Write"/>
							
						</apex:selectList>
					</td>
					
<!-- 					****************************** -->
					
<!-- 					****************************** -->
				</tr>
				
				<tr>
					<td align="right" >
						<b>List Owner&nbsp;:</b>
					</td>
					<td align="left" >
						<apex:inputfield value="{!objList.OwnerId}" required="false" rendered="{!isRecordOwner}"/>
						<apex:outputfield value="{!objList.OwnerId}"  rendered="{!!isRecordOwner}"/>
						
					</td>
					<td rowspan="2">
						<table >
							<tr>
						      	<td align="center">
						      		<b>Available</b>
						      	</td>
					      		<td></td>
					      		<td align="center">
					      			<b>Selected</b>
					      		</td>
					      	</tr>
							<tr>
	                            <td>
	                                <apex:outputpanel Id="idLeftPicklist" >
	                                <!-- List of unselected items -->
	                                <apex:selectList id="unSelectedMSP"  style="min-width:130px;" size="10" multiselect="true" ondblclick="return selectedMSP();">   
	                                    <apex:selectOptions value="{!unselectedItems}"/>  
	                                </apex:selectList>
	                                </apex:outputpanel>
	                            </td>   
	                            <td class="multiSelectPicklistCell" style="text-align: center;max-width: 60px;">
	                                <p style="margin-top: 20px;">Add</p>
	                                <span>
	                                	<a onclick="return selectedMSP();" title="Add">
	                                		<img src="/s.gif" alt="Add" class="picklistArrowRight" style="cursor: pointer;" title="Add"/>
	                                	</a>
	                                	<br/><br/>
	                                </span>
	                                <span>
	                                	<a onclick="return unselectedMSP();" title="Remove">
	                                		<img src="/s.gif" alt="Remove" class="picklistArrowLeft" style="cursor: pointer;" title="Remove"/>
	                                	</a>Remove 
	                                </span>
									
	                            </td>
	                            <td>
	                                <apex:outputpanel Id="idRightPicklist" >
	                                <!-- List of selected items -->
	                                <apex:selectList id="selectedMSP" style="min-width:130px" size="10" multiselect="true" ondblclick="return unselectedMSP();">   
	                                    <apex:selectOptions value="{!SelectedItems}"/>
	                                </apex:selectList>
	                                </apex:outputpanel>
	                                <script>
	                                    //To get Unselected value of Multiselect Picklist
	                                    function getunSelectedValues() {
	                                        return document.getElementById("{!$Component.unSelectedMSP}"); 
	                                    }
	                                    
	                                    //To get selected value of Multiselect picklist
	                                    function getSelectedValues() {
	                                        return document.getElementById("{!$Component.selectedMSP}"); 
	                                    }
	                                </script>
	                            </td>    
	                        </tr>
						</table>
						
						<!-- To bind the value of Multiselect Picklist -->
	                    <apex:inputHidden value="{!strUserOrGroups}" id="theHiddenInput"/>
	                    <script>
	                        function setUserOrGroup(strSelectedValue) {    
	                        	
	                            var inputHidden = document.getElementById("{!$Component.theHiddenInput}");
	                            inputHidden.value = strSelectedValue;
	                        }
	                    </script>
					
					</td>
				</tr>
				 	
				<tr>
					<td colspan="1" align="right"></td>
					
				</tr>
<!-- 				<tr> -->
<!-- 					<td ></td> -->
					
<!-- 					<td colspan="1" align="right"><b>Security</b></td> -->
<!-- 					<td > -->
<!-- 						<apex:selectList id="idSecurity" value="{!strSecurityAccessLevel}" size="1"> -->
<!-- 							<apex:selectOption itemValue="Read" itemLabel="Read Only"/> -->
<!-- 							<apex:selectOption itemValue="Edit" itemLabel="Read/Write"/> -->
							
<!-- 						</apex:selectList> -->
<!-- 					</td> -->
<!-- 				</tr> -->
				<tr>
					<td colspan="5">
						<center> <br/><br/>
							<input type="button" value="Save" class="btn" onclick="saveUserOrGroup();" /> &nbsp;&nbsp;
							<apex:CommandButton value="Cancel" action="{!cancel}" />
						</center>
					</td>
				</tr>
				
			</table>
			
			<script>
		        //To add the options on Selected list and remove those options from Unselected list
		        function selectedMSP() {
		            var strResolutionCodeNames = '';
		            var arrayToSortSelectedValues = new Array();
		            var arrayMap = new Array();
		            var unselectOptions = getunSelectedValues();
		            var selectedOptionsArray = new Array();
		            for(var i=0;i<unselectOptions.options.length;i++) {
		                if(unselectOptions.options[i].selected) {
		                    selectedOptionsArray.push(unselectOptions.options[i]);
		                    unselectOptions.removeChild(unselectOptions.options[i]);
		                    i--;
		                }
		            }
		            var selectOptions = getSelectedValues();
		            for(var i=0;i<selectedOptionsArray.length;i++) {
		                selectedOptionsArray[i].selected = false;
		                selectOptions.appendChild(selectedOptionsArray[i]);
		            }
		            
		            for(var i=0;i<selectOptions.options.length;i++) {
		                arrayToSortSelectedValues.push(selectOptions.options[i].value);
		                arrayMap.push(mapValueToHtmlElement(selectOptions.options[i]));
		                selectOptions.removeChild(selectOptions.options[i]);
		                i--;
		            }
		            
		            arrayToSortSelectedValues.sort();
		            for(var i=0;i<arrayToSortSelectedValues.length;i++) {
		                for(var j=0;j<arrayMap.length;j++) {
		                    if(arrayToSortSelectedValues[i] == arrayMap[j].value)
		                        selectOptions.appendChild(arrayMap[j].htmlElement);
		                }
		            }
		            
		            //To remove the focus
		            for(var i=0;i<unselectOptions.options.length;i++)
		                if(unselectOptions.options[i].selected) {
		                    unselectOptions.options[i].selected = false;
		                }
		            
		            //TO get the all selected options in form of string 
		            for(var i=0;i<selectOptions.options.length;i++) {
		                strResolutionCodeNames += selectOptions.options[i].value+'<>';
		                if(selectOptions.options[i].selected) {
		                    selectOptions.options[i].selected = false;
		                }
		            }
		            
		            if(strResolutionCodeNames == '')
		                strResolutionCodeNames = 'Empty';
		            
		            setUserOrGroup(strResolutionCodeNames);
		        } 
		        
		        function keyValuePair() {
		            var value;
		            var htmlElement;
		        }
		        
		        function mapValueToHtmlElement(objSelectOptionsElement) {           
		            var mapItem = new keyValuePair();       
		            mapItem.value = objSelectOptionsElement.value;
		            mapItem.htmlElement = objSelectOptionsElement;
		            return mapItem;
		        }  
		        
		        //To add the options on Unselected list and remove those options from selected list
		        function unselectedMSP() {
		            var strResolutionCodeNames = '';
		            var selectOptions = getSelectedValues();
		            var unselectedOptionsArray = new Array();
		            for(var i=0;i<selectOptions.options.length;i++) {
		                if(selectOptions.options[i].selected) {
		                    unselectedOptionsArray.push(selectOptions.options[i]);
		                    selectOptions.removeChild(selectOptions.options[i]);
		                    i--;
		                }
		            }
		            
		            var unselectedOptions = getunSelectedValues();
		            for(var i=0;i<unselectedOptionsArray.length;i++) {
		                unselectedOptionsArray[i].selected = false;
		                unselectedOptions.appendChild(unselectedOptionsArray[i]);
		            }
		            
		            var arrayToSortUnSelectedValues = new Array();
		            var arrayMap = new Array();
		            for(var i=0;i<unselectedOptions.options.length;i++) {
		                arrayToSortUnSelectedValues.push(unselectedOptions.options[i].value);
		                arrayMap.push(mapValueToHtmlElement(unselectedOptions.options[i]));
		                unselectedOptions.removeChild(unselectedOptions.options[i]);
		                i--;
		            }
		            
		            arrayToSortUnSelectedValues.sort();
		            for(var i=0;i<arrayToSortUnSelectedValues.length;i++) {
		                for(var j=0;j<arrayMap.length;j++) {
		                    if(arrayToSortUnSelectedValues[i] == arrayMap[j].value)
		                        unselectedOptions.appendChild(arrayMap[j].htmlElement);
		                }
		            }
		            
		            //To remove the focus
		            for(var i=0;i<unselectedOptions.options.length;i++)
		                if(unselectedOptions.options[i].selected) {
		                    unselectedOptions.options[i].selected = false;
		                }
		            
		            //TO get the all selected options in form of string
		            for(var i=0;i<selectOptions.options.length;i++) {
		                strResolutionCodeNames += selectOptions.options[i].value+'<>';
		                if(selectOptions.options[i].selected) {
		                    selectOptions.options[i].selected = false;
		                }
		            }
		            
		            setUserOrGroup(strResolutionCodeNames);
		        }
		    </script>
			
		</apex:pageblock>
		
		<!-- Start:   Action status           -->
		<apex:actionstatus id="processingImg" startText="Loading...">
		    <apex:facet name="start">
		        <div id="salesforceSource_blurybackground"
		         style="position: absolute; z-index: 9999;left: 1px; top: 1px; width: 100%; height: 100%; text-align: center; vertical-align: middle; background-color: #dcdcdc; opacity: 0.5; filter: alpha(opacity = 50)"></div>
					<div id="goandsave" class="waitingSearchDiv"
					    style="width: 100%; height: 80%; display: '';">
					<div style="width: 144px; vertical-align: top;" class="waitingHolder">
						<table align="top" valign="top" style="width: 100%; ">
							<tr align="top" valign="top" style="width: 100%; ">
								<td valign="top"><img class="waitingImage"
			                        src="/img/loading.gif" /><span class="waitingDescription">Loading......</span></td>
			                </tr> 
						</table>
		            </div>
		        </div>
		    </apex:facet>
		</apex:actionstatus>
		<!-- End:   Action status           -->		
		
	</apex:form>
	
</apex:page>