<apex:page controller="MyTasksController" standardStylesheets="false" tabStyle="Deal__c">


<style type="text/css"> 
    
.btn:hover {
    background-position: 0px -30px !important;
    
}

.customBtnOverflowForSector{
width:725px  !important;
}


.tooltip{
        margin:8px;
        padding:8px;
        border:1px solid blue;
        background-color:yellow;
        position: absolute;
        z-index: 2;
    }
    

.customBtnOverflowForSectorEIR{
width:525px  !important;
}
.customBtnOverflow{
overflow:hidden !important;
font-size: 12px  !important;
font-weight: 600  !important;
text-align:left !important;
height:28px  !important;
white-space:normal !important;
padding-right: 12px !important;
padding-left: 2px !important;
margin-bottom:10px !important;
}

.customCaret {
float: right !important;
margin-right: -8px !important;
margin-top: 7px !important;
}

.customLabelClass {
padding-left: 1px !important;
margin-left: 2px !important;
}

.customEarMetric {
border-color:#cccccc !important; 
padding-bottom:7px !important;  
padding-right:5px !important;
white-space:pre-wrap !important;
}

.btn-mini {
  /* padding: 6px; */
  font-size: 6px;
  width:6em !important;
  -webkit-border-radius: 3px;
     -moz-border-radius: 3px;
          border-radius: 3px;
}

.ui-autocomplete {
    max-height: 200px;
    overflow-y: auto;
    overflow-x: auto; 
    white-space:nowrap;
   }

input[readonly],select[readonly],textarea[readonly] {
  cursor:default;
}

TABLE#deals,TABLE#financials,TABLE#EAR_NewMetricTable,TABLE#DCR_NewMetricTable,
TABLE#DCR_InvestmentThesis,TABLE#DCR_InvestmentRisks,
TABLE#DCR_KeyValueCreation,TABLE#DCR_KeyCompanyGoals,
TABLE#DCR_ManagementTeam,TABLE#DCR_WPTeamActionItems{
    border: 1px solid black;
    border-collapse:collapse;
    padding: .2em;
    margin: .2em;
    width:100%;
}
TABLE#deals TH,TABLE#financials TH,TABLE#EAR_NewMetricTable TH,TABLE#DCR_NewMetricTable TH,
TABLE#DCR_InvestmentThesis TH,TABLE#DCR_InvestmentRisks TH,
TABLE#DCR_KeyValueCreation TH,TABLE#DCR_KeyCompanyGoals TH,
TABLE#DCR_ManagementTeam TH,TABLE#DCR_WPTeamActionItems TH{
    border: 1px solid black;
    text-align: center;
    padding: .5em;
    color: #ffffff;
    background-color: #1797C0;
    font-weight: bold;
}

TABLE#deals TH:hover {
    cursor: pointer !important;
}
TABLE#deals TR:hover {
    background-color: #FFFBCC !important;
}            
             
TABLE#deals TD,TABLE#financials TD,TABLE#EAR_NewMetricTable TD,TABLE#DCR_NewMetricTable TD,
TABLE#DCR_InvestmentThesis TD,TABLE#DCR_InvestmentRisks TD,
TABLE#DCR_KeyValueCreation TD,TABLE#DCR_KeyCompanyGoals TD,
TABLE#DCR_ManagementTeam TD,TABLE#DCR_WPTeamActionItems TD{
    border: 1px solid black;
    padding: .5em;
    color: black;
    /*background-color: #ffffff;*/
}
TABLE#deals TD.ind-icon {
    text-align:center;
}
TABLE#deals SPAN.ind-icon{
    display:inline-block;
}
TABLE#deals TD.created-date{
    white-space:nowrap;
}
TABLE#deals TD.date-received{
    white-space:nowrap;
}
TABLE#deals TD.amount {
    white-space:nowrap;
    text-align: right;
}
TABLE.deal-status-tooltip TD {
    padding-right:14px;
    padding-bottom: 4px;
}
tr.normal-row td {
  background: #888;
  color: #fff;
}
.even {
    background-color: #ffffff;
}
.odd {
    background-color: #eeeeee;
}
tr.alt-row td {
  background: #555;
  color: #fff;
}
#edit-financials INPUT,SELECT {
    text-align:right;
}
#edit-deal-stage INPUT,SELECT {
    text-align:left;
}
.money, .date{
    text-align:right;
}
.dcr-fin-field{
text-align:left;
}
.ear-metric-field{
text-align:left;
}
.period-type, .currency {
    text-align:center;
}
.dropdown-menu LI {
    text-align:left;
}
.inheritbackground {
    background-color: inherit;
}

div.deal-name-title {
    padding-left: 4px;
    padding-right: 4px;
    padding-top: 2px;
    padding-bottom: 2px;
    margin-bottom: 4px;
    font-size: larger;
    background-color: #ddd;
    color: #fff;
    border: 1px solid whitesmoke;
}
div.ui-tooltip {
    max-width: 600px;
    font-size: .9em;
}
div.dialog-update-status {
    margin-top: 6px;
}
TR.comment-hide {
    display:none;
}
#staff-initials span:not(:last-of-type)::after {
  content: ", "  
}
.deal-icon {
    width:16px;
    height:16px;
    background-size:16px 16px;
    display:inline-block;  
}
.custom-icon-info-square {
    position: relative !important;
    padding-right:2px !important;
    left:2px;
    top:3px;
}
.custom-bulb-icon-info {
    display:inline-block;
    position:relative;
    left:0px;
    bottom:1px;
}
.custom-mouse-info {
  cursor:pointer !important;
}
.box-style{
        padding-top:5px;
        padding-bottom:5px;
        padding-right:5px;
        padding-left:5px;
        border-width: 1px;
        border-style: solid ;    
}
.error-border {
    border: 3px solid #dd0000;
    border-radius: 7px;
}
.fieldContentColorPink {
   background-color:#f2dcdb
}
.fieldContentColorGreen {
   background-color:#ebf1de
}
.fieldContentColorWhite {
   background-color:#ffffff
}
.deal-review {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_green.small.png')}");
}
.deal-portfolio {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_blue.small.png')}");
}
.deal-dead {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_red.small.png')}");
}
.deal-exited {
    background-image:url("{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/images/bullet_black.small.png')}");
}

.icon-square {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/icon_sqr.png')}");
    background-position: 0px 0px;
}
.icon-square-filled {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/icon_sqr_filled.png')}");
    background-position: 0px 0px;
}
.icon-grey-bulb {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/gray_qm.png')}");
    background-position: -2px -2px;
}
.icon-orng-bulb {
    background-image:url("{!URLFOR($Resource.custom_images, 'CustomImages/orng_qm.png')}");
    background-position: -1px -1px;
}
.custom-tooltip {
  background: #FEFDBA;
  font-size:12px !important;
  border: solid #FFA603;
  text-align: left;
  white-space: normal;
  font-weight: normal;
}

#dealteam { list-style-type: none; margin: 2px; padding: 4px; width: 90%; }
#dealteam li div { background-color: #eeeeee; position: relative; padding: 4px; margin:2px; border:1px black solid;}
#dealteam li div span { position: absolute; right: 10px; display:inline-block;}
#dealteam li div.hilite { border:1px red solid;}

TABLE.dcr-view-template th {text-align: right;width:30%;padding-right:5px;}
TABLE.dcr-view-template td {text-align: left;width:70%}

.ui-tabs-vertical { width: 55em; }
.ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 12em; }
.ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }
.ui-tabs-vertical .ui-tabs-nav li a { display:block; }
.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-active { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }
.ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}
.vertical-tab-layout {position:absolute;top:0;left:180px;text-align:left;width:100%}

.lineitem-for-template-div {position:relative; left:0px; top:-5px; border-color:#00ff00; border:none; width:700px; height:400px;}
.lineitem-for-template-class {
    list-style:none; width:690px; 
    max-height:360px; overflow-y:auto; border:dotted thin; 
    position:relative; left:-20px; top:35px;
}
.icon-green-container {position:absolute; right:1px; top:1px; border:none; background-color:white; height:16px; width:55px; text-align:center; display:table-cell; vertical-align:middle;}
.icon-green-plus {width:16px; height:16px; background-size:16px 16px; display:inline-block; border:none; }
.icon-green-plus:hover {cursor:pointer;}

.lineitem-for-template-class table:hover {color:red;}
.lineitem-for-template-class li {background-color:white; height:auto;margin:2px; color:white; border:dotted thin;}
.lineitem-for-template-class1 li:hover {text-decoration: none; color:black; border:solid thin; cursor:move; td.border-left:none; }
.lineitem-for-template-class li tr {padding:4px; background-color:white; border-color:ff0000;}
.lineitem-for-template-class li td {vertical-align: top; text-align: left;}
.lineitem-editable {padding-left:4px; width:100%;border-left:dotted thin; border-top:dotted thin;border-bottom:dotted thin}
.lineitem-editable:hover {border:solid thin;cursor:move;}
#tableFinancialMetrixImport td {text-align:right; vertical-align:middle; border:none; height:16px;padding:1px;}
#dcrImportFinFromCompnay button:hover {border:solid thin;}

.taskDialogContainer {
    width: 100%;
    float: left;
}
.taskDialogLabel {
    width: 25%;
    float: left;
    margin: 5px;
}
.taskDialogValue {
    width: 65%;
    float: left;
    margin: 5px;
}
.clearfix {
    clear: both;
}
textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
background-color: #fff;
border: 1px solid #ccc;
-webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
-moz-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
-webkit-transition: border linear .2s,box-shadow linear .2s;
-moz-transition: border linear .2s,box-shadow linear .2s;
-o-transition: border linear .2s,box-shadow linear .2s;
transition: border linear .2s,box-shadow linear .2s;
}
select, textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], .uneditable-input {
display: inline-block;
height: 30px;
/*padding: 4px 6px;*/
padding-left: 4px;
margin-bottom: 10px;
font-size: 14px;
/* line-height: 30px; */
color: #555;
vertical-align: middle;
-webkit-border-radius: 4px;
-moz-border-radius: 4px;
border-radius: 4px;
}

label, input, button, select, textarea {
font-size: 14px !important;
font-weight: normal;
/* line-height: 20px !important; */
overflow: hidden !important;
}

input[disabled], select[disabled], textarea[disabled], input[readonly], select[readonly], textarea[readonly] {
cursor: not-allowed;
background-color: #eee;
}
.bs button, .bs input {
    overflow: hidden !important;
}
.bs a {color:#000000;}

</style>
<apex:pageBlock >
<div class="bs">
<div style="float: left; padding-left: 4px; font-size: 1.4em; font-weight: 600;">My Open Tasks</div>
<div style="float: right; font-size: 1.1em;"><select id="mytaskFilterDD"><option value='1'>Overdue Tasks</option><option value='2'>Overdue Tasks + Next 7 Days</option><option value='3'>Overdue Tasks + Next 30 Days</option><option value='4'>All Tasks</option></select></div>
<div style="float: right; width: 20px;">&nbsp;</div>
<div style="float: right; font-size: 1.1em;"><button id="exporttaskbtn" style="width: 120px;" onclick="window.open('mytasksexcelexport?v=' + $jq('#mytaskFilterDD').val(), 'newWin', 'height=200, width=400'); return false;">Export to Excel </button></div>
<div style="float: right; width: 20px;">&nbsp;</div>
<div style="float: right; font-size: 1.1em;"><button id="addnewtaskbtn" style="width: 120px;" onclick="showAddNewTaskDialog();"><img style='margin-top:-2px;height:18px;' src='{!$Resource.green_plus}'></img> Add New </button></div>

<div style="clear:both">&nbsp;</div>
<div class='dealslist'></div>
<div>
    <div id='mybody'> 
    </div>
</div>
<div style="display:none" id="taskDialog" >
    <div style="display:none" id="params"></div>
    <div class='content-panel' id="edit-deal-required-richText-fields-Dialog-tabs-EIR">
        <div class="taskDialogContainer">
            <div class="taskDialogLabel">Subject</div>
            <div class="taskDialogValue"><input type="text" id="editDialogSubject" style="width: 400px;" /></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Classification</div>
            <div class="taskDialogValue"><select id="editDialogClass" style="width: 400px;" ></select></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Contact(s)</div>
            <div class="taskDialogValue"><textarea type="text" id="editDialogContacts" style="width: 400px;" rows="3"></textarea></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Date</div>
            <div class="taskDialogValue"><input type="text" id="editDialogDatePicker" style="width: 400px;" /></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Note</div>
            <div class="taskDialogValue"><textarea id="editDialogDescription" style="width: 400px;" rows="7"></textarea></div>
            <div class="clearfix"></div>
        </div>
    
    </div>  
    <div class='wait-panel'>
        <div class='wait-panel-progress'></div>
    </div>
</div>
<div style="display:none;" id="confirmDialog">
    <div id="confirmDialogLabel" style="width:300px; text-align:center;"></div>
</div>
<div id="dialog-general-info" style="display:none">
</div>
<div style="display:none" id="taskDialogAdd" >
    <div style="display:none"></div>
    <div class='content-panel'>
        <div class="taskDialogContainer">
            <div class="taskDialogLabel">Assigned to</div>
            <div class="taskDialogValue"><input type="text" id="addDialogOwner" style="width: 400px;" disabled="disabled" /></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Subject</div>
            <div class="taskDialogValue"><input type="text" id="addDialogSubject" style="width: 400px;" /></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Classification</div>
            <div class="taskDialogValue"><select id="addDialogClass" style="width: 400px;" ></select></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Contact(s)</div>
            <div class="taskDialogValue"><textarea type="text" id="addDialogContacts" style="width: 400px;" rows="3"></textarea></div>
            <div class="clearfix"></div>
            <div id='taskDialogAddOption'><div class="taskDialogLabel">Company</div>
            <div class="taskDialogValue"><input type="text" id="addDialogCompany" style="width: 400px;" /></div>
            <div class="clearfix"></div></div>
            <div class="taskDialogLabel">Date</div>
            <div class="taskDialogValue"><input type="text" id="addDialogDatePicker" style="width: 400px;" /></div>
            <div class="clearfix"></div>
            <div class="taskDialogLabel">Note</div>
            <div class="taskDialogValue"><textarea id="addDialogDescription" style="width: 400px;" rows="7"></textarea></div>
            <div class="clearfix"></div>
        </div>
    
    </div>  
    
</div>
<div class='wait-panel'>
    <div class='wait-panel-progress'></div>
</div>
<div id="staffingdialog">
    <div id="dealid" style="display:none"></div>
    <div class="content-panel">
        <div id="staffing-dialog-content"></div>
    </div>
</div>
</div>
</apex:pageBlock>
<apex:stylesheet value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/css/warburg-pincus/jquery-ui-1.10.0.custom.min.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.BootstrapSF, 'dist/css/bootstrap.min.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/js/jquery-1.9.0.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.BootstrapSF, 'dist/js/bootstrap.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery-ui-1.10.0.custom/js/jquery-ui-1.10.0.custom.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery.formatcurrency/jquery.formatCurrency-1.4.0.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery.autonumeric/autoNumeric.js')}"/> 

<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/backbone/underscore-min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/backbone/backbone.js')}"/> 
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/handlebars/handlebars-1.0.rc.1.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/jquery.tablesorter/jquery.tablesorter.js')}"/>

<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/tiny_mce.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.kjo_js_libs, 'libs/tinymce/jscripts/tiny_mce/jquery.tinymce.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.custom_images, 'CustomImages/bootstrap-multiselect.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.custom_images, 'CustomImages/bootstrap-multiselect.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.autoNumeric, 'autoNumeric-master/autoNumeric.js')}"/>

<script id="mytasks-template" type="text/x-handlebars-template">
<table id='deals' class='table table-bordered table-condensed tablesorter'>
        <thead>
    <tr>
    <th>Due Date</th>
    <th>Company/Contact</th>
    <th>Subject</th>
    <th>Classification</th>
    <th>Name</th>
    <th>Note</th>
    <th class="filter-select-nosort">&nbsp;</th>
    <th  class="filter-select-nosort">Actions</th>
    </tr>
    </thead>
    {{#tasks}}  
    <!-- <tr id={{this.m_Id}} data-task-date={{date this.m_ActivityDate}} class="dealdetail"> -->
    <tr id={{this.m_Id}} data-task-date={{date this.m_ActivityDate}}>
        <td style="width:70px;">
            <div style="display:inline;">
                <span style="display: inline;">{{date this.m_ActivityDate}}</span>
                <span style="float:left;">{{{icon this.m_ActivityDate}}}</span>                                        
            </div>          
        </td>
        <td ><div style="display:inline;"><a href="../../{{this.m_CompanyId}}" >{{this.m_CompanyName}}</a>
            {{#if this.m_CompanyId}}<a href="#" class='showdealdetail' title="<table class='deal-status-tooltip'><tr><td style='width: 90px;'><b>Sector</b></td><td>{{this.m_Sector}}</td></tr><tr><td style='width: 90px;'><b>Geographies</b></td><td>{{this.m_Geographies}}</td></tr><tr><td colspan=2>{{this.m_CompanyDescription}}</td></tr></table>"><span class="ui-icon ui-icon-info" style="display:inline-block;float:right"></span></a>
            <br /><a href="#" class='showdealdetail' title="<table class='deal-status-tooltip'><tr><td><b>Type</b></td><td>{{this.m_Financials.m_PeriodType}}</td></tr><tr><td><b>Date</b></td><td>{{date this.m_Financials.m_PeriodEnded}}</td></tr><tr><td><b>Revenue</b></td><td>{{numberformat this.m_Financials.m_Revenues}}</td></tr><tr><td><b>EBITDA</b></td><td>{{numberformat this.m_Financials.m_EBITDA}}</td></tr><tr><td><b>Net Income</b></td><td>{{numberformat this.m_Financials.m_NetIncome}}</td></tr></table>"><span class="icon-star" style="display:inline-block;float:right; width:16px;"></span></a>
            {{/if}}
            </div>          
        </div>
        <div>{{{listlist m_ListExternalContacts}}}</div>
        </td>
        <td >{{HTMLDecode this.m_Subject}}</td>
        <td >{{this.m_Classification}}</td>
        <td >{{{listlist m_OtherContacts}}}</td>
        <td > <div class="task-description">{{ HTMLDecode this.m_Description }}</div></td>
        <td class="filter-select-nosort">{{#if this.m_OtherLists}}<a href="#" class='showdealdetail' title="<table class='deal-status-tooltip'><tr><td>{{listArray this.m_OtherLists}}</td></tr></table>"><span class="ui-icon ui-icon-tag" style="display:block; width:16px;"></span></a>{{/if}}
            {{#if this.m_ClosedTaskNotes}}<a href="#" class='showdealdetail' title="<table class='deal-status-tooltip' style='padding-bottom:4px;'><tr><td style='padding-bottom:4px;'>{{listNotes this.m_ClosedTaskNotes}}</td></tr></table>"><span class="ui-icon ui-icon-check" style="display:block; width:16px;"></span></a>{{/if}}
        </td>
        <td align='center' class="filter-select-nosort">
        <div class="btn-group">
            <button class="btn-mini dropdown-toggle" id='action-button' data-deal-id="{{this.m_Id}}" data-toggle="dropdown">Edit               
           <span class="caret"></span>
            </button>
<ul class="dropdown-menu pull-right">
                <li><a data-deal-id="{{this.m_Id}}" class="edit-task" href='#'>Edit Task</a></li>
                <li><a data-deal-id="{{this.m_Id}}" class="close-task" href='#'>Close Task</a></li>
                
            </ul>
        </div>
        </div>
    </td>   
    </tr>
    
    {{/tasks}}  
</table> 
</script>

<script id="staffing-dialog-template" type="text/x-handlebars-template">

  <div>
    {{#if dealname}}
  <div style="display:none">{{dealname}}</div>
    {{/if}}
    <input type='text' style="width:315px" id='staff-searcher'></input>
    <ul id='dealteam' style="width: 100%; margin-left: -12px;">
    {{#each staff}}
        <li data-contact-id='{{this.contact_id}}' data-user-id='{{this.user_id}} data-user-initial='{{this.user_initial}}' data-contact-company-id='{{this.contact_company_id}}'  >
   <div>
     {{this.label}}
        <a href='#' class='delete-user'><span class='ui-icon ui-icon-circle-close'></span></a>
   </div>
    </li>
    {{/each}}
    </ul>
   </div>
  </script>
 
<script>

var $jq = jQuery.noConflict();
//var mytasklist = new Object();
var mytasklist = [];
var taskCatList = [];
var currentContactList = [];
var theuserid;
var currentusername;
var isContactListDirty = false;
var currentCompanyId = null;
var mytitle = "";
var followupContactList = [];
var followupCompany = {name: null, id: null};
var followupContactNames = null;
var followupTaskInfo = {subject: null, classification: null, note: null, activitydate: null};
var deal_team_info_list = new Array();
var cookievalue = "";

$jq(document).ready(function() {
    
    
    $jq('#mybody').hide();
    $jq('.wait-panel').show();    
    promise_user = getUserInfoWithPromise();
    getTaskCatList();
    $jq('#mybody').on('click', '.edit-task', showEditTaskDialogEvent );
    $jq('#mybody').on('click', '.close-task', showCloseTaskDialogEvent);
    //$jq('#mybody').on('click', '#addnewtaskbtn', showAddNewTaskDialog);
//
 });  
 
$jq('#mytaskFilterDD').change(function() {
    setCookie("sortfilter", $jq('#mytaskFilterDD').val(), 5);
    filterTasks(true);
    $jq('#deals').trigger("applyWidgets");
    
});


function filterTasks(redo) {
    var oddeven = "odd";
    $jq('#deals tr').each(function() {
        if (typeof $jq(this).attr('data-task-date') !== 'undefined') {
            var today = new Date();
            today.setHours(0);
            today.setMinutes(0);
            today.setSeconds(0);
            today = jQuery.datepicker.formatDate('m/d/y', today);
            //return jQuery.datepicker.formatDate(format, _d);
            var thedate = $jq(this).attr('data-task-date');
            //overdue days
            if ($jq('#mytaskFilterDD').val() == '1') {
                if  (Date.parse(thedate) >= Date.parse(today)) {
                    $jq(this).css('display', 'none');
                    
                }
                else {
                    $jq(this).css('display', 'table-row');
                            
                }
            }
            //7 Days
            else if ($jq('#mytaskFilterDD').val() == '2') {
                //var seven = today.getDate() + 7;
                var seven = new Date();
                //seven.setHours(0);
                //seven.setMinutes(0);
                //seven.setSeconds(0);
                seven.setDate(seven.getDate() + 7);
                seven.setHours(0);
                seven.setMinutes(0);
                seven.setSeconds(0);
                seven = jQuery.datepicker.formatDate('m/d/y', seven);
                if  (Date.parse(thedate) >= Date.parse(seven)) {
                    $jq(this).css('display', 'none');
                }
                else {
                    $jq(this).css('display', 'table-row');                  
                }
            }
            //30 Days
            else if ($jq('#mytaskFilterDD').val() == '3') {
                //var seven = today.getDate() + 7;
                var thirty = new Date();
                //seven.setHours(0);
                //seven.setMinutes(0);
                //seven.setSeconds(0);
                thirty.setDate(thirty.getDate() + 30);
                thirty.setHours(0);
                thirty.setMinutes(0);
                thirty.setSeconds(0);
                thirty = jQuery.datepicker.formatDate('m/d/y', thirty);
                if  (Date.parse(thedate) >= Date.parse(thirty)) {
                    $jq(this).css('display', 'none');
                }
                else {
                    $jq(this).css('display', 'table-row');                  
                }
            }
            else { //all tasks
                $jq(this).css('display', 'table-row');
                
            }
            
        }   
        else {
            $jq(this).css('display', 'table-row');
        }
        
    });
    
}

var contatDialogCalledFrom = '';
  $jq(function () {
      $jq.widget("ui.tooltip", $jq.ui.tooltip, {
          options: {
              content: function () {
                
                 if ( $jq(this).hasClass("showdealdetail").toString() == "true" )
                    return $jq(this).prop('title');
              }
          }
      });
      
      $jq(document).tooltip();
  });

function getUserInfoWithPromise() {
        var p = $jq.Deferred( function(dfd) {
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MyTasksController.getCurrentUserContactInformation}',
                function( result, event) {
                    if ( event.status ) {
                        dfd.resolveWith( p, [{"result":result, "event":event }]);
                        theuserid = result.User_ID__c;
                        currentusername = result.Name;
                        getMyTasks(theuserid);
    
                    } else {
                        dfd.rejectWith( p, [{"result":result, "event":event }]);
                    }
                }
            );
        });
        return p.promise();
    }
function clearAddNewDialog() {
    $jq('#addDialogOwner').val('');
    $jq('#addDialogContacts').val('');
    $jq('#addDialogSubject').val('');
    $jq('#addDialogClass').val('');
    $jq('#addDialogCompany').val('');
    $jq('#addDialogDatePicker').val('');
    $jq('#addDialogDescription').val('');
} 
function openGeneralDialog(dialog_content,dialog_title){ 
         
         $jq( "#dialog-general-info" ).dialog({
            resizable: false,
            open: function(event, ui) {
              $jq(this).html(dialog_content);
            },          
            autoOpen: true, 
            modal: true, 
            width: 425,             
            position: 'center',     
            title: dialog_title,       
            buttons: {
               "OK": function() {                                                                                             
                   $jq(this).dialog("close");
               }
            }
         });
         
   }
function showAddNewFollowupTaskHelper(dialogType) {
    isContactListDirty = false;
    currentContactList = [];
    currentCompanyId = "";
    
    $jq('#addDialogOwner').val(currentusername);
    $jq('#addDialogClass').empty();
    $jq('#addDialogSubject').empty();
    $jq('#addDialogDescription').empty();
    for (var i=0; i < taskCatList.length; i++) {
        $jq('#addDialogClass')
             .append($jq("<option></option>")
             .attr("value",taskCatList[i])
             .text(taskCatList[i]));
    }
    //contacts stuff
    var contactlist = "";
    var contactlistfordialog = [];
    if (dialogType == 'Followup') {
        // select 90 days of hte closed date
        //var format = "mm/dd/yy";
        //var friendlydate = jQuery.datepicker.formatDate(format, new Date(followupTaskInfo.activitydate));
        //var friendlydate = convertToUTC(followupTaskInfo.activitydate)
        var ninty = '';
        if (followupTaskInfo.activitydate !== '') {
            ninty = convertToUTC(followupTaskInfo.activitydate);
                ninty.setDate(ninty.getDate() + 90);
                ninty.setHours(0);
                ninty.setMinutes(0);
                ninty.setSeconds(0);
                ninty = jQuery.datepicker.formatDate('m/d/y', ninty);
        }
        $jq('#addDialogDatePicker').val(ninty);
        $jq('#addDialogSubject').val(HTMLDecode(followupTaskInfo.subject));
        $jq('#addDialogDescription').val(HTMLDecode(followupTaskInfo.note));
        $jq('#addDialogClass').val(followupTaskInfo.classification);
        //var followupTaskInfo = {subject: null, classification: null, note: null, activitydate: null};
        $jq('#addDialogContacts').val(followupContactNames);
        currentContactList = followupContactList;
        $jq('#taskDialogAddOption').css('display','none');
        $jq('#addDialogCompany').val(followupCompany.name);
        currentCompanyId = followupCompany.id;
                
        contactlist = followupContactNames.split('),')
        for(var i=0; i < contactlist.length; i++) {
            if (contactlist[i].length > 2) {
                contactlist[i] += ')';  //add the paran back
                contactlistfordialog.push({label: contactlist[i], contact_id: currentContactList[i].m_Id, id: currentContactList[i].m_Id});
            }   
            else
                contactlist.splice(i,1);            
        }           
    }
    else { // brand new task
        $jq("#addDialogCompany").bind('click keyup', function(e) {          
              if ((e.type === 'keyup') && (e.keyCode != 27) && (e.keyCode != 13)&& (e.keyCode != 9)) {
                    currentCompanyId = "";
                    //alert("clearing company name");
              }
        });
    }
    
    $jq("#addDialogContacts").bind('click keyup', function(e) {
            
              if ((e.type === 'click' || e.type === 'keyup') && (e.keyCode != 27)) {
                                contatDialogCalledFrom = "contacts";
                                if (isContactListDirty) {
                                    showStaffingDialog(e, deal_team_info_list);
                                }
                                else {
                                    
                                    showStaffingDialog(e, contactlistfordialog);
                                }   
              }
          });
          $jq("#staffingdialog").dialog({
                      autoOpen: false, 
                      modal: true, 
                      position: 'center',
                      width: 350,
                      height: 350,
                      closeOnEscape: true,
                      buttons: {
                         "OK": function() {
                            if(contatDialogCalledFrom == "contacts")
                                isContactListDirty = true;
                                updateDealStaffing($jq(this));
                                //alert("ok!");
                                
                            $jq(this).dialog("close");
                            $jq("#categories").focus(); 
                         },
                         "Cancel": function() {
                                    $jq(this).dialog("close");
                                    $jq("#categories").focus(); 
                         }
                      }              
                  });  
            
    
    //company stuff
    $jq('#addDialogDatePicker').datepicker();
        
    // do the company autocomplete stuff
    if (dialogType == 'New') {
        $jq('#taskDialogAddOption').css('display','block');
            $jq("#addDialogCompany").autocomplete({
            minLength : 3,
            autoFocus: true,
            source: function(request, response) {
                acc_info= request.term;

                Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MyTasksController.getCompanyList}',
                    request.term,
                    function(data, event) {
                    if ( true){ 
              
                    var comp_list = $jq.map(data, function(item) {                                        
                    
                      if(item.label == 'Create New Company')
                      {
                        return {label : item.label, value : item.label , id : item.comp_id, sub_sector:item.sub_sector,geo:item.geo}
                      }
                      else
                      { 
                                           
                        var is_sub_sector_present= (item.sub_sector!=null) && (item.sub_sector!='') && (item.sub_sector!="")
                        var is_geo_present= (item.geo!=null) && (item.geo!='') && (item.geo!="")
                        
                        if(is_sub_sector_present)
                        {
                          item.sub_sector=item.sub_sector.toString().replace( /\&amp\;/g,"\&");   
                        }
                        
                        if((is_sub_sector_present == true) && (is_geo_present == true))
                        {                                                                   
                          return {label : item.label+', ['+item.sub_sector+'], ['+item.geo+']', value : item.label , id : item.comp_id, sub_sector:item.sub_sector,geo:item.geo}
                        }
                        else if((is_sub_sector_present == false) && (is_geo_present == false))
                        {
                          return {label : item.label, value : item.label , id : item.comp_id, sub_sector:item.sub_sector,geo:item.geo}
                        }
                        else if(is_sub_sector_present == true)
                        {
                          return {label : item.label+', ['+item.sub_sector+']', value : item.label , id : item.comp_id, sub_sector:item.sub_sector,geo:item.geo}
                        }
                        else if(is_geo_present == true)
                        {
                          return {label : item.label+', ['+item.geo+']', value : item.label , id : item.comp_id, sub_sector:item.sub_sector,geo:item.geo}
                        }
                      }                                       
                    });
                    
                    }        
                    response(comp_list);
                    }
                );                   
            },
        
            open:function(event, ui){
                     reset_comp_selections();                     
            } ,                 
            close: function( event, ui ) {      
            },
            select: function( event, ui ) {
                 company_selected=true;
                 account_created_id= ui.item.id;                           
                 //alert("Populating fields for selected company is under construction: " + ui.item.value + ", id: "+ ui.item.id);
                 $jq('#addDialogCompany').val(ui.item.value);
                 currentCompanyId = ui.item.id;
                 //alert("curent is " + currentCompanyId);
            }              
        });

    }
    
} 
function showAddNewTaskDialog() {
    clearAddNewDialog();
    
    showAddNewFollowupTaskHelper("New");            
                
    var dlg = $jq("#taskDialogAdd");    
    dlg.dialog({
      modal: true, 
      position: 'center',
      width: 700,
      height: 550,              
      title: 'Create New Task',
      buttons: {
          "OK": function() {
              //saveEditDialog(deal_id);
              if (saveAddNewDialog())
                $jq(this).dialog("close");
              
          },
          "Cancel": function() {
             // alert('editcommentarydialog: from cancel button');
              $jq(this).dialog("close");
          }
      }              
    });

}    
function showAddNewFollowupTaskDialog() {
    showAddNewFollowupTaskHelper("Followup");            
    
    var dlg = $jq("#taskDialogAdd");    
    dlg.dialog({
      modal: true, 
      position: 'center',
      width: 700,
      height: 550,              
      title: 'Create New Follow up task for ' + mytitle,
      buttons: {
          "OK": function() {
              //saveEditDialog(deal_id);
              if (saveAddNewDialog())
                $jq(this).dialog("close");
              
          },
          "Cancel": function() {
             // alert('editcommentarydialog: from cancel button');
              $jq(this).dialog("close");
          }
      }              
    });

}  
function reset_comp_selections()
{
    creating_new_company=false;
    company_selected=false;
}

function showEditCloseDialogHelper(deal_id) {
    isContactListDirty = false;
          currentContactList = [];
          currentCompanyId = null;
          mytitle = "";
            //var title = mytasklist.indexOf(deal_id);
          var result = $jq.grep(mytasklist, function(e) { return e.m_Id == deal_id; });
          if (typeof result[0].m_CompanyName !== "undefined") {
            mytitle = result[0].m_CompanyName;
          }
          
          for (var i=0; i < result[0].m_ListExternalContacts.length; i++) {
            mytitle = mytitle + ", " + result[0].m_ListExternalContacts[i].m_Name;
          }
          //strip the first and last comma
          mytitle = mytitle.replace(/^,/, '');
          // build the current contact list
          if (typeof result[0].m_OtherContacts !== "undefined") {
            for (var i=0; i < result[0].m_OtherContacts.length; i++) {
                currentContactList.push({m_Id: result[0].m_OtherContacts[i].m_Id});
            }
          } 
          if (typeof result[0].m_ListExternalContacts != "undefined") {
            for (var i=0; i< result[0].m_ListExternalContacts.length; i++) {
                currentContactList.push({m_Id: result[0].m_ListExternalContacts[i].m_Id});
            }
          } 
          
          $jq('#editDialogSubject').val(HTMLDecode(result[0].m_Subject));
          $jq('#editDialogDescription').val(HTMLDecode(result[0].m_Description));
          $jq('#editDialogClass').empty();
          for (var i=0; i < taskCatList.length; i++) {
            if (result[0].m_Classification == taskCatList[i]) {
                $jq('#editDialogClass')
                     .append($jq("<option></option>")
                     .attr("selected","selected")
                     .attr("value",taskCatList[i])
                     .text(taskCatList[i]));
            }
            else {
                $jq('#editDialogClass')
                     .append($jq("<option></option>")
                     .attr("value",taskCatList[i])
                     .text(taskCatList[i]));
            } 
          }
          //datepicker
          var format = "mm/dd/yy";      
          var friendlydate = ''
          if (typeof result[0].m_ActivityDate !== 'undefined') {
            friendlydate = jQuery.datepicker.formatDate(format, convertToUTC(result[0].m_ActivityDate));
          }
          $jq('#editDialogDatePicker').val(friendlydate);
          $jq('#editDialogDatePicker').datepicker({
            dateFormat: "mm/dd/yy",
            defaultDate: new Date(friendlydate)
          });
          
          //contacts
         // var contactlist = result[0].m_OtherContacts.m_Name.join();
          //var contactlist = _.pluck(result[0].m_OtherContactsFullName, 'm_Name').join();
          var contactlist = "";
          if (result[0].m_CompanyId != null) {
            currentCompanyId = result[0].m_CompanyId;
          }
          if ( typeof result[0].m_OtherContactsFullName !== "undefined") {
              for(var i=0; i < result[0].m_OtherContactsFullName.length; i++) {
                contactlist += result[0].m_OtherContactsFullName[i].label + ' (' + result[0].m_OtherContactsFullName[i].company_name + '), ';
                //result[0].m_OtherContactsFullName[i].label = result[0].m_OtherContactsFullName[i].label + ' (' + result[0].m_OtherContactsFullName[i].company_name + ');
              }
              contactlist.slice(0,-1);
          }
          $jq('#editDialogContacts').val(contactlist);
          $jq("#editDialogContacts").bind('click keyup', function(e) {
            
              if ((e.type === 'click' || e.type === 'keyup') && (e.keyCode != 27)) {
                                contatDialogCalledFrom = "contacts";
                                if (isContactListDirty) {
                                    showStaffingDialog(e, deal_team_info_list);
                                }
                                else {
                                    
                                    showStaffingDialog(e, result[0].m_OtherContactsFullName);
                                }   
              }
          });
          $jq("#staffingdialog").dialog({
                      autoOpen: false, 
                      modal: true, 
                      position: 'center',
                      width: 350,
                      height: 350,
                      closeOnEscape: true,
                      buttons: {
                         "OK": function() {
                            if(contatDialogCalledFrom == "contacts")
                                isContactListDirty = true;
                                updateDealStaffing($jq(this));
                                //alert("ok!");
                                
                            $jq(this).dialog("close");
                            $jq("#categories").focus(); 
                         },
                         "Cancel": function() {
                                    $jq(this).dialog("close");
                                    $jq("#categories").focus(); 
                         }
                      }              
                  });  
                  return mytitle;
}

function showEditTaskDialogEvent(eventInput){
          //var deal_id = $jq(this).find("#action-button").attr('data-deal-id');
          var deal_id = $jq(this).attr('data-deal-id');
         
          mytitle = showEditCloseDialogHelper(deal_id);
                  
          eventInput.preventDefault();
          //showEditDealRequiredRichTextFieldsDialogCommonEIR(deal_id,false,'','');
          var dlg = $jq("#taskDialog");    
          dlg.dialog({
            modal: true, 
            position: 'center',
            width: 700,
            height: 440,              
            title: 'Edit Task for ' + mytitle,
            buttons: {
                "OK": function() {
                    if (saveEditDialog(deal_id))
                        $jq(this).dialog("close");
                    
                },
                "Cancel": function() {
                   // alert('editcommentarydialog: from cancel button');
                    $jq(this).dialog("close");
                }
            }              
        });
    }
   
function showCloseTaskDialogEvent(eventInput){
          var deal_id = $jq(this).attr('data-deal-id');
         
          mytitle = showEditCloseDialogHelper(deal_id);
              
          eventInput.preventDefault();
          //showEditDealRequiredRichTextFieldsDialogCommonEIR(deal_id,false,'','');
          var dlg = $jq("#taskDialog");    
          dlg.dialog({
            modal: true, 
            position: 'center',
            width: 700,
            height: 440,              
            title: 'Close Task for ' + mytitle,
            buttons: {
                "Complete Task": function() {
                    saveCloseDialog(deal_id);
                    $jq(this).dialog("close");
                    
                },
                "Cancel": function() {
                   // alert('editcommentarydialog: from cancel button');
                    $jq(this).dialog("close");
                }
            }              
        });
    }
        
    function updateDealStaffing(dlg)
    {   
        currentContactList = [];
         deal_team_info_list.length=0;
         //deal_team_initials_string='';
         //deal_team_contact_id_list.length=0;
         $jq("#dealteam li[data-contact-id]").each(function(index, element){                
             //deal_team_contact_id_list.push($jq(this).attr('data-contact-id'));
             //alert('dealteam ' + $jq(this).text());
             deal_team_info_list[deal_team_info_list.length]=
             { 
                label : $jq(this).text(),
                value :$jq(this).text(),
                id : $jq(this).attr('data-user-id'), 
                contact_id : $jq(this).attr('data-contact-id'),
                user_initial:$jq(this).attr('data-user-initial'),
                contact_company_id : $jq(this).attr('data-contact-company-id')              
             };
             currentContactList.push({m_Id: $jq(this).attr('data-contact-id')});
         });
         //deal_team_initials_string =  deal_team_info_list.join(', ');    
         
         var deal_team_initials_string = _.pluck(deal_team_info_list,'label').join(",   ");
         $jq("#editDialogContacts").val(deal_team_initials_string);
         $jq("#addDialogContacts").val(deal_team_initials_string);
         //$jq("#contacts").attr('height',$jq("#contacts").attr('scrollHeight')+"px"); 
         
         //resizeIt("#contacts");
         $jq("#editDialogContacts").css("height", $jq("#contacts").prop('scrollHeight'));
         $jq("#addDialogContacts").css("height", $jq("#contacts").prop('scrollHeight'));
                                                    
    }
     
function formatDateforSaving(thedate) {
    
    /*thedate = new Date(thedate);
    
    thedate.setDate(thedate.getDate() + 1);
                thedate.setHours(0);
                thedate.setMinutes(0);
                thedate.setSeconds(0);
    return thedate = jQuery.datepicker.formatDate('m/d/y', thedate);   
    */
    //thedate = new Date(thedate).toISOString();
    return thedate;
    //return JQuery.datepicker()
}
      
// controller functions   

function saveAddNewDialog() {
var dlg = $jq("#taskDialogAdd");
    //var thedate = jQuery.datepicker.formatDate("mm/dd/y", dlg.find("#addDialogDatePicker").val());
    //alert(thedate.toGMTString());
    var thedate = dlg.find("#addDialogDatePicker").val(); 
    var oktosave = true;
      
          //        thedate = thedate.toUTCString();
    //var utc = Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds(), local.getMilliseconds());
    //var tz = (utc - local.getTime()) / (60 * 60 * 1000);    
      
    thedate = formatDateforSaving(thedate);
    errormsg = "";
    if (dlg.find("#addDialogSubject").val() == "") {
        oktosave = false;
        errormsg += "The subject is missing.<br>";
    }
    if (dlg.find("#addDialogDescription").val() == "") {
        oktosave = false;
        errormsg += "The note is missing.<br>";
    }
    
    if (dlg.find("#addDialogDatePicker").val() == "") {
        oktosave = false;
        errormsg += "The date is missing. <br>";
    }
    //alert('the company is ' + currentCompanyId + ' and the contact is ' + dlg.find("#addDialogContacts").val());

    if ((currentCompanyId === null ||currentCompanyId == "") && dlg.find("#addDialogContacts").val() == "") {
        oktosave = false;
        errormsg += "You must have at least one valid contact or company to create a task.<br.";
    }
    
    if (currentCompanyId == "") {
        currentCompanyId = null;        
    }
    if (dlg.find("#addDialogCompany").val().length > 0 && currentCompanyId == null) {
        oktosave = false;
        errormsg += "Please enter a valid company.<br>";    
    }
    
    if (oktosave) {
        var mytask = {
            m_Subject: dlg.find("#addDialogSubject").val(),
            m_ActivityDateString: thedate,
            m_Classification: dlg.find("#addDialogClass").val(),
            m_Description: dlg.find("#addDialogDescription").val(),
            m_OtherContacts: currentContactList,
            m_CompanyId: currentCompanyId,
            m_OwnerId: theuserid
        };  
        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.MyTasksController.addNewTask}',
        mytask,
        function(result,event ) {
            if ( result ) {
                $jq('#mybody').empty();
                //alert('Your task was successfully created.');
                //openGeneralDialog('Your task was successfully created.',"Success");
                getMyTasks(theuserid);
            }
            else {
                //alert("An error has occurred and your task could not be created.")
                openGeneralDialog('An error has occurred and your task could not be created.',"Error");
            }
        }); 
        return true;
    }
    else {
        openGeneralDialog(errormsg,"Error");
        return false;
    }
}
function saveEditDialog(deal_id) {
    var dlg = $jq("#taskDialog");
    var oktosave = true;
 
    errormsg = "";
    if (dlg.find("#editDialogSubject").val() == "") {
        oktosave = false;
        errormsg += "The subject is missing.<br>";
    }
    if (dlg.find("#editDialogDescription").val() == "") {
        oktosave = false;
        errormsg += "The note is missing.<br>";
    }
    
    if (dlg.find("#editDialogDatePicker").val() == "") {
        oktosave = false;
        errormsg += "The date is missing. <br>";
    }
    
    if (dlg.find("#editDialogCompany").val() == "" && dlg.find("#editDialogContacts").val() == "") {
        oktosave = false;
        errormsg += "You must have at least contact or company to edit a task.";
    }
    
    
    if (oktosave) {
        var thedate = dlg.find("#editDialogDatePicker").val();
        if (thedate !== '') {
            thedate = formatDateforSaving(dlg.find("#editDialogDatePicker").val());
            
        }   
        var mytask = {
                m_Subject: dlg.find("#editDialogSubject").val(),
                m_ActivityDateString: thedate,
                m_Classification: dlg.find("#editDialogClass").val(),
                m_Description: dlg.find("#editDialogDescription").val(),
                m_OtherContacts: currentContactList,
                m_CompanyId: currentCompanyId
            };
         Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.MyTasksController.updateTask}',
        deal_id,
        mytask,
        function(result,event ) {
            if ( result ) {
                $jq('#mybody').empty();
                //alert('Your task was successfully updated.');
                //openGeneralDialog('Your task was successfully updated.',"Success");
                getMyTasks(theuserid);
            }
            else {
                //alert("An error has occurred and your task could not be saved.")
                openGeneralDialog('An error has occurred and your task could not be saved.',"Error");
            }
        });
        return true;
    }     
    else {
        openGeneralDialog(errormsg,"Error");
        return false;
    }
}     
function saveCloseDialog(deal_id) {
    var dlg = $jq("#taskDialog");
    
 /* if (currentAccountId != null)
        currentContactList.push({m_Id: currentAccountId});
    */
    thedate = dlg.find("#editDialogDatePicker").val();
    thedate = formatDateforSaving(dlg.find("#editDialogDatePicker").val());
    var mytask = {
        m_Subject: dlg.find("#editDialogSubject").val(),
        m_ActivityDateString: thedate,
        m_Classification: dlg.find("#editDialogClass").val(),
        m_Description: dlg.find("#editDialogDescription").val(),
        m_OtherContacts: currentContactList,
        m_CompanyId: currentCompanyId
    };  
    
    //save for followup task
    followupContactList = currentContactList;
    followupCompany.id = currentCompanyId;
    followupCompany.name = dlg.find("#editDialogCompany").val();
    followupContactNames = dlg.find("#editDialogContacts").val();
    //alert('mytask is ' + JSON.stringify(mytask));
    //var followupTaskInfo = {subject: null, classification: null, note: null, activitydate: null};
    followupTaskInfo.subject = dlg.find("#editDialogSubject").val();
    followupTaskInfo.note = dlg.find("#editDialogDescription").val();
    followupTaskInfo.activitydate = dlg.find("#editDialogDatePicker").val();
    followupTaskInfo.classification = dlg.find("#editDialogClass").val();
    
     Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.MyTasksController.closeTask}',
    deal_id,
    mytask,
    function(result,event ) {
        if ( result ) {
            $jq('#mybody').empty();
            getMyTasks(theuserid);
            //alert('Your task was successfully completed. Would you like to create a follow up task?');
            $jq('#confirmDialogLabel').empty();
            $jq('#confirmDialogLabel').append('Your task was successfully completed. <br>Would you like to create a follow-up task?');
            $jq('#confirmDialog').dialog({
            modal: true, 
            position: 'center',
            width: 320,
            height: 160,              
            title: 'Create Follow-Up Task',
            buttons: {
                "Yes": function() {
                    $jq(this).dialog("close");
                    showAddNewFollowupTaskDialog();
                    
                },
                "No": function() {
                   // alert('editcommentarydialog: from cancel button');
                    $jq(this).dialog("close");
                    
                }
            }              
        });
            
        }
        else {
            //alert("An error has occurred and your task could not be saved.")
            openGeneralDialog('An error has occurred and your task could not be closed.',"Error");
        }
    }); 
}
function getMyTasks(currentuserid) {
      Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.MyTasksController.getUserTaskSummary}',
          currentuserid,
          function(result, event) {
             var source = $jq("#mytasks-template").html(); 
             var template = Handlebars.compile(source); 
             $jq('#mybody').append(template({tasks : result}));
             mytasklist = result;
             
             /*
             $jq('#deals').tablesorter();   
             $jq("TABLE#deals tr.dealdetail:odd").css("background-color", "#eeeeee");
             $jq("TABLE#deals tr.dealdetail:even").css("background-color", "#ffffff");
             */
             $jq("TABLE#deals .task-description").truncate({max_length:80});
                                     
             cookievalue =  getCookie("sortfilter");
             if (cookievalue === "") {
                 setCookie("sortfilter", "4", 5);
             }                               
             $jq('#mytaskFilterDD').val(cookievalue);       
             filterTasks(false); 
             $jq('#mybody').show();
             $jq('.wait-panel').hide();    
             $jq('#deals').tablesorter({
               widgets: ["zebra"],
               widgetOptions : {
                  zebra : [ "even", "odd" ]
                }
             });
          });    
  };
  
 function getTaskCatList() {
    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.MyTasksController.getClassificationList}',
    function(result, event) {
                    if ( (event.status) && (result) ) {
                        taskCatList = result;
                    }
    });
   
 }
function showStaffingDialog(event, contactInfos) {    
        var deal_name = "test";// $jq("#dealname").val();       
        event.preventDefault();     
        var dlg = $jq("#staffingdialog");       
                
        dlg.dialog("open");
    
        //dlg.dialog("option" , "title" , 'Enter Deal Team for deal-\"'+deal_name+'\"');
        dlg.dialog("option", "title", 'Enter Contact(s)');
        dlg.dialog('option', 'position', 'center');
        
        var dlg_template = Handlebars.compile($jq("#staffing-dialog-template").html());         
        
        $jq('#dealteam').empty();
        dlg.find('#staffing-dialog-content').html(dlg_template({dealname: deal_name,staff: ''}));
        $jq('#dealteam').sortable();
        
       // alert('contactinfos ' + JSON.stringify(contactInfos));
        _.each(contactInfos, function(elem, index) {
            //alert(contactInfos.length+':'+elem.label+':'+elem.id+':'+elem.id+':'+elem.contact_id+':'+elem.user_initial);
            var entry = $jq("#dealteam li[data-contact-id='" + elem.contact_id + "']");
            if (entry.length == 0) {
                var divelem = $jq('<div>');
                //divelem.append(elem.label + ' (' + elem.company_name + ')');
                divelem.append(elem.label); 
                divelem.append("<a href='#' class='delete-user'><span class='ui-icon ui-icon-circle-close'></span></a>");
                var listelem = $jq('<li>');
                listelem.attr('data-user-id', elem.id);
                listelem.attr('data-contact-id', elem.contact_id);
                listelem.attr('data-user-initial', elem.user_initial);
                listelem.append(divelem);
                $jq('#dealteam').append(listelem);
                
            } else {
                entry.children('div').stop().fadeOut(300).fadeIn(300);
            }
        });
        
        dlg.find('#staff-searcher').focus();
        $jq("#staffingdialog input:text, #staffingdialog textarea").eq(0).focus();
        
        $jq("#staff-searcher").autocomplete({
            source: function(request, response) {
                MyTasksController.getContactsList(
                request.term, 
                function(data, event) {
                    response($jq.map(data, function(item) {
                        var full_label = item.label + ' (' + item.company_name + ')'; 
                        return {label: full_label,
                                value: full_label,
                                   id: item.user_id,
                           contact_id: item.contact_id,
                         user_initial: item.initials,
                   contact_company_id: item.account_id}
                    }));
                });
            },
            minLength: 2,
            select: function(event, ui) {
                event.preventDefault();
                if (ui.item) {
                    var entry = $jq("#dealteam li[data-contact-id='" + ui.item.contact_id + "']");
                    if (entry.length == 0) {
                        var divelem = $jq('<div>');
                        divelem.append(ui.item.label);
                        divelem.append("<a href='#' class='delete-user'><span class='ui-icon ui-icon-circle-close'></span></a>");
                        var listelem = $jq('<li>');
                        listelem.attr('data-user-id', ui.item.id);
                        listelem.attr('data-contact-id', ui.item.contact_id);
                        listelem.attr('data-user-initial', ui.item.user_initial);
                        listelem.attr('data-contact-company-id', ui.item.contact_company_id);
                        listelem.append(divelem);
                        $jq('#dealteam').append(listelem);
                    } else {
                        entry.children('div').stop().fadeOut(300).fadeIn(300);
                    }
                    $jq("#staff-searcher").val('');
                } else {
                    //alert('Nothing Selected.');
                }
            }
        });
        
        $jq("#dealteam").on('click', 'a.delete-user', function(event) {
            event.preventDefault();
            $jq(this).parents('li').remove();
        });
        
        return false;
    }
      
  // helper js
  function normalizeDateExtended(mydate){
    mydate = new Date(mydate);
    data = new Date(mydate -  mydate.getTimezoneOffset() * 60000);
    var d = mydate.getDate();
    var m = mydate.getMonth()+1;
    var y = mydate.getFullYear();
    return ''+ (m<=9?'0'+m:m) +'-' + (d<=9?'0'+d:d)+'-' + y;
}    
  
  
  function pad(num) {
    norm = Math.abs(Math.floor(num));
    return (norm < 10 ? '0' : '') + norm;
}
function normalizeDate(mydate){
   mydate = new Date(mydate );
   mydate = new Date(mydate - mydate.getTimezoneOffset() * 60000);
   return mydate;
 }
function formatLocalDate(mydate) {
    var local = new Date(mydate);
    var tzo = -local.getTimezoneOffset();
    var sign = tzo >= 0 ? '+' : '-';
    return local.getFullYear() 
        + '-' + pad(local.getMonth()+1)
        + '-' + pad(local.getDate())
        + 'T' + pad(local.getHours())
        + ':' + pad(local.getMinutes()) 
        + ':' + pad(local.getSeconds()) 
        + sign + pad(tzo / 60) 
        + ':' + pad(tzo % 60);
}
function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
function setCookie(cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + (exdays*24*60*60*1000));
    var expires = "expires="+d.toGMTString();
    document.cookie = cname + "=" + cvalue + "; " + expires;
}

function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1);
        if (c.indexOf(name) != -1) return c.substring(name.length, c.length);
    }
    return "";
}

function convertToUTC(context) {
    var _d = new Date(context);
            //var _d = normalizeDate(context);
            //alert('the date is ' + _d);
            var month = _d.getUTCMonth();
            var day = _d.getUTCDate();
            var yr = _d.getUTCFullYear();
            var hours = _d.getUTCHours();
            var min = _d.getUTCMinutes();
            var seconds = _d.getUTCSeconds();
            
            return new Date(yr, month, day, hours, min, seconds, 0);
}

function HTMLDecode(s){
    return jQuery('<div></div>').html(s).text();
}    
  // Handlebar helper functions
   Handlebars.registerHelper('date', function(context, block) {
        if (context) {
            var attrs = block.hash;
            var format = "m/d/y";
            //alert('context is ' + context);
            var newDate = convertToUTC(context);
            //var newDate = new Date(_d.toISOString());
            return jQuery.datepicker.formatDate(format, newDate);
            //return _d.toISOString();
        }
        return "";
    });
    Handlebars.registerHelper('numberformat', function(context, block) {
        if (context) {
            
            return numberWithCommas(context);
        }
        return "";
    });
    Handlebars.registerHelper('listlist', function(context, block) {
        if (context) {
            var attrs = block.hash;
            _value = _.map(context, function(listinfo) {
                return "<a href='/"+ listinfo.m_Id + "' class='showdealdetail' title='" + listinfo.m_FullName + "'>" + listinfo.m_Name + "</a>";
            });
            return new Handlebars.SafeString(_value.join("<br/>"));
        }
        return "";
    });
    Handlebars.registerHelper('HTMLDecode', function(context, block) {
        if (context) {
            var attrs = block.hash;
            
            return $jq('<div></div>').html(context).text();
        }
        return "";
    });
    Handlebars.registerHelper('listArray', function(context, block) {
        if (context) {
            var attrs = block.hash;
            
                
            _value = _.map(context, function(listinfo) {
                //alert('listinfo is ' + context);
                return  listinfo ;
            });
            return new Handlebars.SafeString(_value.join("<br/>"));
        }
        return "";
    });
    Handlebars.registerHelper('listNotes', function(context, block) {
        if (context) {
            var attrs = block.hash;
            _value = _.map(context, function(listinfo) {
                //var Adate = date listinfo.m_ActivityDate
                var _d = '';
                if (typeof listinfo.m_ActivityDate !== 'undefined') {
                    var format = "mm/dd/yy";
                    _d = jQuery.datepicker.formatDate(format, convertToUTC(listinfo.m_ActivityDate));
                }
                var _n = listinfo.m_Note;
                if (typeof _n === "undefined")
                    _n = "";
                return "<a href='/"+ listinfo.m_Id + "'><b>" + _d + " (" + listinfo.m_Classification + ") </b>" + _n + "</a>";
            });
            return new Handlebars.SafeString(_value.join("<p/>"));
        }
        return "";
    });
    //
    
    Handlebars.registerHelper('icon', function(context, block) {
       // var thedate = jQuery.datepicker(context);
        var todaydate = new Date();
        
        if (context > todaydate) {
            return "<span style='float:left' class='deal-icon deal-review'></span>"
        }
        
        return "<span style='float:left' class='deal-icon deal-dead'></span>";
    });
   
(function($jq) {

  var trailing_whitespace = true;

  $jq.fn.truncate = function(options) {

    var opts = $jq.extend({}, $jq.fn.truncate.defaults, options);
    
    $jq(this).each(function() {

      var content_length = $jq.trim(squeeze($jq(this).text())).length;
      if (content_length <= opts.max_length)
        return;  // bail early if not overlong

      var actual_max_length = opts.max_length - opts.more.length - 3;  // 3 for " ()"
      var truncated_node = recursivelyTruncate(this, actual_max_length);
      var full_node = $jq(this).hide();

      truncated_node.insertAfter(full_node);
      
      findNodeForMore(truncated_node).append(' (<a href="#show more content">'+opts.more+'</a>)');
      findNodeForLess(full_node).append(' (<a href="#show less content">'+opts.less+'</a>)');
      
      truncated_node.find('a:last').click(function() {
        truncated_node.hide(); full_node.show(); return false;
      });
      full_node.find('a:last').click(function() {
        truncated_node.show(); full_node.hide(); return false;
      });

    });
  }

  // Note that the " (â€¦more)" bit counts towards the max length â€“ so a max
  // length of 10 would truncate "1234567890" to "12 (â€¦more)".
  $jq.fn.truncate.defaults = {
    max_length: 100,
    more: '...more',
    less: 'less'
  };

  function recursivelyTruncate(node, max_length) {
    return (node.nodeType == 3) ? truncateText(node, max_length) : truncateNode(node, max_length);
  }

  function truncateNode(node, max_length) {
    var node = $jq(node);
    var new_node = node.clone().empty();
    var truncatedChild;
    node.contents().each(function() {
      var remaining_length = max_length - new_node.text().length;
      if (remaining_length == 0) return;  // breaks the loop
      truncatedChild = recursivelyTruncate(this, remaining_length);
      if (truncatedChild) new_node.append(truncatedChild);
    });
    return new_node;
  }

  function truncateText(node, max_length) {
    var text = squeeze(node.data);
    if (trailing_whitespace)  // remove initial whitespace if last text
      text = text.replace(/^ /, '');  // node had trailing whitespace.
    trailing_whitespace = !!text.match(/ $/);
    var text = text.slice(0, max_length);
    // Ensure HTML entities are encoded
    // http://debuggable.com/posts/encode-html-entities-with-jquery:480f4dd6-13cc-4ce9-8071-4710cbdd56cb
    text = $jq('<div/>').text(text).html();
    return text;
  }

  // Collapses a sequence of whitespace into a single space.
  function squeeze(string) {
    return string.replace(/\s+/g, ' ');
  }
  
  // Finds the last, innermost block-level element
  function findNodeForMore(node) {
    var $node = $jq(node);
    var last_child = $node.children(":last");
    if (!last_child) return node;
    var display = last_child.css('display');
    if (!display || display=='inline') return $node;
    return findNodeForMore(last_child);
  };

  // Finds the last child if it's a p; otherwise the parent
  function findNodeForLess(node) {
    var $node = $jq(node);
    var last_child = $node.children(":last");
    if (last_child && last_child.is('p')) return last_child;
    return node;
  };

})(jQuery);
/* End of Truncate function */
   
</script>
</apex:page>